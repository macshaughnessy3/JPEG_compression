-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity color_convert_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    stream_in_48_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    stream_in_48_TVALID : IN STD_LOGIC;
    stream_in_48_TREADY : OUT STD_LOGIC;
    stream_in_48_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    stream_in_48_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    stream_in_48_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_48_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_out_48_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    stream_out_48_TVALID : OUT STD_LOGIC;
    stream_out_48_TREADY : IN STD_LOGIC;
    stream_out_48_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    stream_out_48_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    stream_out_48_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_out_48_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of color_convert_2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "color_convert_2_color_convert_2,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.038500,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=588,HLS_SYN_LUT=656,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv11_10 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_const_lv13_80 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal stream_in_48_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_out_48_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal curr_pixel_data_reg_776 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal regslice_both_stream_out_48_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal curr_pixel_data_reg_776_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal curr_pixel_keep_reg_781 : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_pixel_keep_reg_781_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_pixel_strb_reg_786 : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_pixel_strb_reg_786_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_pixel_user_reg_791 : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_pixel_user_reg_791_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_pixel_last_reg_796 : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_pixel_last_reg_796_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal b_reg_801 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln102_2_fu_291_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_2_reg_806 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_reg_811 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_reg_816 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln103_1_fu_363_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_1_reg_821 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_3_fu_445_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_3_reg_826 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1_reg_831 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln104_fu_493_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln104_reg_836 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln104_1_fu_531_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln104_1_reg_841 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_6_reg_846 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln_reg_851 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln1_reg_856 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2_reg_861 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln102_fu_217_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln102_1_fu_229_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln_fu_221_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln102_1_fu_233_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln102_fu_241_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln102_1_fu_245_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_fu_255_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln102_fu_249_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln102_2_fu_265_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln102_2_fu_273_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln102_3_fu_277_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal g_fu_197_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln102_1_fu_281_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln102_4_fu_287_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln103_fu_317_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln103_1_fu_329_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1_fu_321_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln103_1_fu_333_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln103_fu_341_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln103_1_fu_345_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln103_fu_349_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln103_2_fu_355_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln103_3_fu_359_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_8_fu_369_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_387_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln103_2_fu_379_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln103_3_fu_397_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln103_5_fu_405_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln103_6_fu_409_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_s_fu_419_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln103_2_fu_413_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln103_4_fu_429_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln103_7_fu_437_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln103_8_fu_441_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln104_fu_461_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln104_1_fu_473_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2_fu_465_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln104_1_fu_477_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln104_fu_485_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln104_1_fu_489_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_fu_499_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln104_2_fu_509_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln104_2_fu_517_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln104_fu_521_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln104_3_fu_527_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln102_3_fu_547_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln102_5_fu_554_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln102_6_fu_557_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln102_4_fu_567_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln102_3_fu_561_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln102_7_fu_574_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln102_4_fu_578_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln102_8_fu_584_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln102_5_fu_587_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln103_4_fu_603_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln103_fu_606_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln103_fu_612_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln103_9_fu_616_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln103_5_fu_625_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln103_10_fu_632_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln103_11_fu_636_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln103_2_fu_640_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln103_1_fu_619_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln103_1_fu_646_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln103_4_fu_650_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln104_fu_666_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln104_1_fu_669_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln104_3_fu_678_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln104_4_fu_685_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln104_2_fu_672_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln104_1_fu_689_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln104_2_fu_695_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln104_5_fu_699_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln104_3_fu_703_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal Y_fu_719_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln103_2_fu_728_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal Cb_fu_731_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln104_3_fu_741_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal Cr_fu_744_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln103_3_fu_737_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln102_9_fu_724_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_750_p4 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln108_fu_760_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_stream_in_48_V_data_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_48_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_in_48_TVALID_int_regslice : STD_LOGIC;
    signal stream_in_48_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_in_48_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_48_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_48_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_stream_in_48_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_48_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_48_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_48_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_stream_in_48_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_48_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_48_V_user_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_48_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_stream_in_48_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_48_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_48_V_last_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_48_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_stream_in_48_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_48_V_last_V_U_ack_in : STD_LOGIC;
    signal stream_out_48_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_out_48_TVALID_int_regslice : STD_LOGIC;
    signal stream_out_48_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_out_48_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_48_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_48_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_48_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_48_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_48_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_48_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_48_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_48_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_48_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_48_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_48_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_48_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component color_convert_2_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_stream_in_48_V_data_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_48_TDATA,
        vld_in => stream_in_48_TVALID,
        ack_in => regslice_both_stream_in_48_V_data_V_U_ack_in,
        data_out => stream_in_48_TDATA_int_regslice,
        vld_out => stream_in_48_TVALID_int_regslice,
        ack_out => stream_in_48_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_48_V_data_V_U_apdone_blk);

    regslice_both_stream_in_48_V_keep_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_48_TKEEP,
        vld_in => stream_in_48_TVALID,
        ack_in => regslice_both_stream_in_48_V_keep_V_U_ack_in,
        data_out => stream_in_48_TKEEP_int_regslice,
        vld_out => regslice_both_stream_in_48_V_keep_V_U_vld_out,
        ack_out => stream_in_48_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_48_V_keep_V_U_apdone_blk);

    regslice_both_stream_in_48_V_strb_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_48_TSTRB,
        vld_in => stream_in_48_TVALID,
        ack_in => regslice_both_stream_in_48_V_strb_V_U_ack_in,
        data_out => stream_in_48_TSTRB_int_regslice,
        vld_out => regslice_both_stream_in_48_V_strb_V_U_vld_out,
        ack_out => stream_in_48_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_48_V_strb_V_U_apdone_blk);

    regslice_both_stream_in_48_V_user_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_48_TUSER,
        vld_in => stream_in_48_TVALID,
        ack_in => regslice_both_stream_in_48_V_user_V_U_ack_in,
        data_out => stream_in_48_TUSER_int_regslice,
        vld_out => regslice_both_stream_in_48_V_user_V_U_vld_out,
        ack_out => stream_in_48_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_48_V_user_V_U_apdone_blk);

    regslice_both_stream_in_48_V_last_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_48_TLAST,
        vld_in => stream_in_48_TVALID,
        ack_in => regslice_both_stream_in_48_V_last_V_U_ack_in,
        data_out => stream_in_48_TLAST_int_regslice,
        vld_out => regslice_both_stream_in_48_V_last_V_U_vld_out,
        ack_out => stream_in_48_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_48_V_last_V_U_apdone_blk);

    regslice_both_stream_out_48_V_data_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_out_48_TDATA_int_regslice,
        vld_in => stream_out_48_TVALID_int_regslice,
        ack_in => stream_out_48_TREADY_int_regslice,
        data_out => stream_out_48_TDATA,
        vld_out => regslice_both_stream_out_48_V_data_V_U_vld_out,
        ack_out => stream_out_48_TREADY,
        apdone_blk => regslice_both_stream_out_48_V_data_V_U_apdone_blk);

    regslice_both_stream_out_48_V_keep_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => curr_pixel_keep_reg_781_pp0_iter1_reg,
        vld_in => stream_out_48_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_48_V_keep_V_U_ack_in_dummy,
        data_out => stream_out_48_TKEEP,
        vld_out => regslice_both_stream_out_48_V_keep_V_U_vld_out,
        ack_out => stream_out_48_TREADY,
        apdone_blk => regslice_both_stream_out_48_V_keep_V_U_apdone_blk);

    regslice_both_stream_out_48_V_strb_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => curr_pixel_strb_reg_786_pp0_iter1_reg,
        vld_in => stream_out_48_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_48_V_strb_V_U_ack_in_dummy,
        data_out => stream_out_48_TSTRB,
        vld_out => regslice_both_stream_out_48_V_strb_V_U_vld_out,
        ack_out => stream_out_48_TREADY,
        apdone_blk => regslice_both_stream_out_48_V_strb_V_U_apdone_blk);

    regslice_both_stream_out_48_V_user_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => curr_pixel_user_reg_791_pp0_iter1_reg,
        vld_in => stream_out_48_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_48_V_user_V_U_ack_in_dummy,
        data_out => stream_out_48_TUSER,
        vld_out => regslice_both_stream_out_48_V_user_V_U_vld_out,
        ack_out => stream_out_48_TREADY,
        apdone_blk => regslice_both_stream_out_48_V_user_V_U_apdone_blk);

    regslice_both_stream_out_48_V_last_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => curr_pixel_last_reg_796_pp0_iter1_reg,
        vld_in => stream_out_48_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_48_V_last_V_U_ack_in_dummy,
        data_out => stream_out_48_TLAST,
        vld_out => regslice_both_stream_out_48_V_last_V_U_vld_out,
        ack_out => stream_out_48_TREADY,
        apdone_blk => regslice_both_stream_out_48_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln102_2_reg_806 <= add_ln102_2_fu_291_p2;
                    add_ln103_1_reg_821(17 downto 1) <= add_ln103_1_fu_363_p2(17 downto 1);
                    add_ln103_3_reg_826(17 downto 1) <= add_ln103_3_fu_445_p2(17 downto 1);
                b_reg_801 <= stream_in_48_TDATA_int_regslice(47 downto 32);
                curr_pixel_data_reg_776 <= stream_in_48_TDATA_int_regslice;
                curr_pixel_data_reg_776_pp0_iter1_reg <= curr_pixel_data_reg_776;
                curr_pixel_keep_reg_781 <= stream_in_48_TKEEP_int_regslice;
                curr_pixel_keep_reg_781_pp0_iter1_reg <= curr_pixel_keep_reg_781;
                curr_pixel_last_reg_796 <= stream_in_48_TLAST_int_regslice;
                curr_pixel_last_reg_796_pp0_iter1_reg <= curr_pixel_last_reg_796;
                curr_pixel_strb_reg_786 <= stream_in_48_TSTRB_int_regslice;
                curr_pixel_strb_reg_786_pp0_iter1_reg <= curr_pixel_strb_reg_786;
                curr_pixel_user_reg_791 <= stream_in_48_TUSER_int_regslice;
                curr_pixel_user_reg_791_pp0_iter1_reg <= curr_pixel_user_reg_791;
                    sub_ln104_1_reg_841(17 downto 1) <= sub_ln104_1_fu_531_p2(17 downto 1);
                    sub_ln104_reg_836(16 downto 4) <= sub_ln104_fu_493_p2(16 downto 4);
                tmp_1_reg_831 <= stream_in_48_TDATA_int_regslice(40 downto 32);
                tmp_4_reg_811 <= stream_in_48_TDATA_int_regslice(43 downto 32);
                tmp_5_reg_816 <= stream_in_48_TDATA_int_regslice(44 downto 32);
                tmp_6_reg_846 <= stream_in_48_TDATA_int_regslice(46 downto 32);
                trunc_ln1_reg_856 <= add_ln103_4_fu_650_p2(19 downto 8);
                trunc_ln2_reg_861 <= sub_ln104_3_fu_703_p2(19 downto 8);
                trunc_ln_reg_851 <= add_ln102_5_fu_587_p2(18 downto 8);
            end if;
        end if;
    end process;
    add_ln103_1_reg_821(0) <= '0';
    add_ln103_3_reg_826(0) <= '0';
    sub_ln104_reg_836(3 downto 0) <= "0000";
    sub_ln104_1_reg_841(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Cb_fu_731_p2 <= std_logic_vector(signed(sext_ln103_2_fu_728_p1) + signed(ap_const_lv13_80));
    Cr_fu_744_p2 <= std_logic_vector(signed(sext_ln104_3_fu_741_p1) + signed(ap_const_lv13_80));
    Y_fu_719_p2 <= std_logic_vector(unsigned(trunc_ln_reg_851) + unsigned(ap_const_lv11_10));
    add_ln102_1_fu_281_p2 <= std_logic_vector(unsigned(zext_ln102_2_fu_273_p1) + unsigned(zext_ln102_3_fu_277_p1));
    add_ln102_2_fu_291_p2 <= std_logic_vector(unsigned(add_ln102_1_fu_281_p2) + unsigned(zext_ln102_4_fu_287_p1));
    add_ln102_3_fu_561_p2 <= std_logic_vector(unsigned(zext_ln102_5_fu_554_p1) + unsigned(zext_ln102_6_fu_557_p1));
    add_ln102_4_fu_578_p2 <= std_logic_vector(unsigned(add_ln102_3_fu_561_p2) + unsigned(zext_ln102_7_fu_574_p1));
    add_ln102_5_fu_587_p2 <= std_logic_vector(unsigned(add_ln102_4_fu_578_p2) + unsigned(zext_ln102_8_fu_584_p1));
    add_ln102_fu_249_p2 <= std_logic_vector(unsigned(zext_ln102_fu_241_p1) + unsigned(zext_ln102_1_fu_245_p1));
    add_ln103_1_fu_363_p2 <= std_logic_vector(unsigned(zext_ln103_2_fu_355_p1) + unsigned(zext_ln103_3_fu_359_p1));
    add_ln103_2_fu_413_p2 <= std_logic_vector(unsigned(zext_ln103_5_fu_405_p1) + unsigned(zext_ln103_6_fu_409_p1));
    add_ln103_3_fu_445_p2 <= std_logic_vector(unsigned(zext_ln103_7_fu_437_p1) + unsigned(zext_ln103_8_fu_441_p1));
    add_ln103_4_fu_650_p2 <= std_logic_vector(unsigned(sub_ln103_1_fu_619_p2) + unsigned(sext_ln103_1_fu_646_p1));
    add_ln103_fu_349_p2 <= std_logic_vector(unsigned(zext_ln103_fu_341_p1) + unsigned(zext_ln103_1_fu_345_p1));
    add_ln104_1_fu_689_p2 <= std_logic_vector(unsigned(zext_ln103_11_fu_636_p1) + unsigned(zext_ln104_4_fu_685_p1));
    add_ln104_fu_521_p2 <= std_logic_vector(unsigned(zext_ln103_5_fu_405_p1) + unsigned(zext_ln104_2_fu_517_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_block_state4_pp0_stage0_iter3)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_block_state4_pp0_stage0_iter3, stream_out_48_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((stream_out_48_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((stream_out_48_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_block_state4_pp0_stage0_iter3, stream_out_48_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((stream_out_48_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((stream_out_48_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(stream_in_48_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (stream_in_48_TVALID_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(stream_out_48_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (stream_out_48_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(regslice_both_stream_out_48_V_data_V_U_apdone_blk, stream_out_48_TREADY_int_regslice)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((stream_out_48_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_stream_out_48_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    g_fu_197_p4 <= stream_in_48_TDATA_int_regslice(31 downto 16);
        sext_ln103_1_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln103_2_fu_640_p2),20));

        sext_ln103_2_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_reg_856),13));

        sext_ln103_3_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(Cb_fu_731_p2),16));

        sext_ln103_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln103_fu_606_p2),20));

        sext_ln104_1_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln104_1_reg_841),19));

        sext_ln104_2_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln104_2_fu_672_p2),20));

        sext_ln104_3_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_reg_861),13));

        sext_ln104_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln104_reg_836),19));

        sext_ln108_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_750_p4),48));

    shl_ln102_1_fu_233_p3 <= (trunc_ln102_1_fu_229_p1 & ap_const_lv1_0);
    shl_ln102_2_fu_265_p3 <= (tmp_3_fu_255_p4 & ap_const_lv7_0);
    shl_ln102_3_fu_547_p3 <= (tmp_4_reg_811 & ap_const_lv4_0);
    shl_ln102_4_fu_567_p3 <= (tmp_5_reg_816 & ap_const_lv3_0);
    shl_ln103_1_fu_333_p3 <= (trunc_ln103_1_fu_329_p1 & ap_const_lv2_0);
    shl_ln103_2_fu_379_p3 <= (tmp_8_fu_369_p4 & ap_const_lv6_0);
    shl_ln103_3_fu_397_p3 <= (tmp_9_fu_387_p4 & ap_const_lv3_0);
    shl_ln103_4_fu_429_p3 <= (tmp_s_fu_419_p4 & ap_const_lv1_0);
    shl_ln103_5_fu_625_p3 <= (tmp_1_reg_831 & ap_const_lv7_0);
    shl_ln104_1_fu_477_p3 <= (trunc_ln104_1_fu_473_p1 & ap_const_lv4_0);
    shl_ln104_2_fu_509_p3 <= (tmp_2_fu_499_p4 & ap_const_lv5_0);
    shl_ln104_3_fu_678_p3 <= (tmp_6_reg_846 & ap_const_lv1_0);
    shl_ln1_fu_321_p3 <= (trunc_ln103_fu_317_p1 & ap_const_lv5_0);
    shl_ln2_fu_465_p3 <= (trunc_ln104_fu_461_p1 & ap_const_lv7_0);
    shl_ln_fu_221_p3 <= (trunc_ln102_fu_217_p1 & ap_const_lv6_0);

    stream_in_48_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, stream_in_48_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_48_TDATA_blk_n <= stream_in_48_TVALID_int_regslice;
        else 
            stream_in_48_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_48_TREADY <= regslice_both_stream_in_48_V_data_V_U_ack_in;

    stream_in_48_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_48_TREADY_int_regslice <= ap_const_logic_1;
        else 
            stream_in_48_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    stream_out_48_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, stream_out_48_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            stream_out_48_TDATA_blk_n <= stream_out_48_TREADY_int_regslice;
        else 
            stream_out_48_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_48_TDATA_int_regslice <= (curr_pixel_data_reg_776_pp0_iter1_reg(63 downto 48) & sext_ln108_fu_760_p1);
    stream_out_48_TVALID <= regslice_both_stream_out_48_V_data_V_U_vld_out;

    stream_out_48_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            stream_out_48_TVALID_int_regslice <= ap_const_logic_1;
        else 
            stream_out_48_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln103_1_fu_619_p2 <= std_logic_vector(signed(sext_ln103_fu_612_p1) - signed(zext_ln103_9_fu_616_p1));
    sub_ln103_2_fu_640_p2 <= std_logic_vector(unsigned(zext_ln103_10_fu_632_p1) - unsigned(zext_ln103_11_fu_636_p1));
    sub_ln103_fu_606_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(zext_ln103_4_fu_603_p1));
    sub_ln104_1_fu_531_p2 <= std_logic_vector(unsigned(zext_ln104_3_fu_527_p1) - unsigned(zext_ln103_8_fu_441_p1));
    sub_ln104_2_fu_672_p2 <= std_logic_vector(signed(sext_ln104_fu_666_p1) - signed(sext_ln104_1_fu_669_p1));
    sub_ln104_3_fu_703_p2 <= std_logic_vector(signed(sext_ln104_2_fu_695_p1) - signed(zext_ln104_5_fu_699_p1));
    sub_ln104_fu_493_p2 <= std_logic_vector(unsigned(zext_ln104_fu_485_p1) - unsigned(zext_ln104_1_fu_489_p1));
    tmp_2_fu_499_p4 <= stream_in_48_TDATA_int_regslice(26 downto 16);
    tmp_3_fu_255_p4 <= stream_in_48_TDATA_int_regslice(24 downto 16);
    tmp_8_fu_369_p4 <= stream_in_48_TDATA_int_regslice(25 downto 16);
    tmp_9_fu_387_p4 <= stream_in_48_TDATA_int_regslice(28 downto 16);
    tmp_fu_750_p4 <= ((Cr_fu_744_p2 & sext_ln103_3_fu_737_p1) & zext_ln102_9_fu_724_p1);
    tmp_s_fu_419_p4 <= stream_in_48_TDATA_int_regslice(30 downto 16);
    trunc_ln102_1_fu_229_p1 <= stream_in_48_TDATA_int_regslice(15 - 1 downto 0);
    trunc_ln102_fu_217_p1 <= stream_in_48_TDATA_int_regslice(10 - 1 downto 0);
    trunc_ln103_1_fu_329_p1 <= stream_in_48_TDATA_int_regslice(14 - 1 downto 0);
    trunc_ln103_fu_317_p1 <= stream_in_48_TDATA_int_regslice(11 - 1 downto 0);
    trunc_ln104_1_fu_473_p1 <= stream_in_48_TDATA_int_regslice(12 - 1 downto 0);
    trunc_ln104_fu_461_p1 <= stream_in_48_TDATA_int_regslice(9 - 1 downto 0);
    zext_ln102_1_fu_245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln102_1_fu_233_p3),17));
    zext_ln102_2_fu_273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_fu_249_p2),18));
    zext_ln102_3_fu_277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln102_2_fu_265_p3),18));
    zext_ln102_4_fu_287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g_fu_197_p4),18));
    zext_ln102_5_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_2_reg_806),19));
    zext_ln102_6_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln102_3_fu_547_p3),19));
    zext_ln102_7_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln102_4_fu_567_p3),19));
    zext_ln102_8_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_reg_801),19));
    zext_ln102_9_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Y_fu_719_p2),16));
    zext_ln102_fu_241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_221_p3),17));
    zext_ln103_10_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln103_5_fu_625_p3),17));
    zext_ln103_11_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln102_3_fu_547_p3),17));
    zext_ln103_1_fu_345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln103_1_fu_333_p3),17));
    zext_ln103_2_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln103_fu_349_p2),18));
    zext_ln103_3_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln102_1_fu_233_p3),18));
    zext_ln103_4_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln103_1_reg_821),19));
    zext_ln103_5_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln103_2_fu_379_p3),17));
    zext_ln103_6_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln103_3_fu_397_p3),17));
    zext_ln103_7_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln103_2_fu_413_p2),18));
    zext_ln103_8_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln103_4_fu_429_p3),18));
    zext_ln103_9_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln103_3_reg_826),20));
    zext_ln103_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_321_p3),17));
    zext_ln104_1_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln104_1_fu_477_p3),17));
    zext_ln104_2_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln104_2_fu_509_p3),17));
    zext_ln104_3_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln104_fu_521_p2),18));
    zext_ln104_4_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln104_3_fu_678_p3),17));
    zext_ln104_5_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln104_1_fu_689_p2),20));
    zext_ln104_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_465_p3),17));
end behav;
