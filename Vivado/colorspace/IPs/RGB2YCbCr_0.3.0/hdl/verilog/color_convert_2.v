// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="color_convert_2_color_convert_2,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.642500,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=82,HLS_SYN_LUT=295,HLS_VERSION=2023_2}" *)

module color_convert_2 (
        ap_clk,
        ap_rst_n,
        stream_in_TDATA,
        stream_in_TVALID,
        stream_in_TREADY,
        stream_in_TKEEP,
        stream_in_TSTRB,
        stream_in_TUSER,
        stream_in_TLAST,
        stream_out_TDATA,
        stream_out_TVALID,
        stream_out_TREADY,
        stream_out_TKEEP,
        stream_out_TSTRB,
        stream_out_TUSER,
        stream_out_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [31:0] stream_in_TDATA;
input   stream_in_TVALID;
output   stream_in_TREADY;
input  [3:0] stream_in_TKEEP;
input  [3:0] stream_in_TSTRB;
input  [0:0] stream_in_TUSER;
input  [0:0] stream_in_TLAST;
output  [31:0] stream_out_TDATA;
output   stream_out_TVALID;
input   stream_out_TREADY;
output  [3:0] stream_out_TKEEP;
output  [3:0] stream_out_TSTRB;
output  [0:0] stream_out_TUSER;
output  [0:0] stream_out_TLAST;

 reg    ap_rst_n_inv;
reg    stream_in_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    stream_out_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [3:0] curr_pixel_keep_reg_755;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    regslice_both_stream_out_V_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] curr_pixel_strb_reg_760;
reg   [0:0] curr_pixel_user_reg_765;
reg   [0:0] curr_pixel_last_reg_770;
reg   [7:0] b_reg_775;
wire   [9:0] add_ln102_2_fu_281_p2;
reg   [9:0] add_ln102_2_reg_780;
wire   [7:0] shl_ln102_3_fu_297_p3;
reg   [7:0] shl_ln102_3_reg_785;
reg   [4:0] tmp_4_reg_790;
wire   [10:0] sub_ln103_fu_371_p2;
reg   [10:0] sub_ln103_reg_795;
wire   [9:0] add_ln103_3_fu_453_p2;
reg   [9:0] add_ln103_3_reg_800;
wire   [8:0] sub_ln103_2_fu_483_p2;
reg   [8:0] sub_ln103_2_reg_805;
wire   [10:0] sub_ln104_2_fu_573_p2;
reg   [10:0] sub_ln104_2_reg_810;
wire   [8:0] add_ln104_1_fu_601_p2;
reg   [8:0] add_ln104_1_reg_815;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] trunc_ln102_fu_209_p1;
wire   [6:0] trunc_ln102_1_fu_221_p1;
wire   [7:0] shl_ln_fu_213_p3;
wire   [7:0] shl_ln102_1_fu_225_p3;
wire   [8:0] zext_ln102_fu_233_p1;
wire   [8:0] zext_ln102_1_fu_237_p1;
wire   [0:0] tmp_fu_247_p3;
wire   [8:0] add_ln102_fu_241_p2;
wire   [7:0] shl_ln102_2_fu_255_p3;
wire   [9:0] zext_ln102_2_fu_263_p1;
wire   [9:0] zext_ln102_3_fu_267_p1;
wire   [7:0] g_fu_189_p4;
wire   [9:0] add_ln102_1_fu_271_p2;
wire   [9:0] zext_ln102_4_fu_277_p1;
wire   [3:0] tmp_3_fu_287_p4;
wire   [2:0] trunc_ln103_fu_315_p1;
wire   [5:0] trunc_ln103_1_fu_327_p1;
wire   [7:0] shl_ln1_fu_319_p3;
wire   [7:0] shl_ln103_1_fu_331_p3;
wire   [8:0] zext_ln103_fu_339_p1;
wire   [8:0] zext_ln103_1_fu_343_p1;
wire   [8:0] add_ln103_fu_347_p2;
wire   [9:0] zext_ln103_2_fu_353_p1;
wire   [9:0] zext_ln103_3_fu_357_p1;
wire   [9:0] add_ln103_1_fu_361_p2;
wire   [10:0] zext_ln103_4_fu_367_p1;
wire   [1:0] tmp_8_fu_377_p4;
wire   [4:0] tmp_9_fu_395_p4;
wire   [7:0] shl_ln103_2_fu_387_p3;
wire   [7:0] shl_ln103_3_fu_405_p3;
wire   [8:0] zext_ln103_5_fu_413_p1;
wire   [8:0] zext_ln103_6_fu_417_p1;
wire   [6:0] tmp_s_fu_427_p4;
wire   [8:0] add_ln103_2_fu_421_p2;
wire   [7:0] shl_ln103_4_fu_437_p3;
wire   [9:0] zext_ln103_7_fu_445_p1;
wire   [9:0] zext_ln103_8_fu_449_p1;
wire   [0:0] tmp_1_fu_459_p3;
wire   [7:0] shl_ln103_5_fu_467_p3;
wire   [8:0] zext_ln103_10_fu_475_p1;
wire   [8:0] zext_ln103_11_fu_479_p1;
wire   [0:0] trunc_ln104_fu_489_p1;
wire   [3:0] trunc_ln104_1_fu_501_p1;
wire   [7:0] shl_ln2_fu_493_p3;
wire   [7:0] shl_ln104_1_fu_505_p3;
wire   [8:0] zext_ln104_fu_513_p1;
wire   [8:0] zext_ln104_1_fu_517_p1;
wire   [2:0] tmp_2_fu_527_p4;
wire   [7:0] shl_ln104_2_fu_537_p3;
wire   [8:0] zext_ln104_2_fu_545_p1;
wire   [8:0] add_ln104_fu_549_p2;
wire   [9:0] zext_ln104_3_fu_555_p1;
wire   [8:0] sub_ln104_fu_521_p2;
wire   [9:0] sub_ln104_1_fu_559_p2;
wire  signed [10:0] sext_ln104_fu_565_p1;
wire  signed [10:0] sext_ln104_1_fu_569_p1;
wire   [6:0] tmp_6_fu_579_p4;
wire   [7:0] shl_ln104_3_fu_589_p3;
wire   [8:0] zext_ln104_4_fu_597_p1;
wire   [10:0] zext_ln102_5_fu_607_p1;
wire   [10:0] zext_ln102_6_fu_610_p1;
wire   [7:0] shl_ln102_4_fu_619_p3;
wire   [10:0] add_ln102_3_fu_613_p2;
wire   [10:0] zext_ln102_7_fu_626_p1;
wire   [10:0] add_ln102_4_fu_630_p2;
wire   [10:0] zext_ln102_8_fu_636_p1;
wire   [10:0] add_ln102_5_fu_639_p2;
wire   [2:0] tmp_5_fu_645_p4;
wire   [4:0] Y_fu_655_p3;
wire  signed [11:0] sext_ln103_fu_667_p1;
wire   [11:0] zext_ln103_9_fu_670_p1;
wire   [11:0] sub_ln103_1_fu_673_p2;
wire  signed [11:0] sext_ln103_1_fu_679_p1;
wire   [11:0] add_ln103_4_fu_682_p2;
wire   [3:0] trunc_ln_fu_688_p4;
wire  signed [7:0] sext_ln103_2_fu_698_p1;
wire  signed [11:0] sext_ln104_2_fu_708_p1;
wire   [11:0] zext_ln104_5_fu_711_p1;
wire   [11:0] sub_ln104_3_fu_714_p2;
wire   [3:0] trunc_ln1_fu_720_p4;
wire  signed [7:0] sext_ln104_3_fu_730_p1;
wire   [7:0] Cr_fu_734_p2;
wire   [7:0] Cb_fu_702_p2;
wire   [7:0] zext_ln102_9_fu_663_p1;
wire   [23:0] curr_pixel_data_1_fu_740_p4;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_stream_in_V_data_V_U_apdone_blk;
wire   [31:0] stream_in_TDATA_int_regslice;
wire    stream_in_TVALID_int_regslice;
reg    stream_in_TREADY_int_regslice;
wire    regslice_both_stream_in_V_data_V_U_ack_in;
wire    regslice_both_stream_in_V_keep_V_U_apdone_blk;
wire   [3:0] stream_in_TKEEP_int_regslice;
wire    regslice_both_stream_in_V_keep_V_U_vld_out;
wire    regslice_both_stream_in_V_keep_V_U_ack_in;
wire    regslice_both_stream_in_V_strb_V_U_apdone_blk;
wire   [3:0] stream_in_TSTRB_int_regslice;
wire    regslice_both_stream_in_V_strb_V_U_vld_out;
wire    regslice_both_stream_in_V_strb_V_U_ack_in;
wire    regslice_both_stream_in_V_user_V_U_apdone_blk;
wire   [0:0] stream_in_TUSER_int_regslice;
wire    regslice_both_stream_in_V_user_V_U_vld_out;
wire    regslice_both_stream_in_V_user_V_U_ack_in;
wire    regslice_both_stream_in_V_last_V_U_apdone_blk;
wire   [0:0] stream_in_TLAST_int_regslice;
wire    regslice_both_stream_in_V_last_V_U_vld_out;
wire    regslice_both_stream_in_V_last_V_U_ack_in;
wire   [31:0] stream_out_TDATA_int_regslice;
reg    stream_out_TVALID_int_regslice;
wire    stream_out_TREADY_int_regslice;
wire    regslice_both_stream_out_V_data_V_U_vld_out;
wire    regslice_both_stream_out_V_keep_V_U_apdone_blk;
wire    regslice_both_stream_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_keep_V_U_vld_out;
wire    regslice_both_stream_out_V_strb_V_U_apdone_blk;
wire    regslice_both_stream_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_strb_V_U_vld_out;
wire    regslice_both_stream_out_V_user_V_U_apdone_blk;
wire    regslice_both_stream_out_V_user_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_user_V_U_vld_out;
wire    regslice_both_stream_out_V_last_V_U_apdone_blk;
wire    regslice_both_stream_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

color_convert_2_regslice_both #(
    .DataWidth( 32 ))
regslice_both_stream_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TDATA),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_data_V_U_ack_in),
    .data_out(stream_in_TDATA_int_regslice),
    .vld_out(stream_in_TVALID_int_regslice),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_data_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 4 ))
regslice_both_stream_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TKEEP),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_keep_V_U_ack_in),
    .data_out(stream_in_TKEEP_int_regslice),
    .vld_out(regslice_both_stream_in_V_keep_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_keep_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 4 ))
regslice_both_stream_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TSTRB),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_strb_V_U_ack_in),
    .data_out(stream_in_TSTRB_int_regslice),
    .vld_out(regslice_both_stream_in_V_strb_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_strb_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TUSER),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_user_V_U_ack_in),
    .data_out(stream_in_TUSER_int_regslice),
    .vld_out(regslice_both_stream_in_V_user_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_user_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TLAST),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_last_V_U_ack_in),
    .data_out(stream_in_TLAST_int_regslice),
    .vld_out(regslice_both_stream_in_V_last_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_last_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 32 ))
regslice_both_stream_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_out_TDATA_int_regslice),
    .vld_in(stream_out_TVALID_int_regslice),
    .ack_in(stream_out_TREADY_int_regslice),
    .data_out(stream_out_TDATA),
    .vld_out(regslice_both_stream_out_V_data_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_data_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 4 ))
regslice_both_stream_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(curr_pixel_keep_reg_755),
    .vld_in(stream_out_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_V_keep_V_U_ack_in_dummy),
    .data_out(stream_out_TKEEP),
    .vld_out(regslice_both_stream_out_V_keep_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_keep_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 4 ))
regslice_both_stream_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(curr_pixel_strb_reg_760),
    .vld_in(stream_out_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_V_strb_V_U_ack_in_dummy),
    .data_out(stream_out_TSTRB),
    .vld_out(regslice_both_stream_out_V_strb_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_strb_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(curr_pixel_user_reg_765),
    .vld_in(stream_out_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_V_user_V_U_ack_in_dummy),
    .data_out(stream_out_TUSER),
    .vld_out(regslice_both_stream_out_V_user_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_user_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(curr_pixel_last_reg_770),
    .vld_in(stream_out_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_V_last_V_U_ack_in_dummy),
    .data_out(stream_out_TLAST),
    .vld_out(regslice_both_stream_out_V_last_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln102_2_reg_780 <= add_ln102_2_fu_281_p2;
        add_ln103_3_reg_800[9 : 1] <= add_ln103_3_fu_453_p2[9 : 1];
        add_ln104_1_reg_815[8 : 1] <= add_ln104_1_fu_601_p2[8 : 1];
        b_reg_775 <= {{stream_in_TDATA_int_regslice[23:16]}};
        curr_pixel_keep_reg_755 <= stream_in_TKEEP_int_regslice;
        curr_pixel_last_reg_770 <= stream_in_TLAST_int_regslice;
        curr_pixel_strb_reg_760 <= stream_in_TSTRB_int_regslice;
        curr_pixel_user_reg_765 <= stream_in_TUSER_int_regslice;
        shl_ln102_3_reg_785[7 : 4] <= shl_ln102_3_fu_297_p3[7 : 4];
        sub_ln103_2_reg_805[8 : 4] <= sub_ln103_2_fu_483_p2[8 : 4];
        sub_ln103_reg_795[10 : 1] <= sub_ln103_fu_371_p2[10 : 1];
        sub_ln104_2_reg_810[10 : 1] <= sub_ln104_2_fu_573_p2[10 : 1];
        tmp_4_reg_790 <= {{stream_in_TDATA_int_regslice[20:16]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_TDATA_blk_n = stream_in_TVALID_int_regslice;
    end else begin
        stream_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_TREADY_int_regslice = 1'b1;
    end else begin
        stream_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stream_out_TDATA_blk_n = stream_out_TREADY_int_regslice;
    end else begin
        stream_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_out_TVALID_int_regslice = 1'b1;
    end else begin
        stream_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Cb_fu_702_p2 = (sext_ln103_2_fu_698_p1 ^ 8'd128);

assign Cr_fu_734_p2 = (sext_ln104_3_fu_730_p1 ^ 8'd128);

assign Y_fu_655_p3 = {{2'd2}, {tmp_5_fu_645_p4}};

assign add_ln102_1_fu_271_p2 = (zext_ln102_2_fu_263_p1 + zext_ln102_3_fu_267_p1);

assign add_ln102_2_fu_281_p2 = (add_ln102_1_fu_271_p2 + zext_ln102_4_fu_277_p1);

assign add_ln102_3_fu_613_p2 = (zext_ln102_5_fu_607_p1 + zext_ln102_6_fu_610_p1);

assign add_ln102_4_fu_630_p2 = (add_ln102_3_fu_613_p2 + zext_ln102_7_fu_626_p1);

assign add_ln102_5_fu_639_p2 = (add_ln102_4_fu_630_p2 + zext_ln102_8_fu_636_p1);

assign add_ln102_fu_241_p2 = (zext_ln102_fu_233_p1 + zext_ln102_1_fu_237_p1);

assign add_ln103_1_fu_361_p2 = (zext_ln103_2_fu_353_p1 + zext_ln103_3_fu_357_p1);

assign add_ln103_2_fu_421_p2 = (zext_ln103_5_fu_413_p1 + zext_ln103_6_fu_417_p1);

assign add_ln103_3_fu_453_p2 = (zext_ln103_7_fu_445_p1 + zext_ln103_8_fu_449_p1);

assign add_ln103_4_fu_682_p2 = ($signed(sub_ln103_1_fu_673_p2) + $signed(sext_ln103_1_fu_679_p1));

assign add_ln103_fu_347_p2 = (zext_ln103_fu_339_p1 + zext_ln103_1_fu_343_p1);

assign add_ln104_1_fu_601_p2 = (zext_ln103_11_fu_479_p1 + zext_ln104_4_fu_597_p1);

assign add_ln104_fu_549_p2 = (zext_ln103_5_fu_413_p1 + zext_ln104_2_fu_545_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((1'b1 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((stream_out_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((stream_out_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state2_pp0_stage0_iter1))) | ((1'b1 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((stream_out_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((stream_out_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state2_pp0_stage0_iter1))) | ((1'b1 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (stream_in_TVALID_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (stream_out_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_stream_out_V_data_V_U_apdone_blk == 1'b1) | (stream_out_TREADY_int_regslice == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign curr_pixel_data_1_fu_740_p4 = {{{Cr_fu_734_p2}, {Cb_fu_702_p2}}, {zext_ln102_9_fu_663_p1}};

assign g_fu_189_p4 = {{stream_in_TDATA_int_regslice[15:8]}};

assign sext_ln103_1_fu_679_p1 = $signed(sub_ln103_2_reg_805);

assign sext_ln103_2_fu_698_p1 = $signed(trunc_ln_fu_688_p4);

assign sext_ln103_fu_667_p1 = $signed(sub_ln103_reg_795);

assign sext_ln104_1_fu_569_p1 = $signed(sub_ln104_1_fu_559_p2);

assign sext_ln104_2_fu_708_p1 = $signed(sub_ln104_2_reg_810);

assign sext_ln104_3_fu_730_p1 = $signed(trunc_ln1_fu_720_p4);

assign sext_ln104_fu_565_p1 = $signed(sub_ln104_fu_521_p2);

assign shl_ln102_1_fu_225_p3 = {{trunc_ln102_1_fu_221_p1}, {1'd0}};

assign shl_ln102_2_fu_255_p3 = {{tmp_fu_247_p3}, {7'd0}};

assign shl_ln102_3_fu_297_p3 = {{tmp_3_fu_287_p4}, {4'd0}};

assign shl_ln102_4_fu_619_p3 = {{tmp_4_reg_790}, {3'd0}};

assign shl_ln103_1_fu_331_p3 = {{trunc_ln103_1_fu_327_p1}, {2'd0}};

assign shl_ln103_2_fu_387_p3 = {{tmp_8_fu_377_p4}, {6'd0}};

assign shl_ln103_3_fu_405_p3 = {{tmp_9_fu_395_p4}, {3'd0}};

assign shl_ln103_4_fu_437_p3 = {{tmp_s_fu_427_p4}, {1'd0}};

assign shl_ln103_5_fu_467_p3 = {{tmp_1_fu_459_p3}, {7'd0}};

assign shl_ln104_1_fu_505_p3 = {{trunc_ln104_1_fu_501_p1}, {4'd0}};

assign shl_ln104_2_fu_537_p3 = {{tmp_2_fu_527_p4}, {5'd0}};

assign shl_ln104_3_fu_589_p3 = {{tmp_6_fu_579_p4}, {1'd0}};

assign shl_ln1_fu_319_p3 = {{trunc_ln103_fu_315_p1}, {5'd0}};

assign shl_ln2_fu_493_p3 = {{trunc_ln104_fu_489_p1}, {7'd0}};

assign shl_ln_fu_213_p3 = {{trunc_ln102_fu_209_p1}, {6'd0}};

assign stream_in_TREADY = regslice_both_stream_in_V_data_V_U_ack_in;

assign stream_out_TDATA_int_regslice = $signed(curr_pixel_data_1_fu_740_p4);

assign stream_out_TVALID = regslice_both_stream_out_V_data_V_U_vld_out;

assign sub_ln103_1_fu_673_p2 = ($signed(sext_ln103_fu_667_p1) - $signed(zext_ln103_9_fu_670_p1));

assign sub_ln103_2_fu_483_p2 = (zext_ln103_10_fu_475_p1 - zext_ln103_11_fu_479_p1);

assign sub_ln103_fu_371_p2 = (11'd0 - zext_ln103_4_fu_367_p1);

assign sub_ln104_1_fu_559_p2 = (zext_ln104_3_fu_555_p1 - zext_ln103_8_fu_449_p1);

assign sub_ln104_2_fu_573_p2 = ($signed(sext_ln104_fu_565_p1) - $signed(sext_ln104_1_fu_569_p1));

assign sub_ln104_3_fu_714_p2 = ($signed(sext_ln104_2_fu_708_p1) - $signed(zext_ln104_5_fu_711_p1));

assign sub_ln104_fu_521_p2 = (zext_ln104_fu_513_p1 - zext_ln104_1_fu_517_p1);

assign tmp_1_fu_459_p3 = stream_in_TDATA_int_regslice[32'd16];

assign tmp_2_fu_527_p4 = {{stream_in_TDATA_int_regslice[10:8]}};

assign tmp_3_fu_287_p4 = {{stream_in_TDATA_int_regslice[19:16]}};

assign tmp_5_fu_645_p4 = {{add_ln102_5_fu_639_p2[10:8]}};

assign tmp_6_fu_579_p4 = {{stream_in_TDATA_int_regslice[22:16]}};

assign tmp_8_fu_377_p4 = {{stream_in_TDATA_int_regslice[9:8]}};

assign tmp_9_fu_395_p4 = {{stream_in_TDATA_int_regslice[12:8]}};

assign tmp_fu_247_p3 = stream_in_TDATA_int_regslice[32'd8];

assign tmp_s_fu_427_p4 = {{stream_in_TDATA_int_regslice[14:8]}};

assign trunc_ln102_1_fu_221_p1 = stream_in_TDATA_int_regslice[6:0];

assign trunc_ln102_fu_209_p1 = stream_in_TDATA_int_regslice[1:0];

assign trunc_ln103_1_fu_327_p1 = stream_in_TDATA_int_regslice[5:0];

assign trunc_ln103_fu_315_p1 = stream_in_TDATA_int_regslice[2:0];

assign trunc_ln104_1_fu_501_p1 = stream_in_TDATA_int_regslice[3:0];

assign trunc_ln104_fu_489_p1 = stream_in_TDATA_int_regslice[0:0];

assign trunc_ln1_fu_720_p4 = {{sub_ln104_3_fu_714_p2[11:8]}};

assign trunc_ln_fu_688_p4 = {{add_ln103_4_fu_682_p2[11:8]}};

assign zext_ln102_1_fu_237_p1 = shl_ln102_1_fu_225_p3;

assign zext_ln102_2_fu_263_p1 = add_ln102_fu_241_p2;

assign zext_ln102_3_fu_267_p1 = shl_ln102_2_fu_255_p3;

assign zext_ln102_4_fu_277_p1 = g_fu_189_p4;

assign zext_ln102_5_fu_607_p1 = add_ln102_2_reg_780;

assign zext_ln102_6_fu_610_p1 = shl_ln102_3_reg_785;

assign zext_ln102_7_fu_626_p1 = shl_ln102_4_fu_619_p3;

assign zext_ln102_8_fu_636_p1 = b_reg_775;

assign zext_ln102_9_fu_663_p1 = Y_fu_655_p3;

assign zext_ln102_fu_233_p1 = shl_ln_fu_213_p3;

assign zext_ln103_10_fu_475_p1 = shl_ln103_5_fu_467_p3;

assign zext_ln103_11_fu_479_p1 = shl_ln102_3_fu_297_p3;

assign zext_ln103_1_fu_343_p1 = shl_ln103_1_fu_331_p3;

assign zext_ln103_2_fu_353_p1 = add_ln103_fu_347_p2;

assign zext_ln103_3_fu_357_p1 = shl_ln102_1_fu_225_p3;

assign zext_ln103_4_fu_367_p1 = add_ln103_1_fu_361_p2;

assign zext_ln103_5_fu_413_p1 = shl_ln103_2_fu_387_p3;

assign zext_ln103_6_fu_417_p1 = shl_ln103_3_fu_405_p3;

assign zext_ln103_7_fu_445_p1 = add_ln103_2_fu_421_p2;

assign zext_ln103_8_fu_449_p1 = shl_ln103_4_fu_437_p3;

assign zext_ln103_9_fu_670_p1 = add_ln103_3_reg_800;

assign zext_ln103_fu_339_p1 = shl_ln1_fu_319_p3;

assign zext_ln104_1_fu_517_p1 = shl_ln104_1_fu_505_p3;

assign zext_ln104_2_fu_545_p1 = shl_ln104_2_fu_537_p3;

assign zext_ln104_3_fu_555_p1 = add_ln104_fu_549_p2;

assign zext_ln104_4_fu_597_p1 = shl_ln104_3_fu_589_p3;

assign zext_ln104_5_fu_711_p1 = add_ln104_1_reg_815;

assign zext_ln104_fu_513_p1 = shl_ln2_fu_493_p3;

always @ (posedge ap_clk) begin
    shl_ln102_3_reg_785[3:0] <= 4'b0000;
    sub_ln103_reg_795[0] <= 1'b0;
    add_ln103_3_reg_800[0] <= 1'b0;
    sub_ln103_2_reg_805[3:0] <= 4'b0000;
    sub_ln104_2_reg_810[0] <= 1'b0;
    add_ln104_1_reg_815[0] <= 1'b0;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "color_convert_2_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //color_convert_2

