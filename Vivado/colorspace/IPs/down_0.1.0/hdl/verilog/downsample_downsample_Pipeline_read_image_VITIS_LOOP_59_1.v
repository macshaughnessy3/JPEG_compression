// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module downsample_downsample_Pipeline_read_image_VITIS_LOOP_59_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_48_TVALID,
        image_block_2_address0,
        image_block_2_ce0,
        image_block_2_we0,
        image_block_2_d0,
        image_block_1_address0,
        image_block_1_ce0,
        image_block_1_we0,
        image_block_1_d0,
        image_block_address0,
        image_block_ce0,
        image_block_we0,
        image_block_d0,
        stream_in_48_TDATA,
        stream_in_48_TREADY,
        stream_in_48_TKEEP,
        stream_in_48_TSTRB,
        stream_in_48_TUSER,
        stream_in_48_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   stream_in_48_TVALID;
output  [16:0] image_block_2_address0;
output   image_block_2_ce0;
output   image_block_2_we0;
output  [47:0] image_block_2_d0;
output  [16:0] image_block_1_address0;
output   image_block_1_ce0;
output   image_block_1_we0;
output  [47:0] image_block_1_d0;
output  [16:0] image_block_address0;
output   image_block_ce0;
output   image_block_we0;
output  [47:0] image_block_d0;
input  [63:0] stream_in_48_TDATA;
output   stream_in_48_TREADY;
input  [7:0] stream_in_48_TKEEP;
input  [7:0] stream_in_48_TSTRB;
input  [0:0] stream_in_48_TUSER;
input  [0:0] stream_in_48_TLAST;

reg ap_idle;
reg image_block_2_ce0;
reg image_block_2_we0;
reg image_block_1_ce0;
reg image_block_1_we0;
reg image_block_ce0;
reg image_block_we0;
reg stream_in_48_TREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_idle_pp0;
wire   [0:0] icmp_ln58_fu_159_p2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    stream_in_48_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] select_ln58_fu_183_p3;
reg   [8:0] select_ln58_reg_309;
reg   [8:0] select_ln58_reg_309_pp0_iter2_reg;
wire   [47:0] trunc_ln50_fu_213_p1;
reg   [47:0] trunc_ln50_reg_319;
reg   [47:0] trunc_ln50_reg_319_pp0_iter2_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter3_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter4_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter5_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter6_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter7_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter8_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter9_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter10_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter11_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter12_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter13_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter14_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter15_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter16_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter17_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter18_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter19_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter20_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter21_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter22_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter23_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter24_reg;
reg   [47:0] trunc_ln50_reg_319_pp0_iter25_reg;
wire   [17:0] grp_fu_275_p3;
reg   [17:0] add_ln61_reg_331;
reg   [16:0] tmp_reg_337;
reg   [16:0] tmp_reg_337_pp0_iter6_reg;
reg   [16:0] tmp_reg_337_pp0_iter7_reg;
reg   [16:0] tmp_reg_337_pp0_iter8_reg;
reg   [16:0] tmp_reg_337_pp0_iter9_reg;
reg   [16:0] tmp_reg_337_pp0_iter10_reg;
reg   [16:0] tmp_reg_337_pp0_iter11_reg;
reg   [16:0] tmp_reg_337_pp0_iter12_reg;
reg   [16:0] tmp_reg_337_pp0_iter13_reg;
reg   [16:0] tmp_reg_337_pp0_iter14_reg;
reg   [16:0] tmp_reg_337_pp0_iter15_reg;
reg   [16:0] tmp_reg_337_pp0_iter16_reg;
reg   [16:0] tmp_reg_337_pp0_iter17_reg;
reg   [16:0] tmp_reg_337_pp0_iter18_reg;
reg   [16:0] tmp_reg_337_pp0_iter19_reg;
reg   [16:0] tmp_reg_337_pp0_iter20_reg;
reg   [16:0] tmp_reg_337_pp0_iter21_reg;
reg   [16:0] tmp_reg_337_pp0_iter22_reg;
reg   [16:0] tmp_reg_337_pp0_iter23_reg;
reg   [16:0] tmp_reg_337_pp0_iter24_reg;
reg   [16:0] tmp_reg_337_pp0_iter25_reg;
wire   [1:0] trunc_ln61_fu_265_p1;
reg   [1:0] trunc_ln61_reg_342;
wire   [63:0] zext_ln61_fu_269_p1;
reg   [8:0] j_fu_76;
wire   [8:0] add_ln59_fu_217_p2;
wire    ap_loop_init;
reg   [8:0] i_fu_80;
wire   [8:0] select_ln58_1_fu_197_p3;
reg   [17:0] indvar_flatten_fu_84;
wire   [17:0] add_ln58_fu_165_p2;
wire   [0:0] icmp_ln59_fu_177_p2;
wire   [8:0] add_ln58_1_fu_191_p2;
wire   [2:0] grp_fu_241_p1;
wire   [17:0] mul_ln61_fu_249_p0;
wire   [19:0] mul_ln61_fu_249_p1;
wire   [36:0] mul_ln61_fu_249_p2;
wire   [1:0] grp_fu_241_p2;
wire   [8:0] grp_fu_275_p0;
wire   [8:0] grp_fu_275_p1;
wire   [8:0] grp_fu_275_p2;
reg    grp_fu_241_ce;
reg    grp_fu_275_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [17:0] grp_fu_275_p00;
wire   [17:0] grp_fu_275_p20;
wire   [36:0] mul_ln61_fu_249_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 j_fu_76 = 9'd0;
#0 i_fu_80 = 9'd0;
#0 indvar_flatten_fu_84 = 18'd0;
#0 ap_done_reg = 1'b0;
end

downsample_urem_18ns_3ns_2_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_18ns_3ns_2_22_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_275_p3),
    .din1(grp_fu_241_p1),
    .ce(grp_fu_241_ce),
    .dout(grp_fu_241_p2)
);

downsample_mul_18ns_20ns_37_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 37 ))
mul_18ns_20ns_37_1_1_U2(
    .din0(mul_ln61_fu_249_p0),
    .din1(mul_ln61_fu_249_p1),
    .dout(mul_ln61_fu_249_p2)
);

downsample_mac_muladd_9ns_9ns_9ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mac_muladd_9ns_9ns_9ns_18_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_275_p0),
    .din1(grp_fu_275_p1),
    .din2(grp_fu_275_p2),
    .ce(grp_fu_275_ce),
    .dout(grp_fu_275_p3)
);

downsample_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter25_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_80 <= 9'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln58_fu_159_p2 == 1'd0))) begin
            i_fu_80 <= select_ln58_1_fu_197_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_84 <= 18'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln58_fu_159_p2 == 1'd0))) begin
            indvar_flatten_fu_84 <= add_ln58_fu_165_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_76 <= 9'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln58_fu_159_p2 == 1'd0))) begin
            j_fu_76 <= add_ln59_fu_217_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln61_reg_331 <= grp_fu_275_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        select_ln58_reg_309_pp0_iter2_reg <= select_ln58_reg_309;
        tmp_reg_337 <= {{mul_ln61_fu_249_p2[36:20]}};
        tmp_reg_337_pp0_iter10_reg <= tmp_reg_337_pp0_iter9_reg;
        tmp_reg_337_pp0_iter11_reg <= tmp_reg_337_pp0_iter10_reg;
        tmp_reg_337_pp0_iter12_reg <= tmp_reg_337_pp0_iter11_reg;
        tmp_reg_337_pp0_iter13_reg <= tmp_reg_337_pp0_iter12_reg;
        tmp_reg_337_pp0_iter14_reg <= tmp_reg_337_pp0_iter13_reg;
        tmp_reg_337_pp0_iter15_reg <= tmp_reg_337_pp0_iter14_reg;
        tmp_reg_337_pp0_iter16_reg <= tmp_reg_337_pp0_iter15_reg;
        tmp_reg_337_pp0_iter17_reg <= tmp_reg_337_pp0_iter16_reg;
        tmp_reg_337_pp0_iter18_reg <= tmp_reg_337_pp0_iter17_reg;
        tmp_reg_337_pp0_iter19_reg <= tmp_reg_337_pp0_iter18_reg;
        tmp_reg_337_pp0_iter20_reg <= tmp_reg_337_pp0_iter19_reg;
        tmp_reg_337_pp0_iter21_reg <= tmp_reg_337_pp0_iter20_reg;
        tmp_reg_337_pp0_iter22_reg <= tmp_reg_337_pp0_iter21_reg;
        tmp_reg_337_pp0_iter23_reg <= tmp_reg_337_pp0_iter22_reg;
        tmp_reg_337_pp0_iter24_reg <= tmp_reg_337_pp0_iter23_reg;
        tmp_reg_337_pp0_iter25_reg <= tmp_reg_337_pp0_iter24_reg;
        tmp_reg_337_pp0_iter6_reg <= tmp_reg_337;
        tmp_reg_337_pp0_iter7_reg <= tmp_reg_337_pp0_iter6_reg;
        tmp_reg_337_pp0_iter8_reg <= tmp_reg_337_pp0_iter7_reg;
        tmp_reg_337_pp0_iter9_reg <= tmp_reg_337_pp0_iter8_reg;
        trunc_ln50_reg_319_pp0_iter10_reg <= trunc_ln50_reg_319_pp0_iter9_reg;
        trunc_ln50_reg_319_pp0_iter11_reg <= trunc_ln50_reg_319_pp0_iter10_reg;
        trunc_ln50_reg_319_pp0_iter12_reg <= trunc_ln50_reg_319_pp0_iter11_reg;
        trunc_ln50_reg_319_pp0_iter13_reg <= trunc_ln50_reg_319_pp0_iter12_reg;
        trunc_ln50_reg_319_pp0_iter14_reg <= trunc_ln50_reg_319_pp0_iter13_reg;
        trunc_ln50_reg_319_pp0_iter15_reg <= trunc_ln50_reg_319_pp0_iter14_reg;
        trunc_ln50_reg_319_pp0_iter16_reg <= trunc_ln50_reg_319_pp0_iter15_reg;
        trunc_ln50_reg_319_pp0_iter17_reg <= trunc_ln50_reg_319_pp0_iter16_reg;
        trunc_ln50_reg_319_pp0_iter18_reg <= trunc_ln50_reg_319_pp0_iter17_reg;
        trunc_ln50_reg_319_pp0_iter19_reg <= trunc_ln50_reg_319_pp0_iter18_reg;
        trunc_ln50_reg_319_pp0_iter20_reg <= trunc_ln50_reg_319_pp0_iter19_reg;
        trunc_ln50_reg_319_pp0_iter21_reg <= trunc_ln50_reg_319_pp0_iter20_reg;
        trunc_ln50_reg_319_pp0_iter22_reg <= trunc_ln50_reg_319_pp0_iter21_reg;
        trunc_ln50_reg_319_pp0_iter23_reg <= trunc_ln50_reg_319_pp0_iter22_reg;
        trunc_ln50_reg_319_pp0_iter24_reg <= trunc_ln50_reg_319_pp0_iter23_reg;
        trunc_ln50_reg_319_pp0_iter25_reg <= trunc_ln50_reg_319_pp0_iter24_reg;
        trunc_ln50_reg_319_pp0_iter2_reg <= trunc_ln50_reg_319;
        trunc_ln50_reg_319_pp0_iter3_reg <= trunc_ln50_reg_319_pp0_iter2_reg;
        trunc_ln50_reg_319_pp0_iter4_reg <= trunc_ln50_reg_319_pp0_iter3_reg;
        trunc_ln50_reg_319_pp0_iter5_reg <= trunc_ln50_reg_319_pp0_iter4_reg;
        trunc_ln50_reg_319_pp0_iter6_reg <= trunc_ln50_reg_319_pp0_iter5_reg;
        trunc_ln50_reg_319_pp0_iter7_reg <= trunc_ln50_reg_319_pp0_iter6_reg;
        trunc_ln50_reg_319_pp0_iter8_reg <= trunc_ln50_reg_319_pp0_iter7_reg;
        trunc_ln50_reg_319_pp0_iter9_reg <= trunc_ln50_reg_319_pp0_iter8_reg;
        trunc_ln61_reg_342 <= trunc_ln61_fu_265_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        select_ln58_reg_309 <= select_ln58_fu_183_p3;
        trunc_ln50_reg_319 <= trunc_ln50_fu_213_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln58_fu_159_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter25_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_241_ce = 1'b1;
    end else begin
        grp_fu_241_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_275_ce = 1'b1;
    end else begin
        grp_fu_275_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_block_1_ce0 = 1'b1;
    end else begin
        image_block_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (trunc_ln61_reg_342 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_block_1_we0 = 1'b1;
    end else begin
        image_block_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_block_2_ce0 = 1'b1;
    end else begin
        image_block_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln61_reg_342 == 2'd0) & ~(trunc_ln61_reg_342 == 2'd1) & (ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_block_2_we0 = 1'b1;
    end else begin
        image_block_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_block_ce0 = 1'b1;
    end else begin
        image_block_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (trunc_ln61_reg_342 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_block_we0 = 1'b1;
    end else begin
        image_block_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln58_fu_159_p2 == 1'd0))) begin
        stream_in_48_TDATA_blk_n = stream_in_48_TVALID;
    end else begin
        stream_in_48_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln58_fu_159_p2 == 1'd0))) begin
        stream_in_48_TREADY = 1'b1;
    end else begin
        stream_in_48_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln58_1_fu_191_p2 = (i_fu_80 + 9'd1);

assign add_ln58_fu_165_p2 = (indvar_flatten_fu_84 + 18'd1);

assign add_ln59_fu_217_p2 = (select_ln58_fu_183_p3 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((icmp_ln58_fu_159_p2 == 1'd0) & (stream_in_48_TVALID == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign grp_fu_241_p1 = 18'd3;

assign grp_fu_275_p0 = grp_fu_275_p00;

assign grp_fu_275_p00 = select_ln58_1_fu_197_p3;

assign grp_fu_275_p1 = 18'd500;

assign grp_fu_275_p2 = grp_fu_275_p20;

assign grp_fu_275_p20 = select_ln58_reg_309_pp0_iter2_reg;

assign icmp_ln58_fu_159_p2 = ((indvar_flatten_fu_84 == 18'd250000) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_177_p2 = ((j_fu_76 == 9'd500) ? 1'b1 : 1'b0);

assign image_block_1_address0 = zext_ln61_fu_269_p1;

assign image_block_1_d0 = trunc_ln50_reg_319_pp0_iter25_reg;

assign image_block_2_address0 = zext_ln61_fu_269_p1;

assign image_block_2_d0 = trunc_ln50_reg_319_pp0_iter25_reg;

assign image_block_address0 = zext_ln61_fu_269_p1;

assign image_block_d0 = trunc_ln50_reg_319_pp0_iter25_reg;

assign mul_ln61_fu_249_p0 = mul_ln61_fu_249_p00;

assign mul_ln61_fu_249_p00 = add_ln61_reg_331;

assign mul_ln61_fu_249_p1 = 37'd349526;

assign select_ln58_1_fu_197_p3 = ((icmp_ln59_fu_177_p2[0:0] == 1'b1) ? add_ln58_1_fu_191_p2 : i_fu_80);

assign select_ln58_fu_183_p3 = ((icmp_ln59_fu_177_p2[0:0] == 1'b1) ? 9'd0 : j_fu_76);

assign trunc_ln50_fu_213_p1 = stream_in_48_TDATA[47:0];

assign trunc_ln61_fu_265_p1 = grp_fu_241_p2[1:0];

assign zext_ln61_fu_269_p1 = tmp_reg_337_pp0_iter25_reg;

endmodule //downsample_downsample_Pipeline_read_image_VITIS_LOOP_59_1
