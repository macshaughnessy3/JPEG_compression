// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module downsample_downsample_Pipeline_downsample_VITIS_LOOP_66_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_block_address0,
        image_block_ce0,
        image_block_q0,
        image_block_address1,
        image_block_ce1,
        image_block_q1,
        image_block_1_address0,
        image_block_1_ce0,
        image_block_1_q0,
        image_block_1_address1,
        image_block_1_ce1,
        image_block_1_q1,
        image_block_2_address0,
        image_block_2_ce0,
        image_block_2_q0,
        image_block_2_address1,
        image_block_2_ce1,
        image_block_2_q1,
        downsample_block_address0,
        downsample_block_ce0,
        downsample_block_we0,
        downsample_block_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [16:0] image_block_address0;
output   image_block_ce0;
input  [47:0] image_block_q0;
output  [16:0] image_block_address1;
output   image_block_ce1;
input  [47:0] image_block_q1;
output  [16:0] image_block_1_address0;
output   image_block_1_ce0;
input  [47:0] image_block_1_q0;
output  [16:0] image_block_1_address1;
output   image_block_1_ce1;
input  [47:0] image_block_1_q1;
output  [16:0] image_block_2_address0;
output   image_block_2_ce0;
input  [47:0] image_block_2_q0;
output  [16:0] image_block_2_address1;
output   image_block_2_ce1;
input  [47:0] image_block_2_q1;
output  [15:0] downsample_block_address0;
output   downsample_block_ce0;
output  [7:0] downsample_block_we0;
output  [63:0] downsample_block_d0;

reg ap_idle;
reg[16:0] image_block_address0;
reg image_block_ce0;
reg image_block_ce1;
reg[16:0] image_block_1_address0;
reg image_block_1_ce0;
reg image_block_1_ce1;
reg[16:0] image_block_2_address0;
reg image_block_2_ce0;
reg image_block_2_ce1;
reg downsample_block_ce0;
reg[7:0] downsample_block_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln65_fu_261_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] select_ln65_fu_285_p3;
reg   [7:0] select_ln65_reg_858;
reg   [7:0] select_ln65_reg_858_pp0_iter1_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter2_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter3_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter4_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter5_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter6_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter7_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter8_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter9_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter10_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter11_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter12_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter13_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter14_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter15_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter16_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter17_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter18_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter19_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter20_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter21_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter22_reg;
reg   [7:0] select_ln65_reg_858_pp0_iter23_reg;
wire   [7:0] select_ln65_1_fu_299_p3;
reg   [7:0] select_ln65_1_reg_864;
reg   [7:0] select_ln65_1_reg_864_pp0_iter1_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter2_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter3_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter4_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter5_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter6_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter7_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter8_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter9_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter10_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter11_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter12_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter13_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter14_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter15_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter16_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter17_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter18_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter19_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter20_reg;
reg   [7:0] select_ln65_1_reg_864_pp0_iter21_reg;
wire   [17:0] empty_fu_331_p2;
reg   [17:0] empty_reg_870;
reg   [17:0] empty_reg_870_pp0_iter2_reg;
reg   [17:0] empty_reg_870_pp0_iter3_reg;
reg   [17:0] empty_reg_870_pp0_iter4_reg;
reg   [17:0] empty_reg_870_pp0_iter5_reg;
reg   [17:0] empty_reg_870_pp0_iter6_reg;
reg   [17:0] empty_reg_870_pp0_iter7_reg;
reg   [17:0] empty_reg_870_pp0_iter8_reg;
reg   [17:0] empty_reg_870_pp0_iter9_reg;
reg   [17:0] empty_reg_870_pp0_iter10_reg;
reg   [17:0] empty_reg_870_pp0_iter11_reg;
reg   [17:0] empty_reg_870_pp0_iter12_reg;
reg   [17:0] empty_reg_870_pp0_iter13_reg;
reg   [17:0] empty_reg_870_pp0_iter14_reg;
reg   [17:0] empty_reg_870_pp0_iter15_reg;
reg   [17:0] empty_reg_870_pp0_iter16_reg;
reg   [17:0] empty_reg_870_pp0_iter17_reg;
reg   [17:0] empty_reg_870_pp0_iter18_reg;
reg   [17:0] empty_reg_870_pp0_iter19_reg;
reg   [17:0] empty_reg_870_pp0_iter20_reg;
wire   [8:0] shl_ln_fu_337_p3;
reg   [8:0] shl_ln_reg_877;
reg   [8:0] shl_ln_reg_877_pp0_iter3_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter4_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter5_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter6_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter7_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter8_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter9_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter10_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter11_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter12_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter13_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter14_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter15_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter16_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter17_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter18_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter19_reg;
reg   [8:0] shl_ln_reg_877_pp0_iter20_reg;
wire   [17:0] zext_ln67_fu_344_p1;
reg   [17:0] zext_ln67_reg_882;
reg   [17:0] zext_ln67_reg_882_pp0_iter3_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter4_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter5_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter6_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter7_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter8_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter9_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter10_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter11_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter12_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter13_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter14_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter15_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter16_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter17_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter18_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter19_reg;
reg   [17:0] zext_ln67_reg_882_pp0_iter20_reg;
wire   [17:0] add_ln67_fu_348_p2;
reg   [17:0] add_ln67_reg_887;
reg   [16:0] tmp_1_reg_893;
reg   [16:0] tmp_1_reg_893_pp0_iter4_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter5_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter6_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter7_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter8_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter9_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter10_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter11_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter12_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter13_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter14_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter15_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter16_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter17_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter18_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter19_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter20_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter21_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter22_reg;
reg   [16:0] tmp_1_reg_893_pp0_iter23_reg;
wire   [17:0] add_ln67_1_fu_392_p2;
reg   [17:0] add_ln67_1_reg_898;
wire   [17:0] add_ln67_3_fu_398_p2;
reg   [17:0] add_ln67_3_reg_903;
wire   [17:0] add_ln67_5_fu_403_p2;
reg   [17:0] add_ln67_5_reg_908;
reg   [16:0] tmp_3_reg_918;
reg   [16:0] tmp_3_reg_918_pp0_iter23_reg;
reg   [16:0] tmp_5_reg_923;
reg   [16:0] tmp_5_reg_923_pp0_iter23_reg;
reg   [16:0] tmp_7_reg_928;
reg   [16:0] tmp_7_reg_928_pp0_iter23_reg;
wire   [1:0] trunc_ln67_fu_468_p1;
reg   [1:0] trunc_ln67_reg_933;
reg   [1:0] trunc_ln67_reg_933_pp0_iter24_reg;
wire   [16:0] add_ln67_2_fu_553_p2;
reg   [16:0] add_ln67_2_reg_1006;
wire   [15:0] trunc_ln67_3_fu_578_p1;
reg   [15:0] trunc_ln67_3_reg_1011;
wire   [15:0] trunc_ln67_4_fu_601_p1;
reg   [15:0] trunc_ln67_4_reg_1016;
wire   [15:0] grp_fu_825_p3;
reg   [15:0] add_ln67_7_reg_1021;
wire   [16:0] add_ln68_fu_633_p2;
reg   [16:0] add_ln68_reg_1026;
reg   [15:0] tmp_8_reg_1031;
reg   [15:0] tmp_10_reg_1036;
wire   [16:0] add_ln69_fu_687_p2;
reg   [16:0] add_ln69_reg_1041;
reg   [15:0] tmp_13_reg_1046;
reg   [15:0] tmp_14_reg_1051;
wire   [63:0] zext_ln67_1_fu_475_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln67_3_fu_481_p1;
wire   [63:0] zext_ln67_6_fu_487_p1;
wire   [63:0] zext_ln67_9_fu_493_p1;
wire   [63:0] zext_ln67_11_fu_734_p1;
reg   [7:0] j_fu_96;
wire   [7:0] add_ln66_fu_307_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_j_load;
reg   [7:0] i_fu_100;
reg   [7:0] ap_sig_allocacmp_i_load;
reg   [15:0] indvar_flatten6_fu_104;
wire   [15:0] add_ln65_fu_267_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten6_load;
wire   [0:0] icmp_ln66_fu_279_p2;
wire   [7:0] add_ln65_1_fu_293_p2;
wire   [7:0] empty_fu_331_p0;
wire   [10:0] empty_fu_331_p1;
wire   [17:0] grp_fu_353_p0;
wire   [2:0] grp_fu_353_p1;
wire   [17:0] mul_ln67_fu_362_p0;
wire   [19:0] mul_ln67_fu_362_p1;
wire   [36:0] mul_ln67_fu_362_p2;
wire   [8:0] or_ln67_fu_383_p2;
wire   [17:0] zext_ln67_2_fu_388_p1;
wire   [17:0] empty_21_fu_378_p2;
wire   [17:0] mul_ln67_1_fu_414_p0;
wire   [19:0] mul_ln67_1_fu_414_p1;
wire   [36:0] mul_ln67_1_fu_414_p2;
wire   [17:0] mul_ln67_2_fu_433_p0;
wire   [19:0] mul_ln67_2_fu_433_p1;
wire   [36:0] mul_ln67_2_fu_433_p2;
wire   [17:0] mul_ln67_3_fu_452_p0;
wire   [19:0] mul_ln67_3_fu_452_p1;
wire   [36:0] mul_ln67_3_fu_452_p2;
wire   [1:0] grp_fu_353_p2;
wire   [47:0] tmp_fu_499_p7;
wire   [47:0] tmp_fu_499_p9;
wire   [47:0] tmp_2_fu_522_p7;
wire   [47:0] tmp_2_fu_522_p9;
wire   [15:0] trunc_ln67_1_fu_518_p1;
wire   [15:0] trunc_ln67_2_fu_541_p1;
wire   [16:0] zext_ln67_5_fu_549_p1;
wire   [16:0] zext_ln67_4_fu_545_p1;
wire   [47:0] tmp_4_fu_559_p7;
wire   [47:0] tmp_4_fu_559_p9;
wire   [47:0] tmp_6_fu_582_p7;
wire   [47:0] tmp_6_fu_582_p9;
wire   [15:0] tmp_9_fu_605_p4;
wire   [15:0] tmp_s_fu_615_p4;
wire   [16:0] zext_ln68_1_fu_629_p1;
wire   [16:0] zext_ln68_fu_625_p1;
wire   [15:0] tmp_11_fu_659_p4;
wire   [15:0] tmp_12_fu_669_p4;
wire   [16:0] zext_ln69_1_fu_683_p1;
wire   [16:0] zext_ln69_fu_679_p1;
wire   [17:0] zext_ln67_7_fu_713_p1;
wire   [17:0] zext_ln67_8_fu_716_p1;
wire   [17:0] add_ln67_4_fu_719_p2;
wire   [17:0] zext_ln67_10_fu_725_p1;
wire   [17:0] add_ln67_6_fu_728_p2;
wire   [17:0] zext_ln68_2_fu_748_p1;
wire   [17:0] zext_ln68_3_fu_751_p1;
wire   [17:0] add_ln68_1_fu_754_p2;
wire   [17:0] zext_ln68_4_fu_760_p1;
wire   [17:0] add_ln68_2_fu_763_p2;
wire   [17:0] zext_ln69_2_fu_779_p1;
wire   [17:0] zext_ln69_3_fu_782_p1;
wire   [17:0] add_ln69_1_fu_785_p2;
wire   [17:0] zext_ln69_4_fu_791_p1;
wire   [17:0] add_ln69_2_fu_794_p2;
wire   [15:0] trunc_ln4_fu_800_p4;
wire   [15:0] trunc_ln3_fu_769_p4;
wire   [15:0] trunc_ln2_fu_738_p4;
wire   [47:0] tmp_15_fu_810_p4;
wire   [7:0] grp_fu_825_p0;
wire   [7:0] grp_fu_825_p1;
wire   [7:0] grp_fu_825_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [17:0] empty_fu_331_p00;
wire   [15:0] grp_fu_825_p00;
wire   [15:0] grp_fu_825_p20;
wire   [36:0] mul_ln67_1_fu_414_p00;
wire   [36:0] mul_ln67_2_fu_433_p00;
wire   [36:0] mul_ln67_3_fu_452_p00;
wire   [36:0] mul_ln67_fu_362_p00;
wire   [1:0] tmp_fu_499_p1;
wire   [1:0] tmp_fu_499_p3;
wire  signed [1:0] tmp_fu_499_p5;
wire   [1:0] tmp_2_fu_522_p1;
wire   [1:0] tmp_2_fu_522_p3;
wire  signed [1:0] tmp_2_fu_522_p5;
wire   [1:0] tmp_4_fu_559_p1;
wire  signed [1:0] tmp_4_fu_559_p3;
wire   [1:0] tmp_4_fu_559_p5;
wire  signed [1:0] tmp_6_fu_582_p1;
wire   [1:0] tmp_6_fu_582_p3;
wire   [1:0] tmp_6_fu_582_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 j_fu_96 = 8'd0;
#0 i_fu_100 = 8'd0;
#0 indvar_flatten6_fu_104 = 16'd0;
#0 ap_done_reg = 1'b0;
end

downsample_mul_8ns_11ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
mul_8ns_11ns_18_1_1_U15(
    .din0(empty_fu_331_p0),
    .din1(empty_fu_331_p1),
    .dout(empty_fu_331_p2)
);

downsample_urem_18ns_3ns_2_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_18ns_3ns_2_22_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_353_p0),
    .din1(grp_fu_353_p1),
    .ce(1'b1),
    .dout(grp_fu_353_p2)
);

downsample_mul_18ns_20ns_37_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 37 ))
mul_18ns_20ns_37_1_1_U17(
    .din0(mul_ln67_fu_362_p0),
    .din1(mul_ln67_fu_362_p1),
    .dout(mul_ln67_fu_362_p2)
);

downsample_mul_18ns_20ns_37_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 37 ))
mul_18ns_20ns_37_1_1_U18(
    .din0(mul_ln67_1_fu_414_p0),
    .din1(mul_ln67_1_fu_414_p1),
    .dout(mul_ln67_1_fu_414_p2)
);

downsample_mul_18ns_20ns_37_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 37 ))
mul_18ns_20ns_37_1_1_U19(
    .din0(mul_ln67_2_fu_433_p0),
    .din1(mul_ln67_2_fu_433_p1),
    .dout(mul_ln67_2_fu_433_p2)
);

downsample_mul_18ns_20ns_37_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 37 ))
mul_18ns_20ns_37_1_1_U20(
    .din0(mul_ln67_3_fu_452_p0),
    .din1(mul_ln67_3_fu_452_p1),
    .dout(mul_ln67_3_fu_452_p2)
);

downsample_sparsemux_7_2_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 48 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 48 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 48 ),
    .def_WIDTH( 48 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 48 ))
sparsemux_7_2_48_1_1_U21(
    .din0(image_block_q1),
    .din1(image_block_1_q1),
    .din2(image_block_2_q1),
    .def(tmp_fu_499_p7),
    .sel(trunc_ln67_reg_933_pp0_iter24_reg),
    .dout(tmp_fu_499_p9)
);

downsample_sparsemux_7_2_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 48 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 48 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 48 ),
    .def_WIDTH( 48 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 48 ))
sparsemux_7_2_48_1_1_U22(
    .din0(image_block_q0),
    .din1(image_block_1_q0),
    .din2(image_block_2_q0),
    .def(tmp_2_fu_522_p7),
    .sel(trunc_ln67_reg_933_pp0_iter24_reg),
    .dout(tmp_2_fu_522_p9)
);

downsample_sparsemux_7_2_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h1 ),
    .din0_WIDTH( 48 ),
    .CASE1( 2'h2 ),
    .din1_WIDTH( 48 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 48 ),
    .def_WIDTH( 48 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 48 ))
sparsemux_7_2_48_1_1_U23(
    .din0(image_block_q0),
    .din1(image_block_1_q0),
    .din2(image_block_2_q0),
    .def(tmp_4_fu_559_p7),
    .sel(trunc_ln67_reg_933_pp0_iter24_reg),
    .dout(tmp_4_fu_559_p9)
);

downsample_sparsemux_7_2_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 48 ),
    .CASE1( 2'h0 ),
    .din1_WIDTH( 48 ),
    .CASE2( 2'h1 ),
    .din2_WIDTH( 48 ),
    .def_WIDTH( 48 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 48 ))
sparsemux_7_2_48_1_1_U24(
    .din0(image_block_q0),
    .din1(image_block_1_q0),
    .din2(image_block_2_q0),
    .def(tmp_6_fu_582_p7),
    .sel(trunc_ln67_reg_933_pp0_iter24_reg),
    .dout(tmp_6_fu_582_p9)
);

downsample_mac_muladd_8ns_8ns_8ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mac_muladd_8ns_8ns_8ns_16_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_825_p0),
    .din1(grp_fu_825_p1),
    .din2(grp_fu_825_p2),
    .ce(1'b1),
    .dout(grp_fu_825_p3)
);

downsample_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter25_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln65_fu_261_p2 == 1'd0))) begin
            i_fu_100 <= select_ln65_1_fu_299_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_100 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln65_fu_261_p2 == 1'd0))) begin
            indvar_flatten6_fu_104 <= add_ln65_fu_267_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_104 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln65_fu_261_p2 == 1'd0))) begin
            j_fu_96 <= add_ln66_fu_307_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_96 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln67_1_reg_898 <= add_ln67_1_fu_392_p2;
        add_ln67_2_reg_1006 <= add_ln67_2_fu_553_p2;
        add_ln67_3_reg_903 <= add_ln67_3_fu_398_p2;
        add_ln67_5_reg_908 <= add_ln67_5_fu_403_p2;
        add_ln67_reg_887 <= add_ln67_fu_348_p2;
        add_ln68_reg_1026 <= add_ln68_fu_633_p2;
        add_ln69_reg_1041 <= add_ln69_fu_687_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_reg_870_pp0_iter10_reg <= empty_reg_870_pp0_iter9_reg;
        empty_reg_870_pp0_iter11_reg <= empty_reg_870_pp0_iter10_reg;
        empty_reg_870_pp0_iter12_reg <= empty_reg_870_pp0_iter11_reg;
        empty_reg_870_pp0_iter13_reg <= empty_reg_870_pp0_iter12_reg;
        empty_reg_870_pp0_iter14_reg <= empty_reg_870_pp0_iter13_reg;
        empty_reg_870_pp0_iter15_reg <= empty_reg_870_pp0_iter14_reg;
        empty_reg_870_pp0_iter16_reg <= empty_reg_870_pp0_iter15_reg;
        empty_reg_870_pp0_iter17_reg <= empty_reg_870_pp0_iter16_reg;
        empty_reg_870_pp0_iter18_reg <= empty_reg_870_pp0_iter17_reg;
        empty_reg_870_pp0_iter19_reg <= empty_reg_870_pp0_iter18_reg;
        empty_reg_870_pp0_iter20_reg <= empty_reg_870_pp0_iter19_reg;
        empty_reg_870_pp0_iter2_reg <= empty_reg_870;
        empty_reg_870_pp0_iter3_reg <= empty_reg_870_pp0_iter2_reg;
        empty_reg_870_pp0_iter4_reg <= empty_reg_870_pp0_iter3_reg;
        empty_reg_870_pp0_iter5_reg <= empty_reg_870_pp0_iter4_reg;
        empty_reg_870_pp0_iter6_reg <= empty_reg_870_pp0_iter5_reg;
        empty_reg_870_pp0_iter7_reg <= empty_reg_870_pp0_iter6_reg;
        empty_reg_870_pp0_iter8_reg <= empty_reg_870_pp0_iter7_reg;
        empty_reg_870_pp0_iter9_reg <= empty_reg_870_pp0_iter8_reg;
        select_ln65_1_reg_864_pp0_iter10_reg <= select_ln65_1_reg_864_pp0_iter9_reg;
        select_ln65_1_reg_864_pp0_iter11_reg <= select_ln65_1_reg_864_pp0_iter10_reg;
        select_ln65_1_reg_864_pp0_iter12_reg <= select_ln65_1_reg_864_pp0_iter11_reg;
        select_ln65_1_reg_864_pp0_iter13_reg <= select_ln65_1_reg_864_pp0_iter12_reg;
        select_ln65_1_reg_864_pp0_iter14_reg <= select_ln65_1_reg_864_pp0_iter13_reg;
        select_ln65_1_reg_864_pp0_iter15_reg <= select_ln65_1_reg_864_pp0_iter14_reg;
        select_ln65_1_reg_864_pp0_iter16_reg <= select_ln65_1_reg_864_pp0_iter15_reg;
        select_ln65_1_reg_864_pp0_iter17_reg <= select_ln65_1_reg_864_pp0_iter16_reg;
        select_ln65_1_reg_864_pp0_iter18_reg <= select_ln65_1_reg_864_pp0_iter17_reg;
        select_ln65_1_reg_864_pp0_iter19_reg <= select_ln65_1_reg_864_pp0_iter18_reg;
        select_ln65_1_reg_864_pp0_iter20_reg <= select_ln65_1_reg_864_pp0_iter19_reg;
        select_ln65_1_reg_864_pp0_iter21_reg <= select_ln65_1_reg_864_pp0_iter20_reg;
        select_ln65_1_reg_864_pp0_iter2_reg <= select_ln65_1_reg_864_pp0_iter1_reg;
        select_ln65_1_reg_864_pp0_iter3_reg <= select_ln65_1_reg_864_pp0_iter2_reg;
        select_ln65_1_reg_864_pp0_iter4_reg <= select_ln65_1_reg_864_pp0_iter3_reg;
        select_ln65_1_reg_864_pp0_iter5_reg <= select_ln65_1_reg_864_pp0_iter4_reg;
        select_ln65_1_reg_864_pp0_iter6_reg <= select_ln65_1_reg_864_pp0_iter5_reg;
        select_ln65_1_reg_864_pp0_iter7_reg <= select_ln65_1_reg_864_pp0_iter6_reg;
        select_ln65_1_reg_864_pp0_iter8_reg <= select_ln65_1_reg_864_pp0_iter7_reg;
        select_ln65_1_reg_864_pp0_iter9_reg <= select_ln65_1_reg_864_pp0_iter8_reg;
        select_ln65_reg_858_pp0_iter10_reg <= select_ln65_reg_858_pp0_iter9_reg;
        select_ln65_reg_858_pp0_iter11_reg <= select_ln65_reg_858_pp0_iter10_reg;
        select_ln65_reg_858_pp0_iter12_reg <= select_ln65_reg_858_pp0_iter11_reg;
        select_ln65_reg_858_pp0_iter13_reg <= select_ln65_reg_858_pp0_iter12_reg;
        select_ln65_reg_858_pp0_iter14_reg <= select_ln65_reg_858_pp0_iter13_reg;
        select_ln65_reg_858_pp0_iter15_reg <= select_ln65_reg_858_pp0_iter14_reg;
        select_ln65_reg_858_pp0_iter16_reg <= select_ln65_reg_858_pp0_iter15_reg;
        select_ln65_reg_858_pp0_iter17_reg <= select_ln65_reg_858_pp0_iter16_reg;
        select_ln65_reg_858_pp0_iter18_reg <= select_ln65_reg_858_pp0_iter17_reg;
        select_ln65_reg_858_pp0_iter19_reg <= select_ln65_reg_858_pp0_iter18_reg;
        select_ln65_reg_858_pp0_iter20_reg <= select_ln65_reg_858_pp0_iter19_reg;
        select_ln65_reg_858_pp0_iter21_reg <= select_ln65_reg_858_pp0_iter20_reg;
        select_ln65_reg_858_pp0_iter22_reg <= select_ln65_reg_858_pp0_iter21_reg;
        select_ln65_reg_858_pp0_iter23_reg <= select_ln65_reg_858_pp0_iter22_reg;
        select_ln65_reg_858_pp0_iter2_reg <= select_ln65_reg_858_pp0_iter1_reg;
        select_ln65_reg_858_pp0_iter3_reg <= select_ln65_reg_858_pp0_iter2_reg;
        select_ln65_reg_858_pp0_iter4_reg <= select_ln65_reg_858_pp0_iter3_reg;
        select_ln65_reg_858_pp0_iter5_reg <= select_ln65_reg_858_pp0_iter4_reg;
        select_ln65_reg_858_pp0_iter6_reg <= select_ln65_reg_858_pp0_iter5_reg;
        select_ln65_reg_858_pp0_iter7_reg <= select_ln65_reg_858_pp0_iter6_reg;
        select_ln65_reg_858_pp0_iter8_reg <= select_ln65_reg_858_pp0_iter7_reg;
        select_ln65_reg_858_pp0_iter9_reg <= select_ln65_reg_858_pp0_iter8_reg;
        shl_ln_reg_877[8 : 1] <= shl_ln_fu_337_p3[8 : 1];
        shl_ln_reg_877_pp0_iter10_reg[8 : 1] <= shl_ln_reg_877_pp0_iter9_reg[8 : 1];
        shl_ln_reg_877_pp0_iter11_reg[8 : 1] <= shl_ln_reg_877_pp0_iter10_reg[8 : 1];
        shl_ln_reg_877_pp0_iter12_reg[8 : 1] <= shl_ln_reg_877_pp0_iter11_reg[8 : 1];
        shl_ln_reg_877_pp0_iter13_reg[8 : 1] <= shl_ln_reg_877_pp0_iter12_reg[8 : 1];
        shl_ln_reg_877_pp0_iter14_reg[8 : 1] <= shl_ln_reg_877_pp0_iter13_reg[8 : 1];
        shl_ln_reg_877_pp0_iter15_reg[8 : 1] <= shl_ln_reg_877_pp0_iter14_reg[8 : 1];
        shl_ln_reg_877_pp0_iter16_reg[8 : 1] <= shl_ln_reg_877_pp0_iter15_reg[8 : 1];
        shl_ln_reg_877_pp0_iter17_reg[8 : 1] <= shl_ln_reg_877_pp0_iter16_reg[8 : 1];
        shl_ln_reg_877_pp0_iter18_reg[8 : 1] <= shl_ln_reg_877_pp0_iter17_reg[8 : 1];
        shl_ln_reg_877_pp0_iter19_reg[8 : 1] <= shl_ln_reg_877_pp0_iter18_reg[8 : 1];
        shl_ln_reg_877_pp0_iter20_reg[8 : 1] <= shl_ln_reg_877_pp0_iter19_reg[8 : 1];
        shl_ln_reg_877_pp0_iter3_reg[8 : 1] <= shl_ln_reg_877[8 : 1];
        shl_ln_reg_877_pp0_iter4_reg[8 : 1] <= shl_ln_reg_877_pp0_iter3_reg[8 : 1];
        shl_ln_reg_877_pp0_iter5_reg[8 : 1] <= shl_ln_reg_877_pp0_iter4_reg[8 : 1];
        shl_ln_reg_877_pp0_iter6_reg[8 : 1] <= shl_ln_reg_877_pp0_iter5_reg[8 : 1];
        shl_ln_reg_877_pp0_iter7_reg[8 : 1] <= shl_ln_reg_877_pp0_iter6_reg[8 : 1];
        shl_ln_reg_877_pp0_iter8_reg[8 : 1] <= shl_ln_reg_877_pp0_iter7_reg[8 : 1];
        shl_ln_reg_877_pp0_iter9_reg[8 : 1] <= shl_ln_reg_877_pp0_iter8_reg[8 : 1];
        tmp_10_reg_1036 <= {{tmp_6_fu_582_p9[31:16]}};
        tmp_13_reg_1046 <= {{tmp_4_fu_559_p9[47:32]}};
        tmp_14_reg_1051 <= {{tmp_6_fu_582_p9[47:32]}};
        tmp_1_reg_893 <= {{mul_ln67_fu_362_p2[36:20]}};
        tmp_1_reg_893_pp0_iter10_reg <= tmp_1_reg_893_pp0_iter9_reg;
        tmp_1_reg_893_pp0_iter11_reg <= tmp_1_reg_893_pp0_iter10_reg;
        tmp_1_reg_893_pp0_iter12_reg <= tmp_1_reg_893_pp0_iter11_reg;
        tmp_1_reg_893_pp0_iter13_reg <= tmp_1_reg_893_pp0_iter12_reg;
        tmp_1_reg_893_pp0_iter14_reg <= tmp_1_reg_893_pp0_iter13_reg;
        tmp_1_reg_893_pp0_iter15_reg <= tmp_1_reg_893_pp0_iter14_reg;
        tmp_1_reg_893_pp0_iter16_reg <= tmp_1_reg_893_pp0_iter15_reg;
        tmp_1_reg_893_pp0_iter17_reg <= tmp_1_reg_893_pp0_iter16_reg;
        tmp_1_reg_893_pp0_iter18_reg <= tmp_1_reg_893_pp0_iter17_reg;
        tmp_1_reg_893_pp0_iter19_reg <= tmp_1_reg_893_pp0_iter18_reg;
        tmp_1_reg_893_pp0_iter20_reg <= tmp_1_reg_893_pp0_iter19_reg;
        tmp_1_reg_893_pp0_iter21_reg <= tmp_1_reg_893_pp0_iter20_reg;
        tmp_1_reg_893_pp0_iter22_reg <= tmp_1_reg_893_pp0_iter21_reg;
        tmp_1_reg_893_pp0_iter23_reg <= tmp_1_reg_893_pp0_iter22_reg;
        tmp_1_reg_893_pp0_iter4_reg <= tmp_1_reg_893;
        tmp_1_reg_893_pp0_iter5_reg <= tmp_1_reg_893_pp0_iter4_reg;
        tmp_1_reg_893_pp0_iter6_reg <= tmp_1_reg_893_pp0_iter5_reg;
        tmp_1_reg_893_pp0_iter7_reg <= tmp_1_reg_893_pp0_iter6_reg;
        tmp_1_reg_893_pp0_iter8_reg <= tmp_1_reg_893_pp0_iter7_reg;
        tmp_1_reg_893_pp0_iter9_reg <= tmp_1_reg_893_pp0_iter8_reg;
        tmp_3_reg_918 <= {{mul_ln67_1_fu_414_p2[36:20]}};
        tmp_3_reg_918_pp0_iter23_reg <= tmp_3_reg_918;
        tmp_5_reg_923 <= {{mul_ln67_2_fu_433_p2[36:20]}};
        tmp_5_reg_923_pp0_iter23_reg <= tmp_5_reg_923;
        tmp_7_reg_928 <= {{mul_ln67_3_fu_452_p2[36:20]}};
        tmp_7_reg_928_pp0_iter23_reg <= tmp_7_reg_928;
        tmp_8_reg_1031 <= {{tmp_4_fu_559_p9[31:16]}};
        trunc_ln67_3_reg_1011 <= trunc_ln67_3_fu_578_p1;
        trunc_ln67_4_reg_1016 <= trunc_ln67_4_fu_601_p1;
        trunc_ln67_reg_933 <= trunc_ln67_fu_468_p1;
        trunc_ln67_reg_933_pp0_iter24_reg <= trunc_ln67_reg_933;
        zext_ln67_reg_882[8 : 1] <= zext_ln67_fu_344_p1[8 : 1];
        zext_ln67_reg_882_pp0_iter10_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter9_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter11_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter10_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter12_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter11_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter13_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter12_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter14_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter13_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter15_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter14_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter16_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter15_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter17_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter16_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter18_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter17_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter19_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter18_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter20_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter19_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter3_reg[8 : 1] <= zext_ln67_reg_882[8 : 1];
        zext_ln67_reg_882_pp0_iter4_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter3_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter5_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter4_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter6_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter5_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter7_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter6_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter8_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter7_reg[8 : 1];
        zext_ln67_reg_882_pp0_iter9_reg[8 : 1] <= zext_ln67_reg_882_pp0_iter8_reg[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln67_7_reg_1021 <= grp_fu_825_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_reg_870 <= empty_fu_331_p2;
        select_ln65_1_reg_864 <= select_ln65_1_fu_299_p3;
        select_ln65_1_reg_864_pp0_iter1_reg <= select_ln65_1_reg_864;
        select_ln65_reg_858 <= select_ln65_fu_285_p3;
        select_ln65_reg_858_pp0_iter1_reg <= select_ln65_reg_858;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln65_fu_261_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter25_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 8'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_100;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_104;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 8'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_96;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        downsample_block_ce0 = 1'b1;
    end else begin
        downsample_block_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        downsample_block_we0 = 8'd63;
    end else begin
        downsample_block_we0 = 8'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_933 == 2'd0)) begin
            image_block_1_address0 = zext_ln67_9_fu_493_p1;
        end else if ((trunc_ln67_reg_933 == 2'd2)) begin
            image_block_1_address0 = zext_ln67_6_fu_487_p1;
        end else if ((trunc_ln67_reg_933 == 2'd1)) begin
            image_block_1_address0 = zext_ln67_3_fu_481_p1;
        end else begin
            image_block_1_address0 = 'bx;
        end
    end else begin
        image_block_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln67_reg_933 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln67_reg_933 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln67_reg_933 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        image_block_1_ce0 = 1'b1;
    end else begin
        image_block_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_block_1_ce1 = 1'b1;
    end else begin
        image_block_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_933 == 2'd1)) begin
            image_block_2_address0 = zext_ln67_9_fu_493_p1;
        end else if ((trunc_ln67_reg_933 == 2'd0)) begin
            image_block_2_address0 = zext_ln67_6_fu_487_p1;
        end else if ((trunc_ln67_reg_933 == 2'd2)) begin
            image_block_2_address0 = zext_ln67_3_fu_481_p1;
        end else begin
            image_block_2_address0 = 'bx;
        end
    end else begin
        image_block_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln67_reg_933 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln67_reg_933 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln67_reg_933 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        image_block_2_ce0 = 1'b1;
    end else begin
        image_block_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_block_2_ce1 = 1'b1;
    end else begin
        image_block_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_933 == 2'd2)) begin
            image_block_address0 = zext_ln67_9_fu_493_p1;
        end else if ((trunc_ln67_reg_933 == 2'd1)) begin
            image_block_address0 = zext_ln67_6_fu_487_p1;
        end else if ((trunc_ln67_reg_933 == 2'd0)) begin
            image_block_address0 = zext_ln67_3_fu_481_p1;
        end else begin
            image_block_address0 = 'bx;
        end
    end else begin
        image_block_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln67_reg_933 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln67_reg_933 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln67_reg_933 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        image_block_ce0 = 1'b1;
    end else begin
        image_block_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_block_ce1 = 1'b1;
    end else begin
        image_block_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln65_1_fu_293_p2 = (ap_sig_allocacmp_i_load + 8'd1);

assign add_ln65_fu_267_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 16'd1);

assign add_ln66_fu_307_p2 = (select_ln65_fu_285_p3 + 8'd1);

assign add_ln67_1_fu_392_p2 = (zext_ln67_2_fu_388_p1 + empty_21_fu_378_p2);

assign add_ln67_2_fu_553_p2 = (zext_ln67_5_fu_549_p1 + zext_ln67_4_fu_545_p1);

assign add_ln67_3_fu_398_p2 = (zext_ln67_reg_882_pp0_iter20_reg + empty_21_fu_378_p2);

assign add_ln67_4_fu_719_p2 = (zext_ln67_7_fu_713_p1 + zext_ln67_8_fu_716_p1);

assign add_ln67_5_fu_403_p2 = (zext_ln67_2_fu_388_p1 + empty_reg_870_pp0_iter20_reg);

assign add_ln67_6_fu_728_p2 = (add_ln67_4_fu_719_p2 + zext_ln67_10_fu_725_p1);

assign add_ln67_fu_348_p2 = (zext_ln67_fu_344_p1 + empty_reg_870);

assign add_ln68_1_fu_754_p2 = (zext_ln68_2_fu_748_p1 + zext_ln68_3_fu_751_p1);

assign add_ln68_2_fu_763_p2 = (add_ln68_1_fu_754_p2 + zext_ln68_4_fu_760_p1);

assign add_ln68_fu_633_p2 = (zext_ln68_1_fu_629_p1 + zext_ln68_fu_625_p1);

assign add_ln69_1_fu_785_p2 = (zext_ln69_2_fu_779_p1 + zext_ln69_3_fu_782_p1);

assign add_ln69_2_fu_794_p2 = (add_ln69_1_fu_785_p2 + zext_ln69_4_fu_791_p1);

assign add_ln69_fu_687_p2 = (zext_ln69_1_fu_683_p1 + zext_ln69_fu_679_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign downsample_block_address0 = zext_ln67_11_fu_734_p1;

assign downsample_block_d0 = tmp_15_fu_810_p4;

assign empty_21_fu_378_p2 = (empty_reg_870_pp0_iter20_reg + 18'd500);

assign empty_fu_331_p0 = empty_fu_331_p00;

assign empty_fu_331_p00 = select_ln65_1_reg_864;

assign empty_fu_331_p1 = 18'd1000;

assign grp_fu_353_p0 = (zext_ln67_fu_344_p1 + empty_reg_870);

assign grp_fu_353_p1 = 18'd3;

assign grp_fu_825_p0 = grp_fu_825_p00;

assign grp_fu_825_p00 = select_ln65_1_reg_864_pp0_iter21_reg;

assign grp_fu_825_p1 = 16'd250;

assign grp_fu_825_p2 = grp_fu_825_p20;

assign grp_fu_825_p20 = select_ln65_reg_858_pp0_iter23_reg;

assign icmp_ln65_fu_261_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 16'd62500) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_279_p2 = ((ap_sig_allocacmp_j_load == 8'd250) ? 1'b1 : 1'b0);

assign image_block_1_address1 = zext_ln67_1_fu_475_p1;

assign image_block_2_address1 = zext_ln67_1_fu_475_p1;

assign image_block_address1 = zext_ln67_1_fu_475_p1;

assign mul_ln67_1_fu_414_p0 = mul_ln67_1_fu_414_p00;

assign mul_ln67_1_fu_414_p00 = add_ln67_1_reg_898;

assign mul_ln67_1_fu_414_p1 = 37'd349526;

assign mul_ln67_2_fu_433_p0 = mul_ln67_2_fu_433_p00;

assign mul_ln67_2_fu_433_p00 = add_ln67_3_reg_903;

assign mul_ln67_2_fu_433_p1 = 37'd349526;

assign mul_ln67_3_fu_452_p0 = mul_ln67_3_fu_452_p00;

assign mul_ln67_3_fu_452_p00 = add_ln67_5_reg_908;

assign mul_ln67_3_fu_452_p1 = 37'd349526;

assign mul_ln67_fu_362_p0 = mul_ln67_fu_362_p00;

assign mul_ln67_fu_362_p00 = add_ln67_reg_887;

assign mul_ln67_fu_362_p1 = 37'd349526;

assign or_ln67_fu_383_p2 = (shl_ln_reg_877_pp0_iter20_reg | 9'd1);

assign select_ln65_1_fu_299_p3 = ((icmp_ln66_fu_279_p2[0:0] == 1'b1) ? add_ln65_1_fu_293_p2 : ap_sig_allocacmp_i_load);

assign select_ln65_fu_285_p3 = ((icmp_ln66_fu_279_p2[0:0] == 1'b1) ? 8'd0 : ap_sig_allocacmp_j_load);

assign shl_ln_fu_337_p3 = {{select_ln65_reg_858_pp0_iter1_reg}, {1'd0}};

assign tmp_11_fu_659_p4 = {{tmp_fu_499_p9[47:32]}};

assign tmp_12_fu_669_p4 = {{tmp_2_fu_522_p9[47:32]}};

assign tmp_15_fu_810_p4 = {{{trunc_ln4_fu_800_p4}, {trunc_ln3_fu_769_p4}}, {trunc_ln2_fu_738_p4}};

assign tmp_2_fu_522_p7 = 'bx;

assign tmp_4_fu_559_p7 = 'bx;

assign tmp_6_fu_582_p7 = 'bx;

assign tmp_9_fu_605_p4 = {{tmp_fu_499_p9[31:16]}};

assign tmp_fu_499_p7 = 'bx;

assign tmp_s_fu_615_p4 = {{tmp_2_fu_522_p9[31:16]}};

assign trunc_ln2_fu_738_p4 = {{add_ln67_6_fu_728_p2[17:2]}};

assign trunc_ln3_fu_769_p4 = {{add_ln68_2_fu_763_p2[17:2]}};

assign trunc_ln4_fu_800_p4 = {{add_ln69_2_fu_794_p2[17:2]}};

assign trunc_ln67_1_fu_518_p1 = tmp_fu_499_p9[15:0];

assign trunc_ln67_2_fu_541_p1 = tmp_2_fu_522_p9[15:0];

assign trunc_ln67_3_fu_578_p1 = tmp_4_fu_559_p9[15:0];

assign trunc_ln67_4_fu_601_p1 = tmp_6_fu_582_p9[15:0];

assign trunc_ln67_fu_468_p1 = grp_fu_353_p2[1:0];

assign zext_ln67_10_fu_725_p1 = trunc_ln67_4_reg_1016;

assign zext_ln67_11_fu_734_p1 = add_ln67_7_reg_1021;

assign zext_ln67_1_fu_475_p1 = tmp_1_reg_893_pp0_iter23_reg;

assign zext_ln67_2_fu_388_p1 = or_ln67_fu_383_p2;

assign zext_ln67_3_fu_481_p1 = tmp_3_reg_918_pp0_iter23_reg;

assign zext_ln67_4_fu_545_p1 = trunc_ln67_1_fu_518_p1;

assign zext_ln67_5_fu_549_p1 = trunc_ln67_2_fu_541_p1;

assign zext_ln67_6_fu_487_p1 = tmp_5_reg_923_pp0_iter23_reg;

assign zext_ln67_7_fu_713_p1 = add_ln67_2_reg_1006;

assign zext_ln67_8_fu_716_p1 = trunc_ln67_3_reg_1011;

assign zext_ln67_9_fu_493_p1 = tmp_7_reg_928_pp0_iter23_reg;

assign zext_ln67_fu_344_p1 = shl_ln_fu_337_p3;

assign zext_ln68_1_fu_629_p1 = tmp_s_fu_615_p4;

assign zext_ln68_2_fu_748_p1 = add_ln68_reg_1026;

assign zext_ln68_3_fu_751_p1 = tmp_8_reg_1031;

assign zext_ln68_4_fu_760_p1 = tmp_10_reg_1036;

assign zext_ln68_fu_625_p1 = tmp_9_fu_605_p4;

assign zext_ln69_1_fu_683_p1 = tmp_12_fu_669_p4;

assign zext_ln69_2_fu_779_p1 = add_ln69_reg_1041;

assign zext_ln69_3_fu_782_p1 = tmp_13_reg_1046;

assign zext_ln69_4_fu_791_p1 = tmp_14_reg_1051;

assign zext_ln69_fu_679_p1 = tmp_11_fu_659_p4;

always @ (posedge ap_clk) begin
    shl_ln_reg_877[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter3_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter4_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter5_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter6_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter7_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter8_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter9_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter10_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter11_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter12_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter13_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter14_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter15_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter16_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter17_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter18_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter19_reg[0] <= 1'b0;
    shl_ln_reg_877_pp0_iter20_reg[0] <= 1'b0;
    zext_ln67_reg_882[0] <= 1'b0;
    zext_ln67_reg_882[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter3_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter3_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter4_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter4_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter5_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter5_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter6_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter6_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter7_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter7_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter8_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter8_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter9_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter9_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter10_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter10_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter11_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter11_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter12_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter12_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter13_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter13_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter14_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter14_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter15_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter15_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter16_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter16_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter17_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter17_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter18_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter18_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter19_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter19_reg[17:9] <= 9'b000000000;
    zext_ln67_reg_882_pp0_iter20_reg[0] <= 1'b0;
    zext_ln67_reg_882_pp0_iter20_reg[17:9] <= 9'b000000000;
end

endmodule //downsample_downsample_Pipeline_downsample_VITIS_LOOP_66_2
