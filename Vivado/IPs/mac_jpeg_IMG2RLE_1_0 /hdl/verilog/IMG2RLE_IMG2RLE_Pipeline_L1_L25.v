// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module IMG2RLE_IMG2RLE_Pipeline_L1_L25 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dct_middle_2_address0,
        dct_middle_2_ce0,
        dct_middle_2_q0,
        dct_middle_2_address1,
        dct_middle_2_ce1,
        dct_middle_2_q1,
        dct_middle_2_address2,
        dct_middle_2_ce2,
        dct_middle_2_q2,
        dct_middle_2_address3,
        dct_middle_2_ce3,
        dct_middle_2_q3,
        dct_middle_2_address4,
        dct_middle_2_ce4,
        dct_middle_2_q4,
        dct_middle_2_address5,
        dct_middle_2_ce5,
        dct_middle_2_q5,
        dct_middle_2_address6,
        dct_middle_2_ce6,
        dct_middle_2_q6,
        dct_middle_2_address7,
        dct_middle_2_ce7,
        dct_middle_2_q7,
        dct_1_address0,
        dct_1_ce0,
        dct_1_we0,
        dct_1_d0,
        dct_1_address1,
        dct_1_ce1,
        dct_1_q1,
        dct12_i_0_address0,
        dct12_i_0_ce0,
        dct12_i_0_q0,
        dct12_i_1_address0,
        dct12_i_1_ce0,
        dct12_i_1_q0,
        dct12_i_2_address0,
        dct12_i_2_ce0,
        dct12_i_2_q0,
        dct12_i_3_address0,
        dct12_i_3_ce0,
        dct12_i_3_q0,
        dct12_i_4_address0,
        dct12_i_4_ce0,
        dct12_i_4_q0,
        dct12_i_5_address0,
        dct12_i_5_ce0,
        dct12_i_5_q0,
        dct12_i_6_address0,
        dct12_i_6_ce0,
        dct12_i_6_q0,
        dct12_i_7_address0,
        dct12_i_7_ce0,
        dct12_i_7_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] dct_middle_2_address0;
output   dct_middle_2_ce0;
input  [17:0] dct_middle_2_q0;
output  [5:0] dct_middle_2_address1;
output   dct_middle_2_ce1;
input  [17:0] dct_middle_2_q1;
output  [5:0] dct_middle_2_address2;
output   dct_middle_2_ce2;
input  [17:0] dct_middle_2_q2;
output  [5:0] dct_middle_2_address3;
output   dct_middle_2_ce3;
input  [17:0] dct_middle_2_q3;
output  [5:0] dct_middle_2_address4;
output   dct_middle_2_ce4;
input  [17:0] dct_middle_2_q4;
output  [5:0] dct_middle_2_address5;
output   dct_middle_2_ce5;
input  [17:0] dct_middle_2_q5;
output  [5:0] dct_middle_2_address6;
output   dct_middle_2_ce6;
input  [17:0] dct_middle_2_q6;
output  [5:0] dct_middle_2_address7;
output   dct_middle_2_ce7;
input  [17:0] dct_middle_2_q7;
output  [5:0] dct_1_address0;
output   dct_1_ce0;
output   dct_1_we0;
output  [15:0] dct_1_d0;
output  [5:0] dct_1_address1;
output   dct_1_ce1;
input  [15:0] dct_1_q1;
output  [2:0] dct12_i_0_address0;
output   dct12_i_0_ce0;
input  [10:0] dct12_i_0_q0;
output  [2:0] dct12_i_1_address0;
output   dct12_i_1_ce0;
input  [11:0] dct12_i_1_q0;
output  [2:0] dct12_i_2_address0;
output   dct12_i_2_ce0;
input  [11:0] dct12_i_2_q0;
output  [2:0] dct12_i_3_address0;
output   dct12_i_3_ce0;
input  [11:0] dct12_i_3_q0;
output  [2:0] dct12_i_4_address0;
output   dct12_i_4_ce0;
input  [11:0] dct12_i_4_q0;
output  [2:0] dct12_i_5_address0;
output   dct12_i_5_ce0;
input  [11:0] dct12_i_5_q0;
output  [2:0] dct12_i_6_address0;
output   dct12_i_6_ce0;
input  [11:0] dct12_i_6_q0;
output  [2:0] dct12_i_7_address0;
output   dct12_i_7_ce0;
input  [11:0] dct12_i_7_q0;

reg ap_idle;
reg dct_middle_2_ce0;
reg dct_middle_2_ce1;
reg dct_middle_2_ce2;
reg dct_middle_2_ce3;
reg dct_middle_2_ce4;
reg dct_middle_2_ce5;
reg dct_middle_2_ce6;
reg dct_middle_2_ce7;
reg dct_1_ce0;
reg dct_1_we0;
reg dct_1_ce1;
reg dct12_i_0_ce0;
reg dct12_i_1_ce0;
reg dct12_i_2_ce0;
reg dct12_i_3_ce0;
reg dct12_i_4_ce0;
reg dct12_i_5_ce0;
reg dct12_i_6_ce0;
reg dct12_i_7_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln77_fu_324_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] empty_211_fu_480_p2;
reg   [5:0] empty_211_reg_789;
reg   [5:0] empty_211_reg_789_pp0_iter1_reg;
reg   [5:0] empty_211_reg_789_pp0_iter2_reg;
reg  signed [17:0] dct_middle_2_load_reg_834;
reg  signed [17:0] dct_middle_2_load_1_reg_839;
reg  signed [17:0] dct_middle_2_load_2_reg_844;
reg  signed [17:0] dct_middle_2_load_3_reg_849;
reg  signed [17:0] dct_middle_2_load_4_reg_854;
reg  signed [17:0] dct_middle_2_load_5_reg_859;
reg  signed [17:0] dct_middle_2_load_6_reg_864;
reg  signed [17:0] dct_middle_2_load_7_reg_869;
reg   [10:0] dct12_i_0_load_reg_874;
reg  signed [11:0] dct12_i_1_load_reg_879;
reg  signed [11:0] dct12_i_2_load_reg_884;
reg  signed [11:0] dct12_i_3_load_reg_889;
reg  signed [11:0] dct12_i_4_load_reg_894;
reg  signed [11:0] dct12_i_5_load_reg_899;
reg  signed [11:0] dct12_i_6_load_reg_904;
reg  signed [11:0] dct12_i_7_load_reg_909;
reg   [15:0] trunc_ln85_s_reg_914;
reg   [15:0] trunc_ln85_1_reg_919;
reg   [15:0] trunc_ln85_1_reg_919_pp0_iter3_reg;
reg   [15:0] trunc_ln85_2_reg_924;
reg   [15:0] trunc_ln85_3_reg_929;
reg   [15:0] trunc_ln85_3_reg_929_pp0_iter3_reg;
reg   [15:0] trunc_ln85_4_reg_934;
reg   [15:0] trunc_ln85_4_reg_934_pp0_iter3_reg;
reg   [15:0] trunc_ln85_5_reg_939;
reg   [15:0] trunc_ln85_6_reg_944;
reg   [15:0] trunc_ln85_7_reg_949;
reg   [5:0] dct_1_addr_reg_954;
reg   [5:0] dct_1_addr_reg_954_pp0_iter4_reg;
wire   [15:0] add_ln85_1_fu_687_p2;
reg   [15:0] add_ln85_1_reg_960;
reg   [15:0] add_ln85_1_reg_960_pp0_iter4_reg;
wire   [15:0] add_ln85_5_fu_695_p2;
reg   [15:0] add_ln85_5_reg_965;
wire   [15:0] add_ln85_fu_700_p2;
reg   [15:0] add_ln85_reg_970;
wire   [15:0] add_ln85_6_fu_709_p2;
reg   [15:0] add_ln85_6_reg_975;
wire   [63:0] tmp_100_cast1_fu_382_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_101_cast_fu_393_p1;
wire   [63:0] tmp_102_cast_fu_404_p1;
wire   [63:0] tmp_103_cast_fu_415_p1;
wire   [63:0] tmp_104_cast_fu_426_p1;
wire   [63:0] tmp_105_cast_fu_437_p1;
wire   [63:0] tmp_106_cast_fu_448_p1;
wire   [63:0] tmp_107_cast_fu_459_p1;
wire   [63:0] zext_ln78_fu_464_p1;
wire   [63:0] p_cast_fu_683_p1;
reg   [3:0] jj_fu_76;
wire   [3:0] add_ln78_fu_486_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_jj_load;
reg   [3:0] ii_fu_80;
wire   [3:0] select_ln77_1_fu_362_p3;
reg   [3:0] ap_sig_allocacmp_ii_load;
reg   [6:0] indvar_flatten111_fu_84;
wire   [6:0] add_ln77_fu_330_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten111_load;
wire   [0:0] icmp_ln78_fu_348_p2;
wire   [3:0] add_ln77_1_fu_342_p2;
wire   [2:0] empty_fu_370_p1;
wire   [5:0] tmp_100_cast_fu_374_p3;
wire   [5:0] tmp_101_fu_387_p2;
wire   [5:0] tmp_102_fu_398_p2;
wire   [5:0] tmp_103_fu_409_p2;
wire   [5:0] tmp_104_fu_420_p2;
wire   [5:0] tmp_105_fu_431_p2;
wire   [5:0] tmp_106_fu_442_p2;
wire   [5:0] tmp_107_fu_453_p2;
wire   [3:0] select_ln77_fu_354_p3;
wire   [5:0] select_ln77_4_cast_fu_476_p1;
wire   [10:0] mul_ln82_fu_534_p1;
wire   [27:0] mul_ln82_fu_534_p2;
wire   [27:0] mul_ln82_1_fu_543_p2;
wire   [27:0] mul_ln82_2_fu_552_p2;
wire   [27:0] mul_ln82_3_fu_561_p2;
wire   [27:0] mul_ln82_4_fu_570_p2;
wire   [27:0] mul_ln82_5_fu_579_p2;
wire   [27:0] mul_ln82_6_fu_588_p2;
wire   [27:0] mul_ln82_23_fu_597_p2;
wire   [15:0] add_ln85_4_fu_691_p2;
wire   [15:0] add_ln85_3_fu_705_p2;
wire   [15:0] add_ln85_2_fu_714_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [27:0] mul_ln82_fu_534_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 jj_fu_76 = 4'd0;
#0 ii_fu_80 = 4'd0;
#0 indvar_flatten111_fu_84 = 7'd0;
#0 ap_done_reg = 1'b0;
end

IMG2RLE_mul_18s_11ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 28 ))
mul_18s_11ns_28_1_1_U2200(
    .din0(dct_middle_2_load_reg_834),
    .din1(mul_ln82_fu_534_p1),
    .dout(mul_ln82_fu_534_p2)
);

IMG2RLE_mul_18s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
mul_18s_12s_28_1_1_U2201(
    .din0(dct_middle_2_load_1_reg_839),
    .din1(dct12_i_1_load_reg_879),
    .dout(mul_ln82_1_fu_543_p2)
);

IMG2RLE_mul_18s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
mul_18s_12s_28_1_1_U2202(
    .din0(dct_middle_2_load_2_reg_844),
    .din1(dct12_i_2_load_reg_884),
    .dout(mul_ln82_2_fu_552_p2)
);

IMG2RLE_mul_18s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
mul_18s_12s_28_1_1_U2203(
    .din0(dct_middle_2_load_3_reg_849),
    .din1(dct12_i_3_load_reg_889),
    .dout(mul_ln82_3_fu_561_p2)
);

IMG2RLE_mul_18s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
mul_18s_12s_28_1_1_U2204(
    .din0(dct_middle_2_load_4_reg_854),
    .din1(dct12_i_4_load_reg_894),
    .dout(mul_ln82_4_fu_570_p2)
);

IMG2RLE_mul_18s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
mul_18s_12s_28_1_1_U2205(
    .din0(dct_middle_2_load_5_reg_859),
    .din1(dct12_i_5_load_reg_899),
    .dout(mul_ln82_5_fu_579_p2)
);

IMG2RLE_mul_18s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
mul_18s_12s_28_1_1_U2206(
    .din0(dct_middle_2_load_6_reg_864),
    .din1(dct12_i_6_load_reg_904),
    .dout(mul_ln82_6_fu_588_p2)
);

IMG2RLE_mul_18s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
mul_18s_12s_28_1_1_U2207(
    .din0(dct_middle_2_load_7_reg_869),
    .din1(dct12_i_7_load_reg_909),
    .dout(mul_ln82_23_fu_597_p2)
);

IMG2RLE_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln77_fu_324_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            ii_fu_80 <= select_ln77_1_fu_362_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            ii_fu_80 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln77_fu_324_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten111_fu_84 <= add_ln77_fu_330_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten111_fu_84 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln77_fu_324_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            jj_fu_76 <= add_ln78_fu_486_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            jj_fu_76 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln85_1_reg_960 <= add_ln85_1_fu_687_p2;
        add_ln85_1_reg_960_pp0_iter4_reg <= add_ln85_1_reg_960;
        add_ln85_5_reg_965 <= add_ln85_5_fu_695_p2;
        add_ln85_6_reg_975 <= add_ln85_6_fu_709_p2;
        add_ln85_reg_970 <= add_ln85_fu_700_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        dct_1_addr_reg_954 <= p_cast_fu_683_p1;
        dct_1_addr_reg_954_pp0_iter4_reg <= dct_1_addr_reg_954;
        empty_211_reg_789_pp0_iter2_reg <= empty_211_reg_789_pp0_iter1_reg;
        trunc_ln85_1_reg_919 <= {{mul_ln82_1_fu_543_p2[27:12]}};
        trunc_ln85_1_reg_919_pp0_iter3_reg <= trunc_ln85_1_reg_919;
        trunc_ln85_2_reg_924 <= {{mul_ln82_2_fu_552_p2[27:12]}};
        trunc_ln85_3_reg_929 <= {{mul_ln82_3_fu_561_p2[27:12]}};
        trunc_ln85_3_reg_929_pp0_iter3_reg <= trunc_ln85_3_reg_929;
        trunc_ln85_4_reg_934 <= {{mul_ln82_4_fu_570_p2[27:12]}};
        trunc_ln85_4_reg_934_pp0_iter3_reg <= trunc_ln85_4_reg_934;
        trunc_ln85_5_reg_939 <= {{mul_ln82_5_fu_579_p2[27:12]}};
        trunc_ln85_6_reg_944 <= {{mul_ln82_6_fu_588_p2[27:12]}};
        trunc_ln85_7_reg_949 <= {{mul_ln82_23_fu_597_p2[27:12]}};
        trunc_ln85_s_reg_914 <= {{mul_ln82_fu_534_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        dct12_i_0_load_reg_874 <= dct12_i_0_q0;
        dct12_i_1_load_reg_879 <= dct12_i_1_q0;
        dct12_i_2_load_reg_884 <= dct12_i_2_q0;
        dct12_i_3_load_reg_889 <= dct12_i_3_q0;
        dct12_i_4_load_reg_894 <= dct12_i_4_q0;
        dct12_i_5_load_reg_899 <= dct12_i_5_q0;
        dct12_i_6_load_reg_904 <= dct12_i_6_q0;
        dct12_i_7_load_reg_909 <= dct12_i_7_q0;
        empty_211_reg_789 <= empty_211_fu_480_p2;
        empty_211_reg_789_pp0_iter1_reg <= empty_211_reg_789;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_middle_2_load_1_reg_839 <= dct_middle_2_q6;
        dct_middle_2_load_2_reg_844 <= dct_middle_2_q5;
        dct_middle_2_load_3_reg_849 <= dct_middle_2_q4;
        dct_middle_2_load_4_reg_854 <= dct_middle_2_q3;
        dct_middle_2_load_5_reg_859 <= dct_middle_2_q2;
        dct_middle_2_load_6_reg_864 <= dct_middle_2_q1;
        dct_middle_2_load_7_reg_869 <= dct_middle_2_q0;
        dct_middle_2_load_reg_834 <= dct_middle_2_q7;
    end
end

always @ (*) begin
    if (((icmp_ln77_fu_324_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ii_load = 4'd0;
    end else begin
        ap_sig_allocacmp_ii_load = ii_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten111_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten111_load = indvar_flatten111_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_jj_load = 4'd0;
    end else begin
        ap_sig_allocacmp_jj_load = jj_fu_76;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i_0_ce0 = 1'b1;
    end else begin
        dct12_i_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i_1_ce0 = 1'b1;
    end else begin
        dct12_i_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i_2_ce0 = 1'b1;
    end else begin
        dct12_i_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i_3_ce0 = 1'b1;
    end else begin
        dct12_i_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i_4_ce0 = 1'b1;
    end else begin
        dct12_i_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i_5_ce0 = 1'b1;
    end else begin
        dct12_i_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i_6_ce0 = 1'b1;
    end else begin
        dct12_i_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i_7_ce0 = 1'b1;
    end else begin
        dct12_i_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        dct_1_ce0 = 1'b1;
    end else begin
        dct_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dct_1_ce1 = 1'b1;
    end else begin
        dct_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        dct_1_we0 = 1'b1;
    end else begin
        dct_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_middle_2_ce0 = 1'b1;
    end else begin
        dct_middle_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_middle_2_ce1 = 1'b1;
    end else begin
        dct_middle_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_middle_2_ce2 = 1'b1;
    end else begin
        dct_middle_2_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_middle_2_ce3 = 1'b1;
    end else begin
        dct_middle_2_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_middle_2_ce4 = 1'b1;
    end else begin
        dct_middle_2_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_middle_2_ce5 = 1'b1;
    end else begin
        dct_middle_2_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_middle_2_ce6 = 1'b1;
    end else begin
        dct_middle_2_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_middle_2_ce7 = 1'b1;
    end else begin
        dct_middle_2_ce7 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln77_1_fu_342_p2 = (ap_sig_allocacmp_ii_load + 4'd1);

assign add_ln77_fu_330_p2 = (ap_sig_allocacmp_indvar_flatten111_load + 7'd1);

assign add_ln78_fu_486_p2 = (select_ln77_fu_354_p3 + 4'd1);

assign add_ln85_1_fu_687_p2 = (trunc_ln85_s_reg_914 + trunc_ln85_2_reg_924);

assign add_ln85_2_fu_714_p2 = (add_ln85_1_reg_960_pp0_iter4_reg + add_ln85_reg_970);

assign add_ln85_3_fu_705_p2 = (trunc_ln85_3_reg_929_pp0_iter3_reg + trunc_ln85_4_reg_934_pp0_iter3_reg);

assign add_ln85_4_fu_691_p2 = (trunc_ln85_6_reg_944 + trunc_ln85_7_reg_949);

assign add_ln85_5_fu_695_p2 = (add_ln85_4_fu_691_p2 + trunc_ln85_5_reg_939);

assign add_ln85_6_fu_709_p2 = (add_ln85_5_reg_965 + add_ln85_3_fu_705_p2);

assign add_ln85_fu_700_p2 = (dct_1_q1 + trunc_ln85_1_reg_919_pp0_iter3_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign dct12_i_0_address0 = zext_ln78_fu_464_p1;

assign dct12_i_1_address0 = zext_ln78_fu_464_p1;

assign dct12_i_2_address0 = zext_ln78_fu_464_p1;

assign dct12_i_3_address0 = zext_ln78_fu_464_p1;

assign dct12_i_4_address0 = zext_ln78_fu_464_p1;

assign dct12_i_5_address0 = zext_ln78_fu_464_p1;

assign dct12_i_6_address0 = zext_ln78_fu_464_p1;

assign dct12_i_7_address0 = zext_ln78_fu_464_p1;

assign dct_1_address0 = dct_1_addr_reg_954_pp0_iter4_reg;

assign dct_1_address1 = p_cast_fu_683_p1;

assign dct_1_d0 = (add_ln85_6_reg_975 + add_ln85_2_fu_714_p2);

assign dct_middle_2_address0 = tmp_107_cast_fu_459_p1;

assign dct_middle_2_address1 = tmp_106_cast_fu_448_p1;

assign dct_middle_2_address2 = tmp_105_cast_fu_437_p1;

assign dct_middle_2_address3 = tmp_104_cast_fu_426_p1;

assign dct_middle_2_address4 = tmp_103_cast_fu_415_p1;

assign dct_middle_2_address5 = tmp_102_cast_fu_404_p1;

assign dct_middle_2_address6 = tmp_101_cast_fu_393_p1;

assign dct_middle_2_address7 = tmp_100_cast1_fu_382_p1;

assign empty_211_fu_480_p2 = (tmp_100_cast_fu_374_p3 + select_ln77_4_cast_fu_476_p1);

assign empty_fu_370_p1 = select_ln77_1_fu_362_p3[2:0];

assign icmp_ln77_fu_324_p2 = ((ap_sig_allocacmp_indvar_flatten111_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_348_p2 = ((ap_sig_allocacmp_jj_load == 4'd8) ? 1'b1 : 1'b0);

assign mul_ln82_fu_534_p1 = mul_ln82_fu_534_p10;

assign mul_ln82_fu_534_p10 = dct12_i_0_load_reg_874;

assign p_cast_fu_683_p1 = empty_211_reg_789_pp0_iter2_reg;

assign select_ln77_1_fu_362_p3 = ((icmp_ln78_fu_348_p2[0:0] == 1'b1) ? add_ln77_1_fu_342_p2 : ap_sig_allocacmp_ii_load);

assign select_ln77_4_cast_fu_476_p1 = select_ln77_fu_354_p3;

assign select_ln77_fu_354_p3 = ((icmp_ln78_fu_348_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_jj_load);

assign tmp_100_cast1_fu_382_p1 = tmp_100_cast_fu_374_p3;

assign tmp_100_cast_fu_374_p3 = {{empty_fu_370_p1}, {3'd0}};

assign tmp_101_cast_fu_393_p1 = tmp_101_fu_387_p2;

assign tmp_101_fu_387_p2 = (tmp_100_cast_fu_374_p3 | 6'd1);

assign tmp_102_cast_fu_404_p1 = tmp_102_fu_398_p2;

assign tmp_102_fu_398_p2 = (tmp_100_cast_fu_374_p3 | 6'd2);

assign tmp_103_cast_fu_415_p1 = tmp_103_fu_409_p2;

assign tmp_103_fu_409_p2 = (tmp_100_cast_fu_374_p3 | 6'd3);

assign tmp_104_cast_fu_426_p1 = tmp_104_fu_420_p2;

assign tmp_104_fu_420_p2 = (tmp_100_cast_fu_374_p3 | 6'd4);

assign tmp_105_cast_fu_437_p1 = tmp_105_fu_431_p2;

assign tmp_105_fu_431_p2 = (tmp_100_cast_fu_374_p3 | 6'd5);

assign tmp_106_cast_fu_448_p1 = tmp_106_fu_442_p2;

assign tmp_106_fu_442_p2 = (tmp_100_cast_fu_374_p3 | 6'd6);

assign tmp_107_cast_fu_459_p1 = tmp_107_fu_453_p2;

assign tmp_107_fu_453_p2 = (tmp_100_cast_fu_374_p3 | 6'd7);

assign zext_ln78_fu_464_p1 = select_ln77_fu_354_p3;

endmodule //IMG2RLE_IMG2RLE_Pipeline_L1_L25
