// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module IMG2RLE_IMG2RLE_Pipeline_rle_rle64 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mem_B_AWVALID,
        m_axi_mem_B_AWREADY,
        m_axi_mem_B_AWADDR,
        m_axi_mem_B_AWID,
        m_axi_mem_B_AWLEN,
        m_axi_mem_B_AWSIZE,
        m_axi_mem_B_AWBURST,
        m_axi_mem_B_AWLOCK,
        m_axi_mem_B_AWCACHE,
        m_axi_mem_B_AWPROT,
        m_axi_mem_B_AWQOS,
        m_axi_mem_B_AWREGION,
        m_axi_mem_B_AWUSER,
        m_axi_mem_B_WVALID,
        m_axi_mem_B_WREADY,
        m_axi_mem_B_WDATA,
        m_axi_mem_B_WSTRB,
        m_axi_mem_B_WLAST,
        m_axi_mem_B_WID,
        m_axi_mem_B_WUSER,
        m_axi_mem_B_ARVALID,
        m_axi_mem_B_ARREADY,
        m_axi_mem_B_ARADDR,
        m_axi_mem_B_ARID,
        m_axi_mem_B_ARLEN,
        m_axi_mem_B_ARSIZE,
        m_axi_mem_B_ARBURST,
        m_axi_mem_B_ARLOCK,
        m_axi_mem_B_ARCACHE,
        m_axi_mem_B_ARPROT,
        m_axi_mem_B_ARQOS,
        m_axi_mem_B_ARREGION,
        m_axi_mem_B_ARUSER,
        m_axi_mem_B_RVALID,
        m_axi_mem_B_RREADY,
        m_axi_mem_B_RDATA,
        m_axi_mem_B_RLAST,
        m_axi_mem_B_RID,
        m_axi_mem_B_RFIFONUM,
        m_axi_mem_B_RUSER,
        m_axi_mem_B_RRESP,
        m_axi_mem_B_BVALID,
        m_axi_mem_B_BREADY,
        m_axi_mem_B_BRESP,
        m_axi_mem_B_BID,
        m_axi_mem_B_BUSER,
        nY_1,
        MatY_DRAM,
        zig_zag_address0,
        zig_zag_ce0,
        zig_zag_q0,
        zig_zag_address1,
        zig_zag_ce1,
        zig_zag_q1,
        zig_zag_1_address0,
        zig_zag_1_ce0,
        zig_zag_1_q0,
        zig_zag_1_address1,
        zig_zag_1_ce1,
        zig_zag_1_q1,
        zig_zag_2_address0,
        zig_zag_2_ce0,
        zig_zag_2_q0,
        zig_zag_2_address1,
        zig_zag_2_ce1,
        zig_zag_2_q1,
        zig_zag_3_address0,
        zig_zag_3_ce0,
        zig_zag_3_q0,
        zig_zag_3_address1,
        zig_zag_3_ce1,
        zig_zag_3_q1,
        zig_zag_4_address0,
        zig_zag_4_ce0,
        zig_zag_4_q0,
        zig_zag_4_address1,
        zig_zag_4_ce1,
        zig_zag_4_q1,
        zig_zag_5_address0,
        zig_zag_5_ce0,
        zig_zag_5_q0,
        zig_zag_5_address1,
        zig_zag_5_ce1,
        zig_zag_5_q1,
        zig_zag_6_address0,
        zig_zag_6_ce0,
        zig_zag_6_q0,
        zig_zag_6_address1,
        zig_zag_6_ce1,
        zig_zag_6_q1,
        zig_zag_7_address0,
        zig_zag_7_ce0,
        zig_zag_7_q0,
        zig_zag_7_address1,
        zig_zag_7_ce1,
        zig_zag_7_q1,
        zig_zag_8_address0,
        zig_zag_8_ce0,
        zig_zag_8_q0,
        zig_zag_8_address1,
        zig_zag_8_ce1,
        zig_zag_8_q1,
        zig_zag_9_address0,
        zig_zag_9_ce0,
        zig_zag_9_q0,
        zig_zag_9_address1,
        zig_zag_9_ce1,
        zig_zag_9_q1,
        zig_zag_10_address0,
        zig_zag_10_ce0,
        zig_zag_10_q0,
        zig_zag_10_address1,
        zig_zag_10_ce1,
        zig_zag_10_q1,
        zig_zag_11_address0,
        zig_zag_11_ce0,
        zig_zag_11_q0,
        zig_zag_11_address1,
        zig_zag_11_ce1,
        zig_zag_11_q1,
        zig_zag_12_address0,
        zig_zag_12_ce0,
        zig_zag_12_q0,
        zig_zag_12_address1,
        zig_zag_12_ce1,
        zig_zag_12_q1,
        zig_zag_13_address0,
        zig_zag_13_ce0,
        zig_zag_13_q0,
        zig_zag_13_address1,
        zig_zag_13_ce1,
        zig_zag_13_q1,
        zig_zag_14_address0,
        zig_zag_14_ce0,
        zig_zag_14_q0,
        zig_zag_14_address1,
        zig_zag_14_ce1,
        zig_zag_14_q1,
        zig_zag_15_address0,
        zig_zag_15_ce0,
        zig_zag_15_q0,
        zig_zag_15_address1,
        zig_zag_15_ce1,
        zig_zag_15_q1,
        zig_zag_16_address0,
        zig_zag_16_ce0,
        zig_zag_16_q0,
        zig_zag_16_address1,
        zig_zag_16_ce1,
        zig_zag_16_q1,
        zig_zag_17_address0,
        zig_zag_17_ce0,
        zig_zag_17_q0,
        zig_zag_17_address1,
        zig_zag_17_ce1,
        zig_zag_17_q1,
        zig_zag_18_address0,
        zig_zag_18_ce0,
        zig_zag_18_q0,
        zig_zag_18_address1,
        zig_zag_18_ce1,
        zig_zag_18_q1,
        zig_zag_19_address0,
        zig_zag_19_ce0,
        zig_zag_19_q0,
        zig_zag_19_address1,
        zig_zag_19_ce1,
        zig_zag_19_q1,
        zig_zag_20_address0,
        zig_zag_20_ce0,
        zig_zag_20_q0,
        zig_zag_20_address1,
        zig_zag_20_ce1,
        zig_zag_20_q1,
        zig_zag_21_address0,
        zig_zag_21_ce0,
        zig_zag_21_q0,
        zig_zag_21_address1,
        zig_zag_21_ce1,
        zig_zag_21_q1,
        zig_zag_22_address0,
        zig_zag_22_ce0,
        zig_zag_22_q0,
        zig_zag_22_address1,
        zig_zag_22_ce1,
        zig_zag_22_q1,
        zig_zag_23_address0,
        zig_zag_23_ce0,
        zig_zag_23_q0,
        zig_zag_23_address1,
        zig_zag_23_ce1,
        zig_zag_23_q1,
        zig_zag_24_address0,
        zig_zag_24_ce0,
        zig_zag_24_q0,
        zig_zag_24_address1,
        zig_zag_24_ce1,
        zig_zag_24_q1,
        zig_zag_25_address0,
        zig_zag_25_ce0,
        zig_zag_25_q0,
        zig_zag_25_address1,
        zig_zag_25_ce1,
        zig_zag_25_q1,
        zig_zag_26_address0,
        zig_zag_26_ce0,
        zig_zag_26_q0,
        zig_zag_26_address1,
        zig_zag_26_ce1,
        zig_zag_26_q1,
        zig_zag_27_address0,
        zig_zag_27_ce0,
        zig_zag_27_q0,
        zig_zag_27_address1,
        zig_zag_27_ce1,
        zig_zag_27_q1,
        zig_zag_28_address0,
        zig_zag_28_ce0,
        zig_zag_28_q0,
        zig_zag_28_address1,
        zig_zag_28_ce1,
        zig_zag_28_q1,
        zig_zag_29_address0,
        zig_zag_29_ce0,
        zig_zag_29_q0,
        zig_zag_29_address1,
        zig_zag_29_ce1,
        zig_zag_29_q1,
        zig_zag_30_address0,
        zig_zag_30_ce0,
        zig_zag_30_q0,
        zig_zag_30_address1,
        zig_zag_30_ce1,
        zig_zag_30_q1,
        zig_zag_31_address0,
        zig_zag_31_ce0,
        zig_zag_31_q0,
        zig_zag_31_address1,
        zig_zag_31_ce1,
        zig_zag_31_q1,
        nY_2_out,
        nY_2_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mem_B_AWVALID;
input   m_axi_mem_B_AWREADY;
output  [63:0] m_axi_mem_B_AWADDR;
output  [0:0] m_axi_mem_B_AWID;
output  [31:0] m_axi_mem_B_AWLEN;
output  [2:0] m_axi_mem_B_AWSIZE;
output  [1:0] m_axi_mem_B_AWBURST;
output  [1:0] m_axi_mem_B_AWLOCK;
output  [3:0] m_axi_mem_B_AWCACHE;
output  [2:0] m_axi_mem_B_AWPROT;
output  [3:0] m_axi_mem_B_AWQOS;
output  [3:0] m_axi_mem_B_AWREGION;
output  [0:0] m_axi_mem_B_AWUSER;
output   m_axi_mem_B_WVALID;
input   m_axi_mem_B_WREADY;
output  [7:0] m_axi_mem_B_WDATA;
output  [0:0] m_axi_mem_B_WSTRB;
output   m_axi_mem_B_WLAST;
output  [0:0] m_axi_mem_B_WID;
output  [0:0] m_axi_mem_B_WUSER;
output   m_axi_mem_B_ARVALID;
input   m_axi_mem_B_ARREADY;
output  [63:0] m_axi_mem_B_ARADDR;
output  [0:0] m_axi_mem_B_ARID;
output  [31:0] m_axi_mem_B_ARLEN;
output  [2:0] m_axi_mem_B_ARSIZE;
output  [1:0] m_axi_mem_B_ARBURST;
output  [1:0] m_axi_mem_B_ARLOCK;
output  [3:0] m_axi_mem_B_ARCACHE;
output  [2:0] m_axi_mem_B_ARPROT;
output  [3:0] m_axi_mem_B_ARQOS;
output  [3:0] m_axi_mem_B_ARREGION;
output  [0:0] m_axi_mem_B_ARUSER;
input   m_axi_mem_B_RVALID;
output   m_axi_mem_B_RREADY;
input  [7:0] m_axi_mem_B_RDATA;
input   m_axi_mem_B_RLAST;
input  [0:0] m_axi_mem_B_RID;
input  [10:0] m_axi_mem_B_RFIFONUM;
input  [0:0] m_axi_mem_B_RUSER;
input  [1:0] m_axi_mem_B_RRESP;
input   m_axi_mem_B_BVALID;
output   m_axi_mem_B_BREADY;
input  [1:0] m_axi_mem_B_BRESP;
input  [0:0] m_axi_mem_B_BID;
input  [0:0] m_axi_mem_B_BUSER;
input  [31:0] nY_1;
input  [63:0] MatY_DRAM;
output  [2:0] zig_zag_address0;
output   zig_zag_ce0;
input  [15:0] zig_zag_q0;
output  [2:0] zig_zag_address1;
output   zig_zag_ce1;
input  [15:0] zig_zag_q1;
output  [2:0] zig_zag_1_address0;
output   zig_zag_1_ce0;
input  [15:0] zig_zag_1_q0;
output  [2:0] zig_zag_1_address1;
output   zig_zag_1_ce1;
input  [15:0] zig_zag_1_q1;
output  [2:0] zig_zag_2_address0;
output   zig_zag_2_ce0;
input  [15:0] zig_zag_2_q0;
output  [2:0] zig_zag_2_address1;
output   zig_zag_2_ce1;
input  [15:0] zig_zag_2_q1;
output  [2:0] zig_zag_3_address0;
output   zig_zag_3_ce0;
input  [15:0] zig_zag_3_q0;
output  [2:0] zig_zag_3_address1;
output   zig_zag_3_ce1;
input  [15:0] zig_zag_3_q1;
output  [2:0] zig_zag_4_address0;
output   zig_zag_4_ce0;
input  [15:0] zig_zag_4_q0;
output  [2:0] zig_zag_4_address1;
output   zig_zag_4_ce1;
input  [15:0] zig_zag_4_q1;
output  [2:0] zig_zag_5_address0;
output   zig_zag_5_ce0;
input  [15:0] zig_zag_5_q0;
output  [2:0] zig_zag_5_address1;
output   zig_zag_5_ce1;
input  [15:0] zig_zag_5_q1;
output  [2:0] zig_zag_6_address0;
output   zig_zag_6_ce0;
input  [15:0] zig_zag_6_q0;
output  [2:0] zig_zag_6_address1;
output   zig_zag_6_ce1;
input  [15:0] zig_zag_6_q1;
output  [2:0] zig_zag_7_address0;
output   zig_zag_7_ce0;
input  [15:0] zig_zag_7_q0;
output  [2:0] zig_zag_7_address1;
output   zig_zag_7_ce1;
input  [15:0] zig_zag_7_q1;
output  [2:0] zig_zag_8_address0;
output   zig_zag_8_ce0;
input  [15:0] zig_zag_8_q0;
output  [2:0] zig_zag_8_address1;
output   zig_zag_8_ce1;
input  [15:0] zig_zag_8_q1;
output  [2:0] zig_zag_9_address0;
output   zig_zag_9_ce0;
input  [15:0] zig_zag_9_q0;
output  [2:0] zig_zag_9_address1;
output   zig_zag_9_ce1;
input  [15:0] zig_zag_9_q1;
output  [2:0] zig_zag_10_address0;
output   zig_zag_10_ce0;
input  [15:0] zig_zag_10_q0;
output  [2:0] zig_zag_10_address1;
output   zig_zag_10_ce1;
input  [15:0] zig_zag_10_q1;
output  [2:0] zig_zag_11_address0;
output   zig_zag_11_ce0;
input  [15:0] zig_zag_11_q0;
output  [2:0] zig_zag_11_address1;
output   zig_zag_11_ce1;
input  [15:0] zig_zag_11_q1;
output  [2:0] zig_zag_12_address0;
output   zig_zag_12_ce0;
input  [15:0] zig_zag_12_q0;
output  [2:0] zig_zag_12_address1;
output   zig_zag_12_ce1;
input  [15:0] zig_zag_12_q1;
output  [2:0] zig_zag_13_address0;
output   zig_zag_13_ce0;
input  [15:0] zig_zag_13_q0;
output  [2:0] zig_zag_13_address1;
output   zig_zag_13_ce1;
input  [15:0] zig_zag_13_q1;
output  [2:0] zig_zag_14_address0;
output   zig_zag_14_ce0;
input  [15:0] zig_zag_14_q0;
output  [2:0] zig_zag_14_address1;
output   zig_zag_14_ce1;
input  [15:0] zig_zag_14_q1;
output  [2:0] zig_zag_15_address0;
output   zig_zag_15_ce0;
input  [15:0] zig_zag_15_q0;
output  [2:0] zig_zag_15_address1;
output   zig_zag_15_ce1;
input  [15:0] zig_zag_15_q1;
output  [2:0] zig_zag_16_address0;
output   zig_zag_16_ce0;
input  [15:0] zig_zag_16_q0;
output  [2:0] zig_zag_16_address1;
output   zig_zag_16_ce1;
input  [15:0] zig_zag_16_q1;
output  [2:0] zig_zag_17_address0;
output   zig_zag_17_ce0;
input  [15:0] zig_zag_17_q0;
output  [2:0] zig_zag_17_address1;
output   zig_zag_17_ce1;
input  [15:0] zig_zag_17_q1;
output  [2:0] zig_zag_18_address0;
output   zig_zag_18_ce0;
input  [15:0] zig_zag_18_q0;
output  [2:0] zig_zag_18_address1;
output   zig_zag_18_ce1;
input  [15:0] zig_zag_18_q1;
output  [2:0] zig_zag_19_address0;
output   zig_zag_19_ce0;
input  [15:0] zig_zag_19_q0;
output  [2:0] zig_zag_19_address1;
output   zig_zag_19_ce1;
input  [15:0] zig_zag_19_q1;
output  [2:0] zig_zag_20_address0;
output   zig_zag_20_ce0;
input  [15:0] zig_zag_20_q0;
output  [2:0] zig_zag_20_address1;
output   zig_zag_20_ce1;
input  [15:0] zig_zag_20_q1;
output  [2:0] zig_zag_21_address0;
output   zig_zag_21_ce0;
input  [15:0] zig_zag_21_q0;
output  [2:0] zig_zag_21_address1;
output   zig_zag_21_ce1;
input  [15:0] zig_zag_21_q1;
output  [2:0] zig_zag_22_address0;
output   zig_zag_22_ce0;
input  [15:0] zig_zag_22_q0;
output  [2:0] zig_zag_22_address1;
output   zig_zag_22_ce1;
input  [15:0] zig_zag_22_q1;
output  [2:0] zig_zag_23_address0;
output   zig_zag_23_ce0;
input  [15:0] zig_zag_23_q0;
output  [2:0] zig_zag_23_address1;
output   zig_zag_23_ce1;
input  [15:0] zig_zag_23_q1;
output  [2:0] zig_zag_24_address0;
output   zig_zag_24_ce0;
input  [15:0] zig_zag_24_q0;
output  [2:0] zig_zag_24_address1;
output   zig_zag_24_ce1;
input  [15:0] zig_zag_24_q1;
output  [2:0] zig_zag_25_address0;
output   zig_zag_25_ce0;
input  [15:0] zig_zag_25_q0;
output  [2:0] zig_zag_25_address1;
output   zig_zag_25_ce1;
input  [15:0] zig_zag_25_q1;
output  [2:0] zig_zag_26_address0;
output   zig_zag_26_ce0;
input  [15:0] zig_zag_26_q0;
output  [2:0] zig_zag_26_address1;
output   zig_zag_26_ce1;
input  [15:0] zig_zag_26_q1;
output  [2:0] zig_zag_27_address0;
output   zig_zag_27_ce0;
input  [15:0] zig_zag_27_q0;
output  [2:0] zig_zag_27_address1;
output   zig_zag_27_ce1;
input  [15:0] zig_zag_27_q1;
output  [2:0] zig_zag_28_address0;
output   zig_zag_28_ce0;
input  [15:0] zig_zag_28_q0;
output  [2:0] zig_zag_28_address1;
output   zig_zag_28_ce1;
input  [15:0] zig_zag_28_q1;
output  [2:0] zig_zag_29_address0;
output   zig_zag_29_ce0;
input  [15:0] zig_zag_29_q0;
output  [2:0] zig_zag_29_address1;
output   zig_zag_29_ce1;
input  [15:0] zig_zag_29_q1;
output  [2:0] zig_zag_30_address0;
output   zig_zag_30_ce0;
input  [15:0] zig_zag_30_q0;
output  [2:0] zig_zag_30_address1;
output   zig_zag_30_ce1;
input  [15:0] zig_zag_30_q1;
output  [2:0] zig_zag_31_address0;
output   zig_zag_31_ce0;
input  [15:0] zig_zag_31_q0;
output  [2:0] zig_zag_31_address1;
output   zig_zag_31_ce1;
input  [15:0] zig_zag_31_q1;
output  [31:0] nY_2_out;
output   nY_2_out_ap_vld;

reg ap_idle;
reg m_axi_mem_B_AWVALID;
reg[63:0] m_axi_mem_B_AWADDR;
reg[31:0] m_axi_mem_B_AWLEN;
reg m_axi_mem_B_WVALID;
reg[7:0] m_axi_mem_B_WDATA;
reg m_axi_mem_B_BREADY;
reg zig_zag_ce0;
reg zig_zag_ce1;
reg zig_zag_1_ce0;
reg zig_zag_1_ce1;
reg zig_zag_2_ce0;
reg zig_zag_2_ce1;
reg zig_zag_3_ce0;
reg zig_zag_3_ce1;
reg zig_zag_4_ce0;
reg zig_zag_4_ce1;
reg zig_zag_5_ce0;
reg zig_zag_5_ce1;
reg zig_zag_6_ce0;
reg zig_zag_6_ce1;
reg zig_zag_7_ce0;
reg zig_zag_7_ce1;
reg zig_zag_8_ce0;
reg zig_zag_8_ce1;
reg zig_zag_9_ce0;
reg zig_zag_9_ce1;
reg zig_zag_10_ce0;
reg zig_zag_10_ce1;
reg zig_zag_11_ce0;
reg zig_zag_11_ce1;
reg zig_zag_12_ce0;
reg zig_zag_12_ce1;
reg zig_zag_13_ce0;
reg zig_zag_13_ce1;
reg zig_zag_14_ce0;
reg zig_zag_14_ce1;
reg zig_zag_15_ce0;
reg zig_zag_15_ce1;
reg zig_zag_16_ce0;
reg zig_zag_16_ce1;
reg zig_zag_17_ce0;
reg zig_zag_17_ce1;
reg zig_zag_18_ce0;
reg zig_zag_18_ce1;
reg zig_zag_19_ce0;
reg zig_zag_19_ce1;
reg zig_zag_20_ce0;
reg zig_zag_20_ce1;
reg zig_zag_21_ce0;
reg zig_zag_21_ce1;
reg zig_zag_22_ce0;
reg zig_zag_22_ce1;
reg zig_zag_23_ce0;
reg zig_zag_23_ce1;
reg zig_zag_24_ce0;
reg zig_zag_24_ce1;
reg zig_zag_25_ce0;
reg zig_zag_25_ce1;
reg zig_zag_26_ce0;
reg zig_zag_26_ce1;
reg zig_zag_27_ce0;
reg zig_zag_27_ce1;
reg zig_zag_28_ce0;
reg zig_zag_28_ce1;
reg zig_zag_29_ce0;
reg zig_zag_29_ce1;
reg zig_zag_30_ce0;
reg zig_zag_30_ce1;
reg zig_zag_31_ce0;
reg zig_zag_31_ce1;
reg nY_2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln10_reg_1947;
reg   [0:0] icmp_ln10_reg_1947_pp0_iter2_reg;
reg   [0:0] or_ln13_reg_2127;
reg    ap_predicate_op270_writereq_state6;
reg    ap_block_state6_io;
reg   [0:0] icmp_ln10_reg_1947_pp0_iter3_reg;
reg   [0:0] or_ln13_reg_2127_pp0_iter3_reg;
reg    ap_predicate_op285_write_state8;
reg    ap_block_state8_io;
reg   [0:0] icmp_ln10_reg_1947_pp0_iter5_reg;
reg    ap_block_state12_pp0_stage1_iter5;
reg    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln7_reg_1759;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    mem_B_blk_n_AW;
wire    ap_block_pp0_stage1;
reg    mem_B_blk_n_W;
wire    ap_block_pp0_stage0;
reg    mem_B_blk_n_B;
reg   [0:0] or_ln13_reg_2127_pp0_iter5_reg;
reg    ap_predicate_op281_write_state7;
reg    ap_block_state7_io;
reg    ap_predicate_op295_writeresp_state13;
reg    ap_block_state13_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln7_fu_1143_p2;
reg   [0:0] icmp_ln7_reg_1759_pp0_iter1_reg;
reg   [0:0] icmp_ln7_reg_1759_pp0_iter2_reg;
reg   [0:0] icmp_ln7_reg_1759_pp0_iter3_reg;
reg   [0:0] icmp_ln7_reg_1759_pp0_iter4_reg;
wire   [6:0] select_ln6_fu_1173_p3;
reg   [6:0] select_ln6_reg_1763;
reg   [6:0] select_ln6_reg_1763_pp0_iter1_reg;
wire   [1:0] empty_fu_1189_p1;
reg   [1:0] empty_reg_1770;
wire   [4:0] trunc_ln8_fu_1193_p1;
reg   [4:0] trunc_ln8_reg_1775;
reg   [4:0] trunc_ln8_reg_1775_pp0_iter1_reg;
wire   [15:0] tmp_s_fu_1259_p67;
reg   [15:0] tmp_s_reg_1941;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln10_fu_1426_p2;
reg   [0:0] icmp_ln10_reg_1947_pp0_iter4_reg;
wire   [7:0] trunc_ln11_fu_1431_p1;
reg   [7:0] trunc_ln11_reg_1951;
reg   [7:0] trunc_ln11_reg_1951_pp0_iter2_reg;
wire   [15:0] tmp_1_fu_1480_p67;
reg   [15:0] tmp_1_reg_2116;
reg   [63:0] mem_B_addr_reg_2121;
wire   [0:0] or_ln13_fu_1651_p2;
reg   [0:0] or_ln13_reg_2127_pp0_iter4_reg;
reg  signed [31:0] nY_load_2_reg_2131;
reg   [63:0] mem_B_addr_1_reg_2136;
wire   [31:0] count_1_fu_1685_p2;
reg   [31:0] count_1_reg_2143;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln10_fu_1213_p1;
wire   [63:0] zext_ln13_fu_1444_p1;
wire   [63:0] add_ln11_fu_1625_p2;
wire   [63:0] add_ln14_fu_1661_p2;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] trunc_ln15_fu_1706_p1;
reg    ap_block_pp0_stage1_01001;
reg   [31:0] count_fu_232;
wire    ap_loop_init;
reg   [6:0] i_fu_236;
wire   [6:0] add_ln8_fu_1394_p2;
reg   [6:0] ap_sig_allocacmp_i_load;
reg   [2:0] j_fu_240;
wire   [2:0] select_ln7_fu_1181_p3;
reg   [2:0] ap_sig_allocacmp_j_load;
reg   [8:0] indvar_flatten76_fu_244;
wire   [8:0] add_ln7_1_fu_1149_p2;
reg   [8:0] ap_sig_allocacmp_indvar_flatten76_load;
reg   [31:0] nY_fu_248;
wire   [31:0] nY_3_fu_1672_p2;
wire   [31:0] nY_2_fu_1615_p2;
wire   [0:0] icmp_ln8_fu_1167_p2;
wire   [2:0] add_ln7_fu_1161_p2;
wire   [0:0] tmp_fu_1197_p3;
wire   [2:0] or_ln10_1_fu_1205_p3;
wire   [15:0] tmp_s_fu_1259_p65;
wire   [7:0] tmp_2_fu_1404_p3;
wire   [7:0] zext_ln8_fu_1411_p1;
wire   [7:0] or_ln10_fu_1414_p2;
wire   [7:0] add_ln10_fu_1420_p2;
wire   [2:0] lshr_ln2_fu_1434_p4;
wire   [15:0] tmp_1_fu_1480_p65;
wire  signed [31:0] nY_2_fu_1615_p0;
wire  signed [31:0] sext_ln11_fu_1621_p0;
wire  signed [63:0] sext_ln11_fu_1621_p1;
wire   [0:0] icmp_ln13_1_fu_1646_p2;
wire   [0:0] icmp_ln13_fu_1641_p2;
wire  signed [31:0] sext_ln14_fu_1657_p0;
wire  signed [63:0] sext_ln14_fu_1657_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter5_stage0;
reg    ap_idle_pp0_0to4;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to6;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_857;
reg    ap_condition_1251;
reg    ap_condition_1255;
reg    ap_condition_1259;
wire   [4:0] tmp_s_fu_1259_p1;
wire   [4:0] tmp_s_fu_1259_p3;
wire   [4:0] tmp_s_fu_1259_p5;
wire   [4:0] tmp_s_fu_1259_p7;
wire   [4:0] tmp_s_fu_1259_p9;
wire   [4:0] tmp_s_fu_1259_p11;
wire   [4:0] tmp_s_fu_1259_p13;
wire   [4:0] tmp_s_fu_1259_p15;
wire   [4:0] tmp_s_fu_1259_p17;
wire   [4:0] tmp_s_fu_1259_p19;
wire   [4:0] tmp_s_fu_1259_p21;
wire   [4:0] tmp_s_fu_1259_p23;
wire   [4:0] tmp_s_fu_1259_p25;
wire   [4:0] tmp_s_fu_1259_p27;
wire   [4:0] tmp_s_fu_1259_p29;
wire   [4:0] tmp_s_fu_1259_p31;
wire  signed [4:0] tmp_s_fu_1259_p33;
wire  signed [4:0] tmp_s_fu_1259_p35;
wire  signed [4:0] tmp_s_fu_1259_p37;
wire  signed [4:0] tmp_s_fu_1259_p39;
wire  signed [4:0] tmp_s_fu_1259_p41;
wire  signed [4:0] tmp_s_fu_1259_p43;
wire  signed [4:0] tmp_s_fu_1259_p45;
wire  signed [4:0] tmp_s_fu_1259_p47;
wire  signed [4:0] tmp_s_fu_1259_p49;
wire  signed [4:0] tmp_s_fu_1259_p51;
wire  signed [4:0] tmp_s_fu_1259_p53;
wire  signed [4:0] tmp_s_fu_1259_p55;
wire  signed [4:0] tmp_s_fu_1259_p57;
wire  signed [4:0] tmp_s_fu_1259_p59;
wire  signed [4:0] tmp_s_fu_1259_p61;
wire  signed [4:0] tmp_s_fu_1259_p63;
wire  signed [4:0] tmp_1_fu_1480_p1;
wire   [4:0] tmp_1_fu_1480_p3;
wire   [4:0] tmp_1_fu_1480_p5;
wire   [4:0] tmp_1_fu_1480_p7;
wire   [4:0] tmp_1_fu_1480_p9;
wire   [4:0] tmp_1_fu_1480_p11;
wire   [4:0] tmp_1_fu_1480_p13;
wire   [4:0] tmp_1_fu_1480_p15;
wire   [4:0] tmp_1_fu_1480_p17;
wire   [4:0] tmp_1_fu_1480_p19;
wire   [4:0] tmp_1_fu_1480_p21;
wire   [4:0] tmp_1_fu_1480_p23;
wire   [4:0] tmp_1_fu_1480_p25;
wire   [4:0] tmp_1_fu_1480_p27;
wire   [4:0] tmp_1_fu_1480_p29;
wire   [4:0] tmp_1_fu_1480_p31;
wire   [4:0] tmp_1_fu_1480_p33;
wire  signed [4:0] tmp_1_fu_1480_p35;
wire  signed [4:0] tmp_1_fu_1480_p37;
wire  signed [4:0] tmp_1_fu_1480_p39;
wire  signed [4:0] tmp_1_fu_1480_p41;
wire  signed [4:0] tmp_1_fu_1480_p43;
wire  signed [4:0] tmp_1_fu_1480_p45;
wire  signed [4:0] tmp_1_fu_1480_p47;
wire  signed [4:0] tmp_1_fu_1480_p49;
wire  signed [4:0] tmp_1_fu_1480_p51;
wire  signed [4:0] tmp_1_fu_1480_p53;
wire  signed [4:0] tmp_1_fu_1480_p55;
wire  signed [4:0] tmp_1_fu_1480_p57;
wire  signed [4:0] tmp_1_fu_1480_p59;
wire  signed [4:0] tmp_1_fu_1480_p61;
wire  signed [4:0] tmp_1_fu_1480_p63;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 count_fu_232 = 32'd0;
#0 i_fu_236 = 7'd0;
#0 j_fu_240 = 3'd0;
#0 indvar_flatten76_fu_244 = 9'd0;
#0 nY_fu_248 = 32'd0;
#0 ap_done_reg = 1'b0;
end

IMG2RLE_sparsemux_65_5_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h0 ),
    .din0_WIDTH( 16 ),
    .CASE1( 5'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 5'h2 ),
    .din2_WIDTH( 16 ),
    .CASE3( 5'h3 ),
    .din3_WIDTH( 16 ),
    .CASE4( 5'h4 ),
    .din4_WIDTH( 16 ),
    .CASE5( 5'h5 ),
    .din5_WIDTH( 16 ),
    .CASE6( 5'h6 ),
    .din6_WIDTH( 16 ),
    .CASE7( 5'h7 ),
    .din7_WIDTH( 16 ),
    .CASE8( 5'h8 ),
    .din8_WIDTH( 16 ),
    .CASE9( 5'h9 ),
    .din9_WIDTH( 16 ),
    .CASE10( 5'hA ),
    .din10_WIDTH( 16 ),
    .CASE11( 5'hB ),
    .din11_WIDTH( 16 ),
    .CASE12( 5'hC ),
    .din12_WIDTH( 16 ),
    .CASE13( 5'hD ),
    .din13_WIDTH( 16 ),
    .CASE14( 5'hE ),
    .din14_WIDTH( 16 ),
    .CASE15( 5'hF ),
    .din15_WIDTH( 16 ),
    .CASE16( 5'h10 ),
    .din16_WIDTH( 16 ),
    .CASE17( 5'h11 ),
    .din17_WIDTH( 16 ),
    .CASE18( 5'h12 ),
    .din18_WIDTH( 16 ),
    .CASE19( 5'h13 ),
    .din19_WIDTH( 16 ),
    .CASE20( 5'h14 ),
    .din20_WIDTH( 16 ),
    .CASE21( 5'h15 ),
    .din21_WIDTH( 16 ),
    .CASE22( 5'h16 ),
    .din22_WIDTH( 16 ),
    .CASE23( 5'h17 ),
    .din23_WIDTH( 16 ),
    .CASE24( 5'h18 ),
    .din24_WIDTH( 16 ),
    .CASE25( 5'h19 ),
    .din25_WIDTH( 16 ),
    .CASE26( 5'h1A ),
    .din26_WIDTH( 16 ),
    .CASE27( 5'h1B ),
    .din27_WIDTH( 16 ),
    .CASE28( 5'h1C ),
    .din28_WIDTH( 16 ),
    .CASE29( 5'h1D ),
    .din29_WIDTH( 16 ),
    .CASE30( 5'h1E ),
    .din30_WIDTH( 16 ),
    .CASE31( 5'h1F ),
    .din31_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 16 ))
sparsemux_65_5_16_1_1_U2051(
    .din0(zig_zag_q1),
    .din1(zig_zag_1_q1),
    .din2(zig_zag_2_q1),
    .din3(zig_zag_3_q1),
    .din4(zig_zag_4_q1),
    .din5(zig_zag_5_q1),
    .din6(zig_zag_6_q1),
    .din7(zig_zag_7_q1),
    .din8(zig_zag_8_q1),
    .din9(zig_zag_9_q1),
    .din10(zig_zag_10_q1),
    .din11(zig_zag_11_q1),
    .din12(zig_zag_12_q1),
    .din13(zig_zag_13_q1),
    .din14(zig_zag_14_q1),
    .din15(zig_zag_15_q1),
    .din16(zig_zag_16_q1),
    .din17(zig_zag_17_q1),
    .din18(zig_zag_18_q1),
    .din19(zig_zag_19_q1),
    .din20(zig_zag_20_q1),
    .din21(zig_zag_21_q1),
    .din22(zig_zag_22_q1),
    .din23(zig_zag_23_q1),
    .din24(zig_zag_24_q1),
    .din25(zig_zag_25_q1),
    .din26(zig_zag_26_q1),
    .din27(zig_zag_27_q1),
    .din28(zig_zag_28_q1),
    .din29(zig_zag_29_q1),
    .din30(zig_zag_30_q1),
    .din31(zig_zag_31_q1),
    .def(tmp_s_fu_1259_p65),
    .sel(trunc_ln8_reg_1775),
    .dout(tmp_s_fu_1259_p67)
);

IMG2RLE_sparsemux_65_5_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h1F ),
    .din0_WIDTH( 16 ),
    .CASE1( 5'h0 ),
    .din1_WIDTH( 16 ),
    .CASE2( 5'h1 ),
    .din2_WIDTH( 16 ),
    .CASE3( 5'h2 ),
    .din3_WIDTH( 16 ),
    .CASE4( 5'h3 ),
    .din4_WIDTH( 16 ),
    .CASE5( 5'h4 ),
    .din5_WIDTH( 16 ),
    .CASE6( 5'h5 ),
    .din6_WIDTH( 16 ),
    .CASE7( 5'h6 ),
    .din7_WIDTH( 16 ),
    .CASE8( 5'h7 ),
    .din8_WIDTH( 16 ),
    .CASE9( 5'h8 ),
    .din9_WIDTH( 16 ),
    .CASE10( 5'h9 ),
    .din10_WIDTH( 16 ),
    .CASE11( 5'hA ),
    .din11_WIDTH( 16 ),
    .CASE12( 5'hB ),
    .din12_WIDTH( 16 ),
    .CASE13( 5'hC ),
    .din13_WIDTH( 16 ),
    .CASE14( 5'hD ),
    .din14_WIDTH( 16 ),
    .CASE15( 5'hE ),
    .din15_WIDTH( 16 ),
    .CASE16( 5'hF ),
    .din16_WIDTH( 16 ),
    .CASE17( 5'h10 ),
    .din17_WIDTH( 16 ),
    .CASE18( 5'h11 ),
    .din18_WIDTH( 16 ),
    .CASE19( 5'h12 ),
    .din19_WIDTH( 16 ),
    .CASE20( 5'h13 ),
    .din20_WIDTH( 16 ),
    .CASE21( 5'h14 ),
    .din21_WIDTH( 16 ),
    .CASE22( 5'h15 ),
    .din22_WIDTH( 16 ),
    .CASE23( 5'h16 ),
    .din23_WIDTH( 16 ),
    .CASE24( 5'h17 ),
    .din24_WIDTH( 16 ),
    .CASE25( 5'h18 ),
    .din25_WIDTH( 16 ),
    .CASE26( 5'h19 ),
    .din26_WIDTH( 16 ),
    .CASE27( 5'h1A ),
    .din27_WIDTH( 16 ),
    .CASE28( 5'h1B ),
    .din28_WIDTH( 16 ),
    .CASE29( 5'h1C ),
    .din29_WIDTH( 16 ),
    .CASE30( 5'h1D ),
    .din30_WIDTH( 16 ),
    .CASE31( 5'h1E ),
    .din31_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 16 ))
sparsemux_65_5_16_1_1_U2052(
    .din0(zig_zag_q0),
    .din1(zig_zag_1_q0),
    .din2(zig_zag_2_q0),
    .din3(zig_zag_3_q0),
    .din4(zig_zag_4_q0),
    .din5(zig_zag_5_q0),
    .din6(zig_zag_6_q0),
    .din7(zig_zag_7_q0),
    .din8(zig_zag_8_q0),
    .din9(zig_zag_9_q0),
    .din10(zig_zag_10_q0),
    .din11(zig_zag_11_q0),
    .din12(zig_zag_12_q0),
    .din13(zig_zag_13_q0),
    .din14(zig_zag_14_q0),
    .din15(zig_zag_15_q0),
    .din16(zig_zag_16_q0),
    .din17(zig_zag_17_q0),
    .din18(zig_zag_18_q0),
    .din19(zig_zag_19_q0),
    .din20(zig_zag_20_q0),
    .din21(zig_zag_21_q0),
    .din22(zig_zag_22_q0),
    .din23(zig_zag_23_q0),
    .din24(zig_zag_24_q0),
    .din25(zig_zag_25_q0),
    .din26(zig_zag_26_q0),
    .din27(zig_zag_27_q0),
    .din28(zig_zag_28_q0),
    .din29(zig_zag_29_q0),
    .din30(zig_zag_30_q0),
    .din31(zig_zag_31_q0),
    .def(tmp_1_fu_1480_p65),
    .sel(trunc_ln8_reg_1775_pp0_iter1_reg),
    .dout(tmp_1_fu_1480_p67)
);

IMG2RLE_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (or_ln13_reg_2127 == 1'd0) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd1))) begin
        count_fu_232 <= count_1_fu_1685_p2;
    end else if ((((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (or_ln13_reg_2127 == 1'd1) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd0)))) begin
        count_fu_232 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_236 <= 7'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln7_reg_1759 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        i_fu_236 <= add_ln8_fu_1394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln7_fu_1143_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten76_fu_244 <= add_ln7_1_fu_1149_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten76_fu_244 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln7_fu_1143_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_240 <= select_ln7_fu_1181_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_240 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nY_fu_248 <= nY_1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1947 == 1'd0))) begin
        nY_fu_248 <= nY_2_fu_1615_p2;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (or_ln13_reg_2127 == 1'd1) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd1))) begin
        nY_fu_248 <= nY_3_fu_1672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        count_1_reg_2143 <= count_1_fu_1685_p2;
        empty_reg_1770 <= empty_fu_1189_p1;
        icmp_ln10_reg_1947 <= icmp_ln10_fu_1426_p2;
        icmp_ln10_reg_1947_pp0_iter2_reg <= icmp_ln10_reg_1947;
        icmp_ln10_reg_1947_pp0_iter3_reg <= icmp_ln10_reg_1947_pp0_iter2_reg;
        icmp_ln10_reg_1947_pp0_iter4_reg <= icmp_ln10_reg_1947_pp0_iter3_reg;
        icmp_ln10_reg_1947_pp0_iter5_reg <= icmp_ln10_reg_1947_pp0_iter4_reg;
        icmp_ln7_reg_1759 <= icmp_ln7_fu_1143_p2;
        icmp_ln7_reg_1759_pp0_iter1_reg <= icmp_ln7_reg_1759;
        icmp_ln7_reg_1759_pp0_iter2_reg <= icmp_ln7_reg_1759_pp0_iter1_reg;
        icmp_ln7_reg_1759_pp0_iter3_reg <= icmp_ln7_reg_1759_pp0_iter2_reg;
        icmp_ln7_reg_1759_pp0_iter4_reg <= icmp_ln7_reg_1759_pp0_iter3_reg;
        mem_B_addr_1_reg_2136 <= add_ln14_fu_1661_p2;
        mem_B_addr_reg_2121 <= add_ln11_fu_1625_p2;
        or_ln13_reg_2127 <= or_ln13_fu_1651_p2;
        or_ln13_reg_2127_pp0_iter3_reg <= or_ln13_reg_2127;
        or_ln13_reg_2127_pp0_iter4_reg <= or_ln13_reg_2127_pp0_iter3_reg;
        or_ln13_reg_2127_pp0_iter5_reg <= or_ln13_reg_2127_pp0_iter4_reg;
        select_ln6_reg_1763 <= select_ln6_fu_1173_p3;
        select_ln6_reg_1763_pp0_iter1_reg <= select_ln6_reg_1763;
        trunc_ln11_reg_1951 <= trunc_ln11_fu_1431_p1;
        trunc_ln11_reg_1951_pp0_iter2_reg <= trunc_ln11_reg_1951;
        trunc_ln8_reg_1775 <= trunc_ln8_fu_1193_p1;
        trunc_ln8_reg_1775_pp0_iter1_reg <= trunc_ln8_reg_1775;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nY_load_2_reg_2131 <= nY_fu_248;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_reg_2116 <= tmp_1_fu_1480_p67;
        tmp_s_reg_1941 <= tmp_s_fu_1259_p67;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln7_reg_1759 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln7_reg_1759_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to6 = 1'b1;
    end else begin
        ap_idle_pp0_1to6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 7'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_236;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten76_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten76_load = indvar_flatten76_fu_244;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 3'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_240;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((ap_predicate_op270_writereq_state6 == 1'b1)) begin
            m_axi_mem_B_AWADDR = mem_B_addr_1_reg_2136;
        end else if ((icmp_ln10_reg_1947_pp0_iter2_reg == 1'd0)) begin
            m_axi_mem_B_AWADDR = mem_B_addr_reg_2121;
        end else begin
            m_axi_mem_B_AWADDR = 'bx;
        end
    end else begin
        m_axi_mem_B_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_857)) begin
        if ((ap_predicate_op270_writereq_state6 == 1'b1)) begin
            m_axi_mem_B_AWLEN = 32'd2;
        end else if ((icmp_ln10_reg_1947_pp0_iter2_reg == 1'd0)) begin
            m_axi_mem_B_AWLEN = 32'd1;
        end else begin
            m_axi_mem_B_AWLEN = 'bx;
        end
    end else begin
        m_axi_mem_B_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op270_writereq_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd0)))) begin
        m_axi_mem_B_AWVALID = 1'b1;
    end else begin
        m_axi_mem_B_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op295_writeresp_state13 == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln10_reg_1947_pp0_iter5_reg == 1'd0)))) begin
        m_axi_mem_B_BREADY = 1'b1;
    end else begin
        m_axi_mem_B_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if ((1'b1 == ap_condition_1259)) begin
            m_axi_mem_B_WDATA = trunc_ln15_fu_1706_p1;
        end else if ((1'b1 == ap_condition_1255)) begin
            m_axi_mem_B_WDATA = 8'd0;
        end else if ((1'b1 == ap_condition_1251)) begin
            m_axi_mem_B_WDATA = trunc_ln11_reg_1951_pp0_iter2_reg;
        end else begin
            m_axi_mem_B_WDATA = 'bx;
        end
    end else begin
        m_axi_mem_B_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op281_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op285_write_state8 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd0)))) begin
        m_axi_mem_B_WVALID = 1'b1;
    end else begin
        m_axi_mem_B_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_predicate_op270_writereq_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd0)))) begin
        mem_B_blk_n_AW = m_axi_mem_B_AWREADY;
    end else begin
        mem_B_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((or_ln13_reg_2127_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln10_reg_1947_pp0_iter5_reg == 1'd1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln10_reg_1947_pp0_iter5_reg == 1'd0)))) begin
        mem_B_blk_n_B = m_axi_mem_B_BVALID;
    end else begin
        mem_B_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_predicate_op285_write_state8 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (or_ln13_reg_2127 == 1'd1) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd0)))) begin
        mem_B_blk_n_W = m_axi_mem_B_WREADY;
    end else begin
        mem_B_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln7_reg_1759_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nY_2_out_ap_vld = 1'b1;
    end else begin
        nY_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_10_ce0 = 1'b1;
    end else begin
        zig_zag_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_10_ce1 = 1'b1;
    end else begin
        zig_zag_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_11_ce0 = 1'b1;
    end else begin
        zig_zag_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_11_ce1 = 1'b1;
    end else begin
        zig_zag_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_12_ce0 = 1'b1;
    end else begin
        zig_zag_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_12_ce1 = 1'b1;
    end else begin
        zig_zag_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_13_ce0 = 1'b1;
    end else begin
        zig_zag_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_13_ce1 = 1'b1;
    end else begin
        zig_zag_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_14_ce0 = 1'b1;
    end else begin
        zig_zag_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_14_ce1 = 1'b1;
    end else begin
        zig_zag_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_15_ce0 = 1'b1;
    end else begin
        zig_zag_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_15_ce1 = 1'b1;
    end else begin
        zig_zag_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_16_ce0 = 1'b1;
    end else begin
        zig_zag_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_16_ce1 = 1'b1;
    end else begin
        zig_zag_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_17_ce0 = 1'b1;
    end else begin
        zig_zag_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_17_ce1 = 1'b1;
    end else begin
        zig_zag_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_18_ce0 = 1'b1;
    end else begin
        zig_zag_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_18_ce1 = 1'b1;
    end else begin
        zig_zag_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_19_ce0 = 1'b1;
    end else begin
        zig_zag_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_19_ce1 = 1'b1;
    end else begin
        zig_zag_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_1_ce0 = 1'b1;
    end else begin
        zig_zag_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_1_ce1 = 1'b1;
    end else begin
        zig_zag_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_20_ce0 = 1'b1;
    end else begin
        zig_zag_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_20_ce1 = 1'b1;
    end else begin
        zig_zag_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_21_ce0 = 1'b1;
    end else begin
        zig_zag_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_21_ce1 = 1'b1;
    end else begin
        zig_zag_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_22_ce0 = 1'b1;
    end else begin
        zig_zag_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_22_ce1 = 1'b1;
    end else begin
        zig_zag_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_23_ce0 = 1'b1;
    end else begin
        zig_zag_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_23_ce1 = 1'b1;
    end else begin
        zig_zag_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_24_ce0 = 1'b1;
    end else begin
        zig_zag_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_24_ce1 = 1'b1;
    end else begin
        zig_zag_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_25_ce0 = 1'b1;
    end else begin
        zig_zag_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_25_ce1 = 1'b1;
    end else begin
        zig_zag_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_26_ce0 = 1'b1;
    end else begin
        zig_zag_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_26_ce1 = 1'b1;
    end else begin
        zig_zag_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_27_ce0 = 1'b1;
    end else begin
        zig_zag_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_27_ce1 = 1'b1;
    end else begin
        zig_zag_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_28_ce0 = 1'b1;
    end else begin
        zig_zag_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_28_ce1 = 1'b1;
    end else begin
        zig_zag_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_29_ce0 = 1'b1;
    end else begin
        zig_zag_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_29_ce1 = 1'b1;
    end else begin
        zig_zag_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_2_ce0 = 1'b1;
    end else begin
        zig_zag_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_2_ce1 = 1'b1;
    end else begin
        zig_zag_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_30_ce0 = 1'b1;
    end else begin
        zig_zag_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_30_ce1 = 1'b1;
    end else begin
        zig_zag_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_31_ce0 = 1'b1;
    end else begin
        zig_zag_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_31_ce1 = 1'b1;
    end else begin
        zig_zag_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_3_ce0 = 1'b1;
    end else begin
        zig_zag_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_3_ce1 = 1'b1;
    end else begin
        zig_zag_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_4_ce0 = 1'b1;
    end else begin
        zig_zag_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_4_ce1 = 1'b1;
    end else begin
        zig_zag_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_5_ce0 = 1'b1;
    end else begin
        zig_zag_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_5_ce1 = 1'b1;
    end else begin
        zig_zag_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_6_ce0 = 1'b1;
    end else begin
        zig_zag_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_6_ce1 = 1'b1;
    end else begin
        zig_zag_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_7_ce0 = 1'b1;
    end else begin
        zig_zag_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_7_ce1 = 1'b1;
    end else begin
        zig_zag_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_8_ce0 = 1'b1;
    end else begin
        zig_zag_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_8_ce1 = 1'b1;
    end else begin
        zig_zag_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_9_ce0 = 1'b1;
    end else begin
        zig_zag_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_9_ce1 = 1'b1;
    end else begin
        zig_zag_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_ce0 = 1'b1;
    end else begin
        zig_zag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zig_zag_ce1 = 1'b1;
    end else begin
        zig_zag_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to6 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_1420_p2 = (zext_ln8_fu_1411_p1 + or_ln10_fu_1414_p2);

assign add_ln11_fu_1625_p2 = ($signed(sext_ln11_fu_1621_p1) + $signed(MatY_DRAM));

assign add_ln14_fu_1661_p2 = ($signed(sext_ln14_fu_1657_p1) + $signed(MatY_DRAM));

assign add_ln7_1_fu_1149_p2 = (ap_sig_allocacmp_indvar_flatten76_load + 9'd1);

assign add_ln7_fu_1161_p2 = (ap_sig_allocacmp_j_load + 3'd1);

assign add_ln8_fu_1394_p2 = (select_ln6_reg_1763 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage0_iter6));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage0_iter6)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage0_iter6)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage1_iter5));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage1_iter5)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage1_iter5)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_state12_pp0_stage1_iter5 = ((m_axi_mem_B_BVALID == 1'b0) & (icmp_ln10_reg_1947_pp0_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage0_iter6 = ((m_axi_mem_B_BVALID == 1'b0) & (ap_predicate_op295_writeresp_state13 == 1'b1));
end

always @ (*) begin
    ap_block_state6_io = (((m_axi_mem_B_AWREADY == 1'b0) & (ap_predicate_op270_writereq_state6 == 1'b1)) | ((m_axi_mem_B_AWREADY == 1'b0) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd0)));
end

always @ (*) begin
    ap_block_state7_io = (((m_axi_mem_B_WREADY == 1'b0) & (ap_predicate_op281_write_state7 == 1'b1)) | ((m_axi_mem_B_WREADY == 1'b0) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd0)));
end

always @ (*) begin
    ap_block_state8_io = ((m_axi_mem_B_WREADY == 1'b0) & (ap_predicate_op285_write_state8 == 1'b1));
end

always @ (*) begin
    ap_condition_1251 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1255 = ((ap_predicate_op281_write_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

always @ (*) begin
    ap_condition_1259 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_predicate_op285_write_state8 == 1'b1));
end

always @ (*) begin
    ap_condition_857 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

always @ (*) begin
    ap_predicate_op270_writereq_state6 = ((or_ln13_reg_2127 == 1'd1) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op281_write_state7 = ((or_ln13_reg_2127 == 1'd1) & (icmp_ln10_reg_1947_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op285_write_state8 = ((or_ln13_reg_2127_pp0_iter3_reg == 1'd1) & (icmp_ln10_reg_1947_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op295_writeresp_state13 = ((or_ln13_reg_2127_pp0_iter5_reg == 1'd1) & (icmp_ln10_reg_1947_pp0_iter5_reg == 1'd1));
end

assign count_1_fu_1685_p2 = (count_fu_232 + 32'd1);

assign empty_fu_1189_p1 = select_ln7_fu_1181_p3[1:0];

assign icmp_ln10_fu_1426_p2 = ((tmp_s_reg_1941 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln13_1_fu_1646_p2 = ((select_ln6_reg_1763_pp0_iter1_reg == 7'd63) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1641_p2 = ((tmp_1_reg_2116 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln7_fu_1143_p2 = ((ap_sig_allocacmp_indvar_flatten76_load == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_1167_p2 = ((ap_sig_allocacmp_i_load == 7'd64) ? 1'b1 : 1'b0);

assign lshr_ln2_fu_1434_p4 = {{add_ln10_fu_1420_p2[7:5]}};

assign m_axi_mem_B_ARADDR = 64'd0;

assign m_axi_mem_B_ARBURST = 2'd0;

assign m_axi_mem_B_ARCACHE = 4'd0;

assign m_axi_mem_B_ARID = 1'd0;

assign m_axi_mem_B_ARLEN = 32'd0;

assign m_axi_mem_B_ARLOCK = 2'd0;

assign m_axi_mem_B_ARPROT = 3'd0;

assign m_axi_mem_B_ARQOS = 4'd0;

assign m_axi_mem_B_ARREGION = 4'd0;

assign m_axi_mem_B_ARSIZE = 3'd0;

assign m_axi_mem_B_ARUSER = 1'd0;

assign m_axi_mem_B_ARVALID = 1'b0;

assign m_axi_mem_B_AWBURST = 2'd0;

assign m_axi_mem_B_AWCACHE = 4'd0;

assign m_axi_mem_B_AWID = 1'd0;

assign m_axi_mem_B_AWLOCK = 2'd0;

assign m_axi_mem_B_AWPROT = 3'd0;

assign m_axi_mem_B_AWQOS = 4'd0;

assign m_axi_mem_B_AWREGION = 4'd0;

assign m_axi_mem_B_AWSIZE = 3'd0;

assign m_axi_mem_B_AWUSER = 1'd0;

assign m_axi_mem_B_RREADY = 1'b0;

assign m_axi_mem_B_WID = 1'd0;

assign m_axi_mem_B_WLAST = 1'b0;

assign m_axi_mem_B_WSTRB = 1'd1;

assign m_axi_mem_B_WUSER = 1'd0;

assign nY_2_fu_1615_p0 = nY_fu_248;

assign nY_2_fu_1615_p2 = ($signed(nY_2_fu_1615_p0) + $signed(32'd1));

assign nY_2_out = nY_fu_248;

assign nY_3_fu_1672_p2 = ($signed(nY_load_2_reg_2131) + $signed(32'd2));

assign or_ln10_1_fu_1205_p3 = {{empty_fu_1189_p1}, {tmp_fu_1197_p3}};

assign or_ln10_fu_1414_p2 = (tmp_2_fu_1404_p3 | 8'd1);

assign or_ln13_fu_1651_p2 = (icmp_ln13_fu_1641_p2 | icmp_ln13_1_fu_1646_p2);

assign select_ln6_fu_1173_p3 = ((icmp_ln8_fu_1167_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_i_load);

assign select_ln7_fu_1181_p3 = ((icmp_ln8_fu_1167_p2[0:0] == 1'b1) ? add_ln7_fu_1161_p2 : ap_sig_allocacmp_j_load);

assign sext_ln11_fu_1621_p0 = nY_fu_248;

assign sext_ln11_fu_1621_p1 = sext_ln11_fu_1621_p0;

assign sext_ln14_fu_1657_p0 = nY_fu_248;

assign sext_ln14_fu_1657_p1 = sext_ln14_fu_1657_p0;

assign tmp_1_fu_1480_p65 = 'bx;

assign tmp_2_fu_1404_p3 = {{empty_reg_1770}, {6'd0}};

assign tmp_fu_1197_p3 = select_ln6_fu_1173_p3[32'd5];

assign tmp_s_fu_1259_p65 = 'bx;

assign trunc_ln11_fu_1431_p1 = tmp_s_reg_1941[7:0];

assign trunc_ln15_fu_1706_p1 = count_1_reg_2143[7:0];

assign trunc_ln8_fu_1193_p1 = select_ln6_fu_1173_p3[4:0];

assign zext_ln10_fu_1213_p1 = or_ln10_1_fu_1205_p3;

assign zext_ln13_fu_1444_p1 = lshr_ln2_fu_1434_p4;

assign zext_ln8_fu_1411_p1 = select_ln6_reg_1763;

assign zig_zag_10_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_10_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_11_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_11_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_12_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_12_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_13_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_13_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_14_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_14_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_15_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_15_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_16_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_16_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_17_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_17_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_18_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_18_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_19_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_19_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_1_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_1_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_20_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_20_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_21_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_21_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_22_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_22_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_23_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_23_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_24_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_24_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_25_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_25_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_26_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_26_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_27_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_27_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_28_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_28_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_29_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_29_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_2_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_2_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_30_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_30_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_31_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_31_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_3_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_3_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_4_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_4_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_5_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_5_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_6_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_6_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_7_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_7_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_8_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_8_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_9_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_9_address1 = zext_ln10_fu_1213_p1;

assign zig_zag_address0 = zext_ln13_fu_1444_p1;

assign zig_zag_address1 = zext_ln10_fu_1213_p1;

endmodule //IMG2RLE_IMG2RLE_Pipeline_rle_rle64
