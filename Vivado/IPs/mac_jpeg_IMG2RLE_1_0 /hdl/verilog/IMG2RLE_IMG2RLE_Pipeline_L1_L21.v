// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module IMG2RLE_IMG2RLE_Pipeline_L1_L21 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dct_middle_1_address0,
        dct_middle_1_ce0,
        dct_middle_1_we0,
        dct_middle_1_d0,
        dct_middle_1_address1,
        dct_middle_1_ce1,
        dct_middle_1_q1,
        Cb_address0,
        Cb_ce0,
        Cb_q0,
        Cb_1_address0,
        Cb_1_ce0,
        Cb_1_q0,
        Cb_2_address0,
        Cb_2_ce0,
        Cb_2_q0,
        Cb_3_address0,
        Cb_3_ce0,
        Cb_3_q0,
        Cb_4_address0,
        Cb_4_ce0,
        Cb_4_q0,
        Cb_5_address0,
        Cb_5_ce0,
        Cb_5_q0,
        Cb_6_address0,
        Cb_6_ce0,
        Cb_6_q0,
        Cb_7_address0,
        Cb_7_ce0,
        Cb_7_q0,
        dct12_i77_0_address0,
        dct12_i77_0_ce0,
        dct12_i77_0_q0,
        dct12_i77_1_address0,
        dct12_i77_1_ce0,
        dct12_i77_1_q0,
        dct12_i77_2_address0,
        dct12_i77_2_ce0,
        dct12_i77_2_q0,
        dct12_i77_3_address0,
        dct12_i77_3_ce0,
        dct12_i77_3_q0,
        dct12_i77_4_address0,
        dct12_i77_4_ce0,
        dct12_i77_4_q0,
        dct12_i77_5_address0,
        dct12_i77_5_ce0,
        dct12_i77_5_q0,
        dct12_i77_6_address0,
        dct12_i77_6_ce0,
        dct12_i77_6_q0,
        dct12_i77_7_address0,
        dct12_i77_7_ce0,
        dct12_i77_7_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] dct_middle_1_address0;
output   dct_middle_1_ce0;
output   dct_middle_1_we0;
output  [17:0] dct_middle_1_d0;
output  [5:0] dct_middle_1_address1;
output   dct_middle_1_ce1;
input  [17:0] dct_middle_1_q1;
output  [2:0] Cb_address0;
output   Cb_ce0;
input  [15:0] Cb_q0;
output  [2:0] Cb_1_address0;
output   Cb_1_ce0;
input  [15:0] Cb_1_q0;
output  [2:0] Cb_2_address0;
output   Cb_2_ce0;
input  [15:0] Cb_2_q0;
output  [2:0] Cb_3_address0;
output   Cb_3_ce0;
input  [15:0] Cb_3_q0;
output  [2:0] Cb_4_address0;
output   Cb_4_ce0;
input  [15:0] Cb_4_q0;
output  [2:0] Cb_5_address0;
output   Cb_5_ce0;
input  [15:0] Cb_5_q0;
output  [2:0] Cb_6_address0;
output   Cb_6_ce0;
input  [15:0] Cb_6_q0;
output  [2:0] Cb_7_address0;
output   Cb_7_ce0;
input  [15:0] Cb_7_q0;
output  [2:0] dct12_i77_0_address0;
output   dct12_i77_0_ce0;
input  [10:0] dct12_i77_0_q0;
output  [2:0] dct12_i77_1_address0;
output   dct12_i77_1_ce0;
input  [11:0] dct12_i77_1_q0;
output  [2:0] dct12_i77_2_address0;
output   dct12_i77_2_ce0;
input  [11:0] dct12_i77_2_q0;
output  [2:0] dct12_i77_3_address0;
output   dct12_i77_3_ce0;
input  [11:0] dct12_i77_3_q0;
output  [2:0] dct12_i77_4_address0;
output   dct12_i77_4_ce0;
input  [11:0] dct12_i77_4_q0;
output  [2:0] dct12_i77_5_address0;
output   dct12_i77_5_ce0;
input  [11:0] dct12_i77_5_q0;
output  [2:0] dct12_i77_6_address0;
output   dct12_i77_6_ce0;
input  [11:0] dct12_i77_6_q0;
output  [2:0] dct12_i77_7_address0;
output   dct12_i77_7_ce0;
input  [11:0] dct12_i77_7_q0;

reg ap_idle;
reg dct_middle_1_ce0;
reg dct_middle_1_we0;
reg dct_middle_1_ce1;
reg Cb_ce0;
reg Cb_1_ce0;
reg Cb_2_ce0;
reg Cb_3_ce0;
reg Cb_4_ce0;
reg Cb_5_ce0;
reg Cb_6_ce0;
reg Cb_7_ce0;
reg dct12_i77_0_ce0;
reg dct12_i77_1_ce0;
reg dct12_i77_2_ce0;
reg dct12_i77_3_ce0;
reg dct12_i77_4_ce0;
reg dct12_i77_5_ce0;
reg dct12_i77_6_ce0;
reg dct12_i77_7_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln56_fu_331_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln57_fu_401_p1;
reg   [63:0] zext_ln57_reg_675;
wire   [5:0] empty_fu_414_p2;
reg   [5:0] empty_reg_682;
reg  signed [11:0] dct12_i77_2_load_reg_722;
reg   [11:0] dct12_i77_3_load_reg_727;
reg  signed [11:0] dct12_i77_3_load_reg_727_pp0_iter2_reg;
reg  signed [11:0] dct12_i77_4_load_reg_732;
reg  signed [11:0] dct12_i77_5_load_reg_737;
reg  signed [11:0] dct12_i77_6_load_reg_742;
reg   [5:0] dct_middle_1_addr_reg_752;
reg   [5:0] dct_middle_1_addr_reg_752_pp0_iter2_reg;
reg   [5:0] dct_middle_1_addr_reg_752_pp0_iter3_reg;
reg   [5:0] dct_middle_1_addr_reg_752_pp0_iter4_reg;
reg   [5:0] dct_middle_1_addr_reg_752_pp0_iter5_reg;
reg  signed [15:0] Cb_2_load_reg_783;
reg  signed [15:0] Cb_6_load_reg_788;
reg  signed [15:0] Cb_3_load_reg_808;
reg  signed [17:0] dct_middle_1_load_reg_823;
wire   [27:0] mul_ln63_9_fu_495_p2;
reg  signed [27:0] mul_ln63_9_reg_828;
wire   [27:0] mul_ln63_fu_501_p2;
reg  signed [27:0] mul_ln63_reg_833;
wire   [27:0] mul_ln63_11_fu_516_p2;
reg  signed [27:0] mul_ln63_11_reg_843;
wire   [28:0] add_ln63_10_fu_528_p2;
reg   [28:0] add_ln63_10_reg_848;
reg   [17:0] trunc_ln65_1_reg_858;
wire   [63:0] zext_ln56_fu_381_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] p_cast_fu_453_p1;
reg   [3:0] jj_fu_76;
wire   [3:0] add_ln57_fu_420_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_jj_load;
reg   [3:0] ii_fu_80;
wire   [3:0] select_ln56_fu_369_p3;
reg   [3:0] ap_sig_allocacmp_ii_load;
reg   [6:0] indvar_flatten83_fu_84;
wire   [6:0] add_ln56_fu_337_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten83_load;
wire   [0:0] icmp_ln57_fu_355_p2;
wire   [3:0] add_ln56_1_fu_349_p2;
wire   [2:0] trunc_ln56_fu_377_p1;
wire   [3:0] select_ln56_3_fu_361_p3;
wire   [5:0] tmp_s_fu_393_p3;
wire   [5:0] select_ln56_3_cast_fu_410_p1;
wire  signed [26:0] grp_fu_576_p3;
wire  signed [27:0] grp_fu_585_p3;
wire  signed [28:0] sext_ln63_17_fu_525_p1;
wire  signed [28:0] sext_ln63_16_fu_522_p1;
wire  signed [27:0] grp_fu_568_p3;
wire  signed [27:0] grp_fu_593_p3;
wire  signed [28:0] grp_fu_601_p3;
wire  signed [29:0] sext_ln63_21_fu_543_p1;
wire  signed [29:0] sext_ln63_19_fu_540_p1;
wire   [29:0] add_ln63_14_fu_546_p2;
wire  signed [29:0] sext_ln63_18_fu_537_p1;
wire   [29:0] add_ln63_fu_552_p2;
wire   [10:0] grp_fu_585_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [26:0] grp_fu_585_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 jj_fu_76 = 4'd0;
#0 ii_fu_80 = 4'd0;
#0 indvar_flatten83_fu_84 = 7'd0;
#0 ap_done_reg = 1'b0;
end

IMG2RLE_mul_16s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
mul_16s_12s_28_1_1_U2096(
    .din0(Cb_2_load_reg_783),
    .din1(dct12_i77_2_load_reg_722),
    .dout(mul_ln63_9_fu_495_p2)
);

IMG2RLE_mul_16s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
mul_16s_12s_28_1_1_U2097(
    .din0(Cb_6_load_reg_788),
    .din1(dct12_i77_6_load_reg_742),
    .dout(mul_ln63_fu_501_p2)
);

IMG2RLE_mul_16s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
mul_16s_12s_28_1_1_U2098(
    .din0(Cb_3_load_reg_808),
    .din1(dct12_i77_3_load_reg_727_pp0_iter2_reg),
    .dout(mul_ln63_11_fu_516_p2)
);

IMG2RLE_mac_muladd_16s_12s_28s_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
mac_muladd_16s_12s_28s_28_4_1_U2099(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Cb_7_q0),
    .din1(dct12_i77_7_q0),
    .din2(mul_ln63_reg_833),
    .ce(1'b1),
    .dout(grp_fu_568_p3)
);

IMG2RLE_mac_muladd_16s_12s_18s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 27 ))
mac_muladd_16s_12s_18s_27_4_1_U2100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Cb_1_q0),
    .din1(dct12_i77_1_q0),
    .din2(dct_middle_1_load_reg_823),
    .ce(1'b1),
    .dout(grp_fu_576_p3)
);

IMG2RLE_mac_muladd_16s_11ns_28s_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
mac_muladd_16s_11ns_28s_28_4_1_U2101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Cb_q0),
    .din1(grp_fu_585_p1),
    .din2(mul_ln63_9_reg_828),
    .ce(1'b1),
    .dout(grp_fu_585_p3)
);

IMG2RLE_mac_muladd_16s_12s_28s_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
mac_muladd_16s_12s_28s_28_4_1_U2102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Cb_4_q0),
    .din1(dct12_i77_4_load_reg_732),
    .din2(mul_ln63_11_reg_843),
    .ce(1'b1),
    .dout(grp_fu_593_p3)
);

IMG2RLE_mac_muladd_16s_12s_28s_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_12s_28s_29_4_1_U2103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Cb_5_q0),
    .din1(dct12_i77_5_load_reg_737),
    .din2(grp_fu_568_p3),
    .ce(1'b1),
    .dout(grp_fu_601_p3)
);

IMG2RLE_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln56_fu_331_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            ii_fu_80 <= select_ln56_fu_369_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            ii_fu_80 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln56_fu_331_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten83_fu_84 <= add_ln56_fu_337_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten83_fu_84 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln56_fu_331_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            jj_fu_76 <= add_ln57_fu_420_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            jj_fu_76 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Cb_2_load_reg_783 <= Cb_2_q0;
        Cb_6_load_reg_788 <= Cb_6_q0;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        dct12_i77_2_load_reg_722 <= dct12_i77_2_q0;
        dct12_i77_3_load_reg_727 <= dct12_i77_3_q0;
        dct12_i77_4_load_reg_732 <= dct12_i77_4_q0;
        dct12_i77_5_load_reg_737 <= dct12_i77_5_q0;
        dct12_i77_6_load_reg_742 <= dct12_i77_6_q0;
        dct_middle_1_addr_reg_752 <= p_cast_fu_453_p1;
        empty_reg_682 <= empty_fu_414_p2;
        zext_ln57_reg_675[3 : 0] <= zext_ln57_fu_401_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Cb_3_load_reg_808 <= Cb_3_q0;
        add_ln63_10_reg_848 <= add_ln63_10_fu_528_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        dct12_i77_3_load_reg_727_pp0_iter2_reg <= dct12_i77_3_load_reg_727;
        dct_middle_1_addr_reg_752_pp0_iter2_reg <= dct_middle_1_addr_reg_752;
        dct_middle_1_addr_reg_752_pp0_iter3_reg <= dct_middle_1_addr_reg_752_pp0_iter2_reg;
        dct_middle_1_addr_reg_752_pp0_iter4_reg <= dct_middle_1_addr_reg_752_pp0_iter3_reg;
        dct_middle_1_addr_reg_752_pp0_iter5_reg <= dct_middle_1_addr_reg_752_pp0_iter4_reg;
        mul_ln63_11_reg_843 <= mul_ln63_11_fu_516_p2;
        mul_ln63_9_reg_828 <= mul_ln63_9_fu_495_p2;
        mul_ln63_reg_833 <= mul_ln63_fu_501_p2;
        trunc_ln65_1_reg_858 <= {{add_ln63_fu_552_p2[29:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dct_middle_1_load_reg_823 <= dct_middle_1_q1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Cb_1_ce0 = 1'b1;
    end else begin
        Cb_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Cb_2_ce0 = 1'b1;
    end else begin
        Cb_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Cb_3_ce0 = 1'b1;
    end else begin
        Cb_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Cb_4_ce0 = 1'b1;
    end else begin
        Cb_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Cb_5_ce0 = 1'b1;
    end else begin
        Cb_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Cb_6_ce0 = 1'b1;
    end else begin
        Cb_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Cb_7_ce0 = 1'b1;
    end else begin
        Cb_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Cb_ce0 = 1'b1;
    end else begin
        Cb_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln56_fu_331_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ii_load = 4'd0;
    end else begin
        ap_sig_allocacmp_ii_load = ii_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten83_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten83_load = indvar_flatten83_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_jj_load = 4'd0;
    end else begin
        ap_sig_allocacmp_jj_load = jj_fu_76;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i77_0_ce0 = 1'b1;
    end else begin
        dct12_i77_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i77_1_ce0 = 1'b1;
    end else begin
        dct12_i77_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i77_2_ce0 = 1'b1;
    end else begin
        dct12_i77_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i77_3_ce0 = 1'b1;
    end else begin
        dct12_i77_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i77_4_ce0 = 1'b1;
    end else begin
        dct12_i77_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i77_5_ce0 = 1'b1;
    end else begin
        dct12_i77_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i77_6_ce0 = 1'b1;
    end else begin
        dct12_i77_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct12_i77_7_ce0 = 1'b1;
    end else begin
        dct12_i77_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        dct_middle_1_ce0 = 1'b1;
    end else begin
        dct_middle_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dct_middle_1_ce1 = 1'b1;
    end else begin
        dct_middle_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        dct_middle_1_we0 = 1'b1;
    end else begin
        dct_middle_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Cb_1_address0 = zext_ln57_fu_401_p1;

assign Cb_2_address0 = zext_ln57_fu_401_p1;

assign Cb_3_address0 = zext_ln57_reg_675;

assign Cb_4_address0 = zext_ln57_reg_675;

assign Cb_5_address0 = zext_ln57_reg_675;

assign Cb_6_address0 = zext_ln57_fu_401_p1;

assign Cb_7_address0 = zext_ln57_fu_401_p1;

assign Cb_address0 = zext_ln57_fu_401_p1;

assign add_ln56_1_fu_349_p2 = (ap_sig_allocacmp_ii_load + 4'd1);

assign add_ln56_fu_337_p2 = (ap_sig_allocacmp_indvar_flatten83_load + 7'd1);

assign add_ln57_fu_420_p2 = (select_ln56_3_fu_361_p3 + 4'd1);

assign add_ln63_10_fu_528_p2 = ($signed(sext_ln63_17_fu_525_p1) + $signed(sext_ln63_16_fu_522_p1));

assign add_ln63_14_fu_546_p2 = ($signed(sext_ln63_21_fu_543_p1) + $signed(sext_ln63_19_fu_540_p1));

assign add_ln63_fu_552_p2 = ($signed(add_ln63_14_fu_546_p2) + $signed(sext_ln63_18_fu_537_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign dct12_i77_0_address0 = zext_ln56_fu_381_p1;

assign dct12_i77_1_address0 = zext_ln56_fu_381_p1;

assign dct12_i77_2_address0 = zext_ln56_fu_381_p1;

assign dct12_i77_3_address0 = zext_ln56_fu_381_p1;

assign dct12_i77_4_address0 = zext_ln56_fu_381_p1;

assign dct12_i77_5_address0 = zext_ln56_fu_381_p1;

assign dct12_i77_6_address0 = zext_ln56_fu_381_p1;

assign dct12_i77_7_address0 = zext_ln56_fu_381_p1;

assign dct_middle_1_address0 = dct_middle_1_addr_reg_752_pp0_iter5_reg;

assign dct_middle_1_address1 = p_cast_fu_453_p1;

assign dct_middle_1_d0 = trunc_ln65_1_reg_858;

assign empty_fu_414_p2 = (tmp_s_fu_393_p3 + select_ln56_3_cast_fu_410_p1);

assign grp_fu_585_p1 = grp_fu_585_p10;

assign grp_fu_585_p10 = dct12_i77_0_q0;

assign icmp_ln56_fu_331_p2 = ((ap_sig_allocacmp_indvar_flatten83_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_355_p2 = ((ap_sig_allocacmp_jj_load == 4'd8) ? 1'b1 : 1'b0);

assign p_cast_fu_453_p1 = empty_reg_682;

assign select_ln56_3_cast_fu_410_p1 = select_ln56_3_fu_361_p3;

assign select_ln56_3_fu_361_p3 = ((icmp_ln57_fu_355_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_jj_load);

assign select_ln56_fu_369_p3 = ((icmp_ln57_fu_355_p2[0:0] == 1'b1) ? add_ln56_1_fu_349_p2 : ap_sig_allocacmp_ii_load);

assign sext_ln63_16_fu_522_p1 = grp_fu_576_p3;

assign sext_ln63_17_fu_525_p1 = grp_fu_585_p3;

assign sext_ln63_18_fu_537_p1 = $signed(add_ln63_10_reg_848);

assign sext_ln63_19_fu_540_p1 = grp_fu_593_p3;

assign sext_ln63_21_fu_543_p1 = grp_fu_601_p3;

assign tmp_s_fu_393_p3 = {{trunc_ln56_fu_377_p1}, {3'd0}};

assign trunc_ln56_fu_377_p1 = select_ln56_fu_369_p3[2:0];

assign zext_ln56_fu_381_p1 = select_ln56_fu_369_p3;

assign zext_ln57_fu_401_p1 = select_ln56_3_fu_361_p3;

always @ (posedge ap_clk) begin
    zext_ln57_reg_675[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //IMG2RLE_IMG2RLE_Pipeline_L1_L21
