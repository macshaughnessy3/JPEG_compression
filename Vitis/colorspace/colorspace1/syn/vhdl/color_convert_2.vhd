-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity color_convert_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    stream_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_in_TVALID : IN STD_LOGIC;
    stream_in_TREADY : OUT STD_LOGIC;
    stream_in_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    stream_in_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    stream_out_TVALID : OUT STD_LOGIC;
    stream_out_TREADY : IN STD_LOGIC;
    stream_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    stream_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    stream_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of color_convert_2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "color_convert_2_color_convert_2,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.833500,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=400,HLS_SYN_LUT=538,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv12_80 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal stream_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_out_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal curr_pixel_keep_reg_633 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal regslice_both_stream_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal curr_pixel_keep_reg_633_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal curr_pixel_strb_reg_638 : STD_LOGIC_VECTOR (3 downto 0);
    signal curr_pixel_strb_reg_638_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal curr_pixel_last_reg_643 : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_pixel_last_reg_643_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_176_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_648 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_reg_654 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_reg_654_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln102_fu_224_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln102_reg_659 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_4_reg_664 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_reg_669 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_reg_669_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln103_fu_294_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln103_reg_674 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln103_3_fu_346_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln103_3_reg_679 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_reg_684 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln104_2_fu_428_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln104_2_reg_689 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_reg_694 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln102_3_fu_480_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln102_3_reg_699 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1_reg_704 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2_reg_709 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln102_fu_196_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_200_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln102_1_fu_208_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln102_fu_216_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln102_1_fu_220_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1_fu_250_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln103_1_fu_258_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln103_fu_266_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln103_1_fu_270_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln103_fu_274_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln103_2_fu_280_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln103_1_fu_284_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln103_3_fu_290_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln103_2_fu_300_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln103_3_fu_308_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln103_4_fu_316_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln103_5_fu_320_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln103_4_fu_330_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln103_2_fu_324_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln103_7_fu_342_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln2_fu_362_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln104_1_fu_370_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln104_fu_378_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln104_1_fu_382_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln104_2_fu_392_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln104_2_fu_400_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln104_fu_404_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln104_3_fu_410_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln103_6_fu_338_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln104_fu_386_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln104_1_fu_414_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln104_fu_420_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln104_1_fu_424_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln102_2_fu_444_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln102_2_fu_451_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln102_3_fu_454_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln102_1_fu_458_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln102_4_fu_464_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln102_2_fu_467_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln102_3_fu_473_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln103_fu_486_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln103_8_fu_489_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln103_5_fu_498_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln103_1_fu_492_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln103_2_fu_509_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln103_4_fu_515_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln104_3_fu_531_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln103_9_fu_505_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln104_4_fu_538_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln104_1_fu_542_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln104_2_fu_548_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln104_5_fu_551_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln104_3_fu_555_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln102_4_fu_571_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln102_4_fu_578_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln102_5_fu_583_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_fu_588_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln104_3_fu_609_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal Cr_fu_612_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal xor_ln111_fu_604_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln110_fu_598_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal curr_pixel_data_1_fu_618_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_stream_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_in_TVALID_int_regslice : STD_LOGIC;
    signal stream_in_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_stream_in_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_stream_in_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_V_last_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_stream_in_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_V_last_V_U_ack_in : STD_LOGIC;
    signal stream_out_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_out_TVALID_int_regslice : STD_LOGIC;
    signal stream_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component color_convert_2_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_stream_in_V_data_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_TDATA,
        vld_in => stream_in_TVALID,
        ack_in => regslice_both_stream_in_V_data_V_U_ack_in,
        data_out => stream_in_TDATA_int_regslice,
        vld_out => stream_in_TVALID_int_regslice,
        ack_out => stream_in_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_V_data_V_U_apdone_blk);

    regslice_both_stream_in_V_keep_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_TKEEP,
        vld_in => stream_in_TVALID,
        ack_in => regslice_both_stream_in_V_keep_V_U_ack_in,
        data_out => stream_in_TKEEP_int_regslice,
        vld_out => regslice_both_stream_in_V_keep_V_U_vld_out,
        ack_out => stream_in_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_V_keep_V_U_apdone_blk);

    regslice_both_stream_in_V_strb_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_TSTRB,
        vld_in => stream_in_TVALID,
        ack_in => regslice_both_stream_in_V_strb_V_U_ack_in,
        data_out => stream_in_TSTRB_int_regslice,
        vld_out => regslice_both_stream_in_V_strb_V_U_vld_out,
        ack_out => stream_in_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_V_strb_V_U_apdone_blk);

    regslice_both_stream_in_V_last_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_TLAST,
        vld_in => stream_in_TVALID,
        ack_in => regslice_both_stream_in_V_last_V_U_ack_in,
        data_out => stream_in_TLAST_int_regslice,
        vld_out => regslice_both_stream_in_V_last_V_U_vld_out,
        ack_out => stream_in_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_V_last_V_U_apdone_blk);

    regslice_both_stream_out_V_data_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_out_TDATA_int_regslice,
        vld_in => stream_out_TVALID_int_regslice,
        ack_in => stream_out_TREADY_int_regslice,
        data_out => stream_out_TDATA,
        vld_out => regslice_both_stream_out_V_data_V_U_vld_out,
        ack_out => stream_out_TREADY,
        apdone_blk => regslice_both_stream_out_V_data_V_U_apdone_blk);

    regslice_both_stream_out_V_keep_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => curr_pixel_keep_reg_633_pp0_iter1_reg,
        vld_in => stream_out_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_V_keep_V_U_ack_in_dummy,
        data_out => stream_out_TKEEP,
        vld_out => regslice_both_stream_out_V_keep_V_U_vld_out,
        ack_out => stream_out_TREADY,
        apdone_blk => regslice_both_stream_out_V_keep_V_U_apdone_blk);

    regslice_both_stream_out_V_strb_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => curr_pixel_strb_reg_638_pp0_iter1_reg,
        vld_in => stream_out_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_V_strb_V_U_ack_in_dummy,
        data_out => stream_out_TSTRB,
        vld_out => regslice_both_stream_out_V_strb_V_U_vld_out,
        ack_out => stream_out_TREADY,
        apdone_blk => regslice_both_stream_out_V_strb_V_U_apdone_blk);

    regslice_both_stream_out_V_last_V_U : component color_convert_2_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => curr_pixel_last_reg_643_pp0_iter1_reg,
        vld_in => stream_out_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_V_last_V_U_ack_in_dummy,
        data_out => stream_out_TLAST,
        vld_out => regslice_both_stream_out_V_last_V_U_vld_out,
        ack_out => stream_out_TREADY,
        apdone_blk => regslice_both_stream_out_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln102_3_reg_699 <= add_ln102_3_fu_480_p2;
                    add_ln102_reg_659(14 downto 1) <= add_ln102_fu_224_p2(14 downto 1);
                    add_ln103_3_reg_679(14 downto 1) <= add_ln103_3_fu_346_p2(14 downto 1);
                b_reg_654 <= stream_in_TDATA_int_regslice(31 downto 16);
                b_reg_654_pp0_iter1_reg <= b_reg_654;
                curr_pixel_keep_reg_633 <= stream_in_TKEEP_int_regslice;
                curr_pixel_keep_reg_633_pp0_iter1_reg <= curr_pixel_keep_reg_633;
                curr_pixel_last_reg_643 <= stream_in_TLAST_int_regslice;
                curr_pixel_last_reg_643_pp0_iter1_reg <= curr_pixel_last_reg_643;
                curr_pixel_strb_reg_638 <= stream_in_TSTRB_int_regslice;
                curr_pixel_strb_reg_638_pp0_iter1_reg <= curr_pixel_strb_reg_638;
                    sub_ln103_reg_674(14 downto 1) <= sub_ln103_fu_294_p2(14 downto 1);
                    sub_ln104_2_reg_689(16 downto 1) <= sub_ln104_2_fu_428_p2(16 downto 1);
                tmp_1_reg_684 <= stream_in_TDATA_int_regslice(24 downto 16);
                tmp_2_reg_694 <= stream_in_TDATA_int_regslice(30 downto 16);
                tmp_4_reg_664 <= stream_in_TDATA_int_regslice(27 downto 16);
                tmp_5_reg_669 <= stream_in_TDATA_int_regslice(28 downto 16);
                tmp_5_reg_669_pp0_iter1_reg <= tmp_5_reg_669;
                tmp_s_reg_648 <= stream_in_TDATA_int_regslice(15 downto 8);
                trunc_ln1_reg_704 <= add_ln103_4_fu_515_p2(15 downto 8);
                trunc_ln2_reg_709 <= sub_ln104_3_fu_555_p2(18 downto 8);
            end if;
        end if;
    end process;
    add_ln102_reg_659(0) <= '0';
    sub_ln103_reg_674(0) <= '0';
    add_ln103_3_reg_679(0) <= '0';
    sub_ln104_2_reg_689(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Cr_fu_612_p2 <= std_logic_vector(signed(sext_ln104_3_fu_609_p1) + signed(ap_const_lv12_80));
    add_ln102_1_fu_458_p2 <= std_logic_vector(unsigned(zext_ln102_2_fu_451_p1) + unsigned(zext_ln102_3_fu_454_p1));
    add_ln102_2_fu_467_p2 <= std_logic_vector(unsigned(add_ln102_1_fu_458_p2) + unsigned(zext_ln102_4_fu_464_p1));
    add_ln102_3_fu_480_p2 <= std_logic_vector(unsigned(add_ln102_2_fu_467_p2) + unsigned(shl_ln102_3_fu_473_p3));
    add_ln102_4_fu_578_p2 <= std_logic_vector(unsigned(add_ln102_3_reg_699) + unsigned(shl_ln102_4_fu_571_p3));
    add_ln102_5_fu_583_p2 <= std_logic_vector(unsigned(add_ln102_4_fu_578_p2) + unsigned(b_reg_654_pp0_iter1_reg));
    add_ln102_fu_224_p2 <= std_logic_vector(unsigned(zext_ln102_fu_216_p1) + unsigned(zext_ln102_1_fu_220_p1));
    add_ln103_1_fu_284_p2 <= std_logic_vector(unsigned(add_ln103_fu_274_p2) + unsigned(zext_ln103_2_fu_280_p1));
    add_ln103_2_fu_324_p2 <= std_logic_vector(unsigned(zext_ln103_4_fu_316_p1) + unsigned(zext_ln103_5_fu_320_p1));
    add_ln103_3_fu_346_p2 <= std_logic_vector(unsigned(add_ln103_2_fu_324_p2) + unsigned(zext_ln103_7_fu_342_p1));
    add_ln103_4_fu_515_p2 <= std_logic_vector(unsigned(sub_ln103_1_fu_492_p2) + unsigned(sub_ln103_2_fu_509_p2));
    add_ln103_fu_274_p2 <= std_logic_vector(unsigned(zext_ln103_fu_266_p1) + unsigned(zext_ln103_1_fu_270_p1));
    add_ln104_1_fu_542_p2 <= std_logic_vector(unsigned(zext_ln103_9_fu_505_p1) + unsigned(zext_ln104_4_fu_538_p1));
    add_ln104_fu_404_p2 <= std_logic_vector(unsigned(zext_ln103_4_fu_316_p1) + unsigned(zext_ln104_2_fu_400_p1));
    add_ln110_fu_598_p2 <= std_logic_vector(unsigned(trunc_ln_fu_588_p4) + unsigned(ap_const_lv8_10));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_block_state4_pp0_stage0_iter3)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_block_state4_pp0_stage0_iter3, stream_out_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((stream_out_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((stream_out_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_block_state4_pp0_stage0_iter3, stream_out_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((stream_out_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((stream_out_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(stream_in_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (stream_in_TVALID_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(stream_out_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (stream_out_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(regslice_both_stream_out_V_data_V_U_apdone_blk, stream_out_TREADY_int_regslice)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((regslice_both_stream_out_V_data_V_U_apdone_blk = ap_const_logic_1) or (stream_out_TREADY_int_regslice = ap_const_logic_0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    curr_pixel_data_1_fu_618_p4 <= ((Cr_fu_612_p2 & xor_ln111_fu_604_p2) & add_ln110_fu_598_p2);
        sext_ln103_fu_486_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln103_reg_674),16));

        sext_ln104_1_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln104_1_fu_414_p2),17));

        sext_ln104_2_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln104_2_reg_689),19));

        sext_ln104_3_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_reg_709),12));

        sext_ln104_fu_420_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln104_fu_386_p2),17));

    shl_ln102_1_fu_208_p3 <= (trunc_ln102_fu_196_p1 & ap_const_lv1_0);
    shl_ln102_2_fu_444_p3 <= (tmp_s_reg_648 & ap_const_lv7_0);
    shl_ln102_3_fu_473_p3 <= (tmp_4_reg_664 & ap_const_lv4_0);
    shl_ln102_4_fu_571_p3 <= (tmp_5_reg_669_pp0_iter1_reg & ap_const_lv3_0);
    shl_ln103_1_fu_258_p3 <= (trunc_ln102_fu_196_p1 & ap_const_lv2_0);
    shl_ln103_2_fu_300_p3 <= (tmp_s_fu_176_p4 & ap_const_lv6_0);
    shl_ln103_3_fu_308_p3 <= (tmp_s_fu_176_p4 & ap_const_lv3_0);
    shl_ln103_4_fu_330_p3 <= (tmp_s_fu_176_p4 & ap_const_lv1_0);
    shl_ln103_5_fu_498_p3 <= (tmp_1_reg_684 & ap_const_lv7_0);
    shl_ln104_1_fu_370_p3 <= (trunc_ln102_fu_196_p1 & ap_const_lv4_0);
    shl_ln104_2_fu_392_p3 <= (tmp_s_fu_176_p4 & ap_const_lv5_0);
    shl_ln104_3_fu_531_p3 <= (tmp_2_reg_694 & ap_const_lv1_0);
    shl_ln1_fu_250_p3 <= (trunc_ln102_fu_196_p1 & ap_const_lv5_0);
    shl_ln2_fu_362_p3 <= (trunc_ln102_fu_196_p1 & ap_const_lv7_0);
    shl_ln_fu_200_p3 <= (trunc_ln102_fu_196_p1 & ap_const_lv6_0);

    stream_in_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, stream_in_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_TDATA_blk_n <= stream_in_TVALID_int_regslice;
        else 
            stream_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_TREADY <= regslice_both_stream_in_V_data_V_U_ack_in;

    stream_in_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_TREADY_int_regslice <= ap_const_logic_1;
        else 
            stream_in_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    stream_out_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, stream_out_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            stream_out_TDATA_blk_n <= stream_out_TREADY_int_regslice;
        else 
            stream_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        stream_out_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(signed(curr_pixel_data_1_fu_618_p4),32));

    stream_out_TVALID <= regslice_both_stream_out_V_data_V_U_vld_out;

    stream_out_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            stream_out_TVALID_int_regslice <= ap_const_logic_1;
        else 
            stream_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln103_1_fu_492_p2 <= std_logic_vector(signed(sext_ln103_fu_486_p1) - signed(zext_ln103_8_fu_489_p1));
    sub_ln103_2_fu_509_p2 <= std_logic_vector(unsigned(shl_ln103_5_fu_498_p3) - unsigned(shl_ln102_3_fu_473_p3));
    sub_ln103_fu_294_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(zext_ln103_3_fu_290_p1));
    sub_ln104_1_fu_414_p2 <= std_logic_vector(unsigned(zext_ln104_3_fu_410_p1) - unsigned(zext_ln103_6_fu_338_p1));
    sub_ln104_2_fu_428_p2 <= std_logic_vector(signed(sext_ln104_fu_420_p1) - signed(sext_ln104_1_fu_424_p1));
    sub_ln104_3_fu_555_p2 <= std_logic_vector(signed(sext_ln104_2_fu_548_p1) - signed(zext_ln104_5_fu_551_p1));
    sub_ln104_fu_386_p2 <= std_logic_vector(unsigned(zext_ln104_fu_378_p1) - unsigned(zext_ln104_1_fu_382_p1));
    tmp_s_fu_176_p4 <= stream_in_TDATA_int_regslice(15 downto 8);
    trunc_ln102_fu_196_p1 <= stream_in_TDATA_int_regslice(8 - 1 downto 0);
    trunc_ln_fu_588_p4 <= add_ln102_5_fu_583_p2(15 downto 8);
    xor_ln111_fu_604_p2 <= (trunc_ln1_reg_704 xor ap_const_lv8_80);
    zext_ln102_1_fu_220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln102_1_fu_208_p3),15));
    zext_ln102_2_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_reg_659),16));
    zext_ln102_3_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln102_2_fu_444_p3),16));
    zext_ln102_4_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_reg_648),16));
    zext_ln102_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_200_p3),15));
    zext_ln103_1_fu_270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln103_1_fu_258_p3),14));
    zext_ln103_2_fu_280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln102_1_fu_208_p3),14));
    zext_ln103_3_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln103_1_fu_284_p2),15));
    zext_ln103_4_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln103_2_fu_300_p3),15));
    zext_ln103_5_fu_320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln103_3_fu_308_p3),15));
    zext_ln103_6_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln103_4_fu_330_p3),16));
    zext_ln103_7_fu_342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln103_4_fu_330_p3),15));
    zext_ln103_8_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln103_3_reg_679),16));
    zext_ln103_9_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln102_3_fu_473_p3),17));
    zext_ln103_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_250_p3),14));
    zext_ln104_1_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln104_1_fu_370_p3),16));
    zext_ln104_2_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln104_2_fu_392_p3),15));
    zext_ln104_3_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln104_fu_404_p2),16));
    zext_ln104_4_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln104_3_fu_531_p3),17));
    zext_ln104_5_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln104_1_fu_542_p2),19));
    zext_ln104_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_362_p3),16));
end behav;
